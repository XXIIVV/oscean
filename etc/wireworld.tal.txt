( wireworld )

|00 @System &vector $2 &wst $1 &rst $1 &pad $4 &r $2 &g $2 &b $2 &debug $1 &halt $1
|20 @Screen &vector $2 &width $2 &height $2 &auto $1 &pad $1 &x $2 &y $2 &addr $2 &pixel $1 &sprite $1
|80 @Controller &vector $2 &button $1 &key $1 &func $1
|90 @Mouse &vector $2 &x $2 &y $2 &state $1 &pad $3 &modx $2 &mody $2

|000

	@color $1
	@timer &play $1

|100

@on-reset ( -> )
	;meta #06 DEO2
	( | theme )
	#07fe .System/r DEO2
	#07c6 .System/g DEO2
	#0fc6 .System/b DEO2
	( | size )
	#0200 .Screen/width DEO2
	#0100 .Screen/height DEO2
	( | vectors )
	;on-frame .Screen/vector DEO2
	;on-mouse .Mouse/vector DEO2
	;on-button .Controller/vector DEO2
	( | init )
	bar/<draw>
	<setup-world>
	#01 <set-color>
	timer/<toggle>
	BRK

@meta $1
	( name ) "Wireworld 0a
	( desc ) "Celluar 20 "Automata 0a
	( auth ) "By 20 "Devine 20 "Lu 20 "Linvega 0a
	( date ) "27 20 "Apr 20 "2025 $1 00

@on-frame ( -> )
	[ LIT2 00 -Mouse/state ] DEI NEQ ?{
		[ LIT2 00 -timer/play ] LDZ EQU ?{
			[ LIT2 03 &f $1 ] INCk ,&f STR
			( every 4th ) AND ?{ run } } }
	BRK

@on-mouse ( -> )
	cursor/<update>
	.Mouse/state DEI ?&when-down
	BRK

	&when-down ( -> )
	.Mouse/y DEI2 #0019 LTH2 ?&when-down-menu
	.Mouse/y DEI2 #03 SFT2 NIP #02 NEQ ?{
		.Mouse/x DEI2 #03 SFT2 NIP
		( ) DUP #02 NEQ ?{ #01 <set-color> }
		( ) DUP #03 NEQ ?{ #02 <set-color> }
		( ) DUP #04 NEQ ?{ #03 <set-color> }
		( ) DUP #06 NEQ ?{
			timer/<toggle>
			[ LIT2 00 -Mouse/state ] DEO }
		POP }
	<paint-cell>
	BRK

	&when-down-menu ( -> )
	.Mouse/x DEI2 #03 SFT2 NIP
	( ) DUP #01 NEQ ?{ #01 <set-color> }
	( ) DUP #02 NEQ ?{ #02 <set-color> }
	( ) DUP #03 NEQ ?{ #03 <set-color> }
	( ) DUP #05 NEQ ?{
		timer/<toggle>
		[ LIT2 00 -Mouse/state ] DEO }
	POP BRK

@on-button ( -> )
	.Controller/button DEI2
	( | keys )
	( ) DUP #20 NEQ ?{ timer/<toggle> }
	( ) DUP #08 NEQ ?{ <reset> }
	POP
	( | buttons )
	( ) [ #01 ] NEQk NIP ?{ #01 <set-color> }
	( ) [ #02 ] NEQk NIP ?{ #02 <set-color> }
	( ) [ #04 ] NEQk NIP ?{ #03 <set-color> }
	( ) [ #08 ] NEQk NIP ?{ <reset> }
	POP BRK

(
@|core )

@timer/<toggle> ( -- )
	.&play LDZk #00 EQU SWP STZ !<draw-ui>

@<set-color> ( color -- )
	DUP .color LDZ NEQ ?{ POP JMP2r }
	.color STZ !cursor/<update>

@<paint-cell> ( -- )
	( color ) .color LDZ .Mouse/state DEI #01 GTH #00 EQU MUL STHk
	( color x* y* ) .Mouse/x DEI2 #03 SFT2 .Mouse/y DEI2 #03 SFT2
	( color x* y* color ) OVR2 OVR2 get-cell STHr NEQ ?{ POP2 POP2 POP JMP2r }
	( color x* y* ) <set-cell> !<redraw>

@<reset> ( -- )
	;world #2000 OVR2 ADD2 SWP2
	&>loop ( -- )
		STH2k #00 STH2r STA
		INC2 GTH2k ?&>loop
	POP2 POP2 run !<redraw>

@run ( -- )
	;cell-icn .Screen/addr DEO2
	#2000
	&>ver ( -- )
		DUP ,&y STR
		STHk #4000
		&>hor ( -- )
			DUP ,&x STR
			( x,y ) DUP STHkr
			( cell ) DUP2 get-addr STH2k LDA
			( update ) transform
			( draw ) STHk #00 EQU ?{
				( x ) [ LIT2 00 &x $1 ] #30 SFT2 .Screen/x DEO2
				( x ) [ LIT2 00 &y $1 ] #30 SFT2 .Screen/y DEO2
				DUPr [ LITr -Screen/sprite ] DEOr }
			STHr STH2r [ LIT2 &future 1000 ] ADD2 STA
			INC GTHk ?&>hor
		POP2 POPr INC GTHk ?&>ver
	POP2
	( | Swap worlds )
	;get-addr/current LDA2 ;run/future LDA2 STH2k ADD2 ;get-addr/current STA2
	#0000 STH2r SUB2 ;run/future STA2
	JMP2r

@get-addr ( x y -- addr* )
	#00 SWP #60 SFT2 ROT #00 SWP ADD2 [ LIT2 &current =world ] ADD2 JMP2r

@get-cell ( x* y* -- cell )
	#60 SFT2 ADD2 ;get-addr/current LDA2 ADD2 LDA JMP2r

@<set-cell> ( cell x* y* -- addr* )
	#60 SFT2 ADD2 ;get-addr/current LDA2 ADD2 STA
	JMP2r

@transform ( xy cell -- cell )
	DUP ?{ NIP NIP JMP2r }
	DUP #03 NEQ ?{ POP POP2 #02 JMP2r }
	DUP #02 NEQ ?{ POP POP2 #01 JMP2r }
	DUP #01 NEQ ?{
		POP LITr 00 DUP2 #01 SUB get-addr
		( tl ) #0001 SUB2 LDAk #03 [ NEQ JMP INCr ]
		( tc ) INC2 LDAk #03 [ NEQ JMP INCr ]
		( tr ) INC2 LDA #03 [ NEQ JMP INCr ] DUP2 get-addr
		( ml ) #0001 SUB2 LDAk #03 [ NEQ JMP INCr ]
		( mr ) INC2 INC2 LDA #03 [ NEQ JMP INCr ] INC get-addr
		( bl ) #0001 SUB2 LDAk #03 [ NEQ JMP INCr ]
		( bc ) INC2 LDAk #03 [ NEQ JMP INCr ]
		( br ) INC2 LDA #03 [ NEQ JMP INCr ]
		( .. ) STHkr #02 EQU STHr #01 EQU ORA DUP ADD INC JMP2r }
	( unknown ) NIP NIP JMP2r

(
@|drawing )

@<redraw> ( -- )
	( | clear )
	#0000 .Screen/x DEO2
	#0018 .Screen/y DEO2
	[ LIT2 80 -Screen/pixel ] DEO
	( | paint )
	;cell-icn .Screen/addr DEO2
	#0800 #0000
	&>l ( -- )
		DUP2 ;get-addr/current LDA2 ADD2 LDA STHk #00 EQU ?{
			DUP2 #003f AND2 #30 SFT2 .Screen/x DEO2
			DUP2 #36 SFT2 .Screen/y DEO2
			DUPr [ LITr -Screen/sprite ] DEOr }
		POPr INC2 GTH2k ?&>l
	POP2 POP2 JMP2r

@<draw-ui> ( -- )
	( | colors )
	[ LIT2 01 -Screen/auto ] DEO
	#0008 DUP2 .Screen/x DEO2
	.Screen/y DEO2
	;cell-icn .Screen/addr DEO2
	[ LIT2 01 -Screen/sprite ] DEO
	[ LIT2 02 -Screen/sprite ] DEO
	[ LIT2 03 -Screen/sprite ] DEO
	( | toggle )
	#0028 .Screen/x DEO2
	;toggle-icn [ LIT2 00 -timer/play ] LDZ #30 SFT2 ADD2 .Screen/addr DEO2
	[ LIT2 01 -Screen/sprite ] DEO
	JMP2r

@bar/<draw> ( -- )
	#0000 .Screen/x DEO2
	#0010 .Screen/y DEO2
	;&sprite-icn .Screen/addr DEO2
	[ LIT2 01 -Screen/auto ] DEO
	#c0 [ LIT2r 01 -Screen/sprite ]
	&>l ( -- )
		DEOkr
		INC DUP ?&>l
	POP POP2r JMP2r

	&sprite-icn [ 0000 0000 0000 00aa ]

@<setup-world> ( -- )
	#01 #0010 #0010 <set-cell>
	#01 #0011 #000f <set-cell>
	#02 #0012 #000f <set-cell>
	#03 #0013 #000f <set-cell>
	#01 #0014 #0010 <set-cell>
	#01 #0011 #0011 <set-cell>
	#01 #0012 #0011 <set-cell>
	#01 #0013 #0011 <set-cell>
	#01 #0014 #0010 <set-cell>
	#01 #0015 #0010 <set-cell>
	#01 #0016 #0010 <set-cell>
	( | up )
	#01 #0017 #000f <set-cell>
	#01 #0018 #000e <set-cell>
	#01 #0019 #000d <set-cell>
	#01 #0019 #000c <set-cell>
	#01 #0018 #000b <set-cell>
	#01 #0019 #000b <set-cell>
	#01 #001a #000b <set-cell>
	#01 #0018 #000a <set-cell>
	#01 #001a #000a <set-cell>
	#01 #0019 #0009 <set-cell>
	#01 #0019 #0008 <set-cell>
	#01 #0019 #0007 <set-cell>
	( | down )
	#01 #0017 #0011 <set-cell>
	#01 #0018 #0012 <set-cell>
	#01 #0019 #0013 <set-cell>
	#01 #0019 #0014 <set-cell>
	#01 #0018 #0015 <set-cell>
	#01 #001a #0015 <set-cell>
	#01 #0018 #0016 <set-cell>
	#01 #0019 #0016 <set-cell>
	#01 #001a #0016 <set-cell>
	#01 #0019 #0017 <set-cell>
	#01 #0019 #0018 <set-cell>
	#01 #0019 #0019 <set-cell>
	JMP2r

(
@|Objects )

@cursor/<update> ( -- )
	#40 /<draw>
	.Mouse/x DEI2 ,&x STR2
	.Mouse/y DEI2 ,&y STR2
	[ LIT2 40 -color ] LDZ ADD
	( >> )

@cursor/<draw> ( color -- )
	;&sprite-icn .Screen/addr DEO2
	[ LIT2 &x $2 ] .Screen/x DEO2
	[ LIT2 &y $2 ] .Screen/y DEO2
	.Screen/sprite DEO
	JMP2r

@cursor/sprite-icn [ 80c0 e0f0 f8e0 1000 ]

(
@|assets )

@cell-icn [ 7cfe fefe fefe 7c00 ]

@toggle-icn [ 6666 6666 6666 6600 4666 767e 7666 4600 ]

@world ( | I live in the atom with the happy protons and neutrons.
	| I'm also so negative all the freakin time.
	| What do I do?
	| How do I find peace? )


