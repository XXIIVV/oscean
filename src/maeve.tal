( Oh time thy pyramids )

|00 @System/vector $2 &expansion $2 &wst $1 &rst $1 &metadata $2 &r $2 &g $2 &b $2 &debug $1 &state $1
|a0 @File/vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2
|b0 @File2/vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|100

@on-reset ( -> )
	( | clear old copies )
	;dict/journal-path .File2/name DEO2
	[ LIT2 01 -File2/delete ] DEO
	( | setup output )
	[ LIT2 01 -File2/append ] DEO
	#0001 .File2/length DEO2
	( | lexicon )
	lexicon/<build>
	diary/<build>
	( | print next available id )
	;dict/available-txt str/<print>
	diaries/next dec/<print>
	#0a18 DEO
	( | halt. )
	#800f DEO
	BRK

(
@|framework )

%<lb> { ;dict/0a .File2/write DEO2 }

%<ws> { ;dict/20 .File2/write DEO2 }

%<len> ( str* len* -- ) {
	.File2/length DEO2
	.File2/write DEO2
	#0001 .File2/length DEO2 }

%<str> ( str* -- ) {
	DUP2 scap/ OVR2 SUB2 <len> }

%<w> ( name* -- ) {
	;ascii/lt .File2/write DEO2
	<str>
	;ascii/gt .File2/write DEO2 }

%</w> ( name* -- ) {
	;ascii/lt .File2/write DEO2
	;ascii/slash .File2/write DEO2
	<str>
	;ascii/gt .File2/write DEO2 }

@<img> ( src* alt* -- )
	;&a <str>
	<str>
	;&b <str>
	<str>
	;&c <str>
	JMP2r

	&a "<img 20 "alt=" $1
	&b "" 20 "src="../media/diary/ $1
	&c ".jpg"> $1

@<link> ( str* -- )
	;&a <str>
	DUP2 <path>
	;&b <str>
	<str>
	;&c <str>
	JMP2r

	&a "<a 20 "href=' $1
	&b ".html'> $1
	&c "</a> $1

@<path> ( str* -- )
	LDAk [ LIT "_ ] OVR #20 NEQ [ JMP SWP POP ] ,&a STR
	;&a .File2/write DEO2
	INC2 LDAk ?<path>
	POP2 JMP2r
	&a $1

(
@|link )

%link/is-anchor ( path* -- path* t ) {
	LDAk [ LIT "# ] EQU }

%link/is-relative ( path* -- path* t ) {
	LDAk [ LIT ". ] EQU }

@link/is-external ( path* -- path* t )
	LDA2k [ LIT2 "ht ] NEQ2 ?{
		INC2k INC2 LDA2 [ LIT2 "tp ] EQU2 JMP2r }
	#00 JMP2r

@link/has-html-ext ( str* -- t )
	LDA2k [ LIT2 ".h ] NEQ2 ?{
		INC2 INC2 LDA2k [ LIT2 "tm ] NEQ2 ?{
			INC2 INC2 LDA [ LIT "l ] EQU JMP2r } }
	POP2 #00 JMP2r

@link/<print-err> ( src* link* -- src* link* )
	#010f DEO
	;dict/redlink str/<print>
	;&res str/<print>
	;dict/in str/<print>
	DUP2 !str/<print-ln>

@link/<parse> ( src* link* -- )
	link/is-relative ?{
		link/is-anchor ?{
			link/is-external ?{
				/set
				( | handlers )
				;&res lexicon/find INC2 ORA ?{ /<print-err> }
				/has-html-ext ?{ /<print-err> }
				;&res [ LIT2 20 "_ ] str/<swap-char>
				;&map-path .File2/name DEO2
				<str>
				<lb>
				JMP2r } } }
	POP2 POP2 JMP2r

@link/set ( str* -- buf* str* )
	;&res ,&ptr STR2
	&>w
		LDAk DUP #1f GTH ?{ &end POP JMP2r }
		DUP [ LIT ". ] EQU ?&end
		DUP [ LIT "_ ] NEQ ?{ POP #20 }
		#00 [ LIT2 &ptr =&res ] INC2k ,&ptr STR2
		STA2
		INC2 !&>w

	&map-path [ "tmp/map- &res $30 ]

(
@|lexicon )

@lexicon/<build> ( -- )
	;dict/sitemap-path .File2/name DEO2
	[ LIT2 01 -File2/delete ] DEO
	;dict/ul-tag <w>
	lexicon/<parse>
	;dict/ul-tag </w>
	JMP2r

@lexicon/find ( name* -- term* )
	,&t STR2
	;&buf
	&>w
		INC2 INC2 DUP2 [ LIT2 &t $2 ] str/cmp ?{
			str/cap LDAk ?&>w
		POP2 #ffff }
	JMP2r

%workarea/get-length ( -- buf* length* ) {
	;workarea/buf #0000 OVR2 SUB2 }

@lexicon/<parse> ( -- )
	;&buf
	( load ) DUP2 #2000 ;dict/lexicon-path <load-file>
	( swap ) DUP2 #0a00 str/<swap-char>
	( range ) .File/success DEI2 ADD2k NIP2 SWP2
	&>l
		INC2 INC2 DUP2 DUP2 ,&src STR2
		htm-path/set workarea/get-length ROT2 <load-file>
		;workarea/buf .File/success DEI2 ADD2k NIP2 SWP2
		&>ll
			LDA2k [ LIT2 "hr ] NEQ2 ?{
				INC2k INC2 LDA2 [ LIT2 "ef ] NEQ2 ?{
					[ LIT2 &src $2 ] OVR2 #0006 ADD2 link/<parse> } }
			INC2 GTH2k ?&>ll
		POP2 POP2
		( next ) str/cap GTH2k ?&>l
	POP2 POP2
	( | sitemap )
	;dict/sitemap-path .File2/name DEO2
	;lexicon/buf <write-children-rec>
	POP2 JMP2r

@<write-children-rec> ( addr* -- next* )
	( | take depth )
	LDAk STH
	( | name )
	;dict/li-tag <w>
	INC2 INC2 DUP2 <link>
	;dict/li-tag </w>
	<lb>
	str/cap
	( | children )
	LDAk STHkr INC NEQ ?{
		;dict/ul-tag <w>
		<write-children-rec>
		;dict/ul-tag </w> }
	( | sibling )
	LDAk STHkr EQU ?{ POPr JMP2r }
	POPr !<write-children-rec>

~src/include.tal

