( Oh time thy pyramids )

|a0 @File/vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2
|b0 @File2/vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|100

@on-reset ( -> )
	( | clear old copies )
	;dict/journal-path .File2/name DEO2
	[ LIT2 01 -File2/delete ] DEO
	( | setup output )
	[ LIT2 01 -File2/append ] DEO
	#0001 .File2/length DEO2
	( | lexicon )
	lexicon/<build>
	diary/<build>
	( | print next available id )
	;dict/available-txt str/<print>
	diaries/next dec/<print>
	#0a18 DEO
	( | halt. )
	#800f DEO
	BRK

(
@|framework )

%<lb> { ;dict/0a .File2/write DEO2 }

%<ws> { ;dict/20 .File2/write DEO2 }

%<len> ( str* len* -- ) {
	.File2/length DEO2
	.File2/write DEO2
	#0001 .File2/length DEO2 }

%<str> ( str* -- ) {
	DUP2 scap/ OVR2 SUB2 <len> }

%<w> ( name* -- ) {
	;ascii/lt .File2/write DEO2
	<str>
	;ascii/gt .File2/write DEO2 }

%</w> ( name* -- ) {
	;ascii/lt .File2/write DEO2
	;ascii/slash .File2/write DEO2
	<str>
	;ascii/gt .File2/write DEO2 }

@<img> ( src* alt* -- )
	;&a <str>
	<str>
	;&b <str>
	<str>
	;&c <str>
	JMP2r

	&a "<img 20 "alt=" $1
	&b "" 20 "src="../media/diary/ $1
	&c ".jpg"> $1

@<link> ( str* -- )
	;&a <str>
	DUP2 <path>
	;&b <str>
	<str>
	;&c <str>
	JMP2r

	&a "<a 20 "href=' $1
	&b ".html'> $1
	&c "</a> $1

@<path> ( str* -- )
	LDAk [ LIT "_ ] OVR #20 NEQ [ JMP SWP POP ] ,&a STR
	;&a .File2/write DEO2
	INC2 LDAk ?<path>
	POP2 JMP2r
	&a $1

(
@|link )

%link/is-anchor ( path* -- path* t ) {
	LDAk [ LIT "# ] EQU }

%link/is-relative ( path* -- path* t ) {
	LDAk [ LIT ". ] EQU }

@link/is-external ( path* -- path* t )
	LDA2k [ LIT2 "ht ] NEQ2 ?{
		INC2k INC2 LDA2 [ LIT2 "tp ] EQU2 JMP2r }
	#00 JMP2r

@link/has-html-ext ( str* -- t )
	LDA2k [ LIT2 ".h ] NEQ2 ?{
		INC2 INC2 LDA2k [ LIT2 "tm ] NEQ2 ?{
			INC2 INC2 LDA [ LIT "l ] EQU JMP2r } }
	POP2 #00 JMP2r

@link/<print-err> ( src* link* -- src* link* )
	#010f DEO
	;dict/redlink str/<print>
	;&res str/<print>
	;dict/in str/<print>
	DUP2 !str/<print-ln>

@link/<parse> ( src* link* -- )
	link/is-relative ?{
		link/is-anchor ?{
			link/is-external ?{
				/set
				( | handlers )
				;&res lexicon/find INC2 ORA ?{ /<print-err> }
				/has-html-ext ?{ /<print-err> }
				;&res [ LIT2 20 "_ ] str/<swap-char>
				;&map-path .File2/name DEO2
				<str>
				<lb>
				JMP2r } } }
	POP2 POP2 JMP2r

@link/set ( str* -- buf* str* )
	;&res ,&ptr STR2
	&>w
		LDAk DUP #1f GTH ?{ &end POP JMP2r }
		DUP [ LIT ". ] EQU ?&end
		DUP [ LIT "_ ] NEQ ?{ POP #20 }
		#00 [ LIT2 &ptr =&res ] INC2k ,&ptr STR2
		STA2
		INC2 !&>w

	&map-path [ "tmp/map- &res $30 ]

(
@|lexicon )

@lexicon/<build> ( -- )
	;dict/sitemap-path .File2/name DEO2
	[ LIT2 01 -File2/delete ] DEO
	;dict/ul-tag <w>
	lexicon/<parse>
	;dict/ul-tag </w>
	JMP2r

@<load-file> ( addr* length* path* -- )
	.File/name DEO2
	DUP2 .File/length DEO2
	SWP2 .File/read DEO2
	.File/success DEI2 NEQ2 ?{ .File/name DEI2 !str/<print-ln> }
	JMP2r

@lexicon/find ( name* -- term* )
	,&t STR2
	;&buf
	&>w
		INC2 INC2 DUP2 [ LIT2 &t $2 ] str/cmp ?{
			str/cap LDAk ?&>w
		POP2 #ffff }
	JMP2r

%workarea/get-length ( -- buf* length* ) {
	;workarea/buf #0000 OVR2 SUB2 }

@lexicon/<parse> ( -- )
	;&buf
	( load ) DUP2 #2000 ;dict/lexicon-path <load-file>
	( swap ) DUP2 #0a00 str/<swap-char>
	( range ) .File/success DEI2 ADD2k NIP2 SWP2
	&>l
		INC2 INC2 DUP2 DUP2 ,&src STR2
		htm-path/set workarea/get-length ROT2 <load-file>
		;workarea/buf .File/success DEI2 ADD2k NIP2 SWP2
		&>ll
			LDA2k [ LIT2 "hr ] NEQ2 ?{
				INC2k INC2 LDA2 [ LIT2 "ef ] NEQ2 ?{
					[ LIT2 &src $2 ] OVR2 #0006 ADD2 link/<parse> } }
			INC2 GTH2k ?&>ll
		POP2 POP2
		( next ) str/cap GTH2k ?&>l
	POP2 POP2
	( | sitemap )
	;dict/sitemap-path .File2/name DEO2
	;lexicon/buf <write-children-rec>
	POP2 JMP2r

@<write-children-rec> ( addr* -- next* )
	( | take depth )
	LDAk STH
	( | name )
	;dict/li-tag <w>
	INC2 INC2 DUP2 <link>
	;dict/li-tag </w>
	<lb>
	str/cap
	( | children )
	LDAk STHkr INC NEQ ?{
		;dict/ul-tag <w>
		<write-children-rec>
		;dict/ul-tag </w> }
	( | sibling )
	LDAk STHkr EQU ?{ POPr JMP2r }
	POPr !<write-children-rec>

(
@|diary )

@diary/<build> ( -- )
	;dict/events-path .File2/name DEO2
	[ LIT2 01 -File2/delete ] DEO
	;header-txt <str>
	;dict/p-tag <w>
	<parse-diary-pages>
	;dict/p-tag </w>
	JMP2r

@log/is-unpict ( log* -- t )
	#0006 ADD2 LDA2k [ LIT2 "00 ] EQU2 ?{ POP2 #00 JMP2r }
	INC2 INC2 LDA [ LIT "0 ] EQU JMP2r

%log/is-ignored ( log* -- log* t ) {
	DUP2 #0005 ADD2 LDA [ LIT ". ] EQU }

%log/is-unevent ( log* -- log* t ) {
	DUP2 #0005 ADD2 LDA [ LIT "+ ] NEQ }

@<parse-diary-pages> ( -- )
	#4000 .File/length DEO2
	;diary-path-pages/end ;diary-path-pages
	&>l
		LDA2k workarea/get-length ROT2 <load-file>
		#0000
		( to* from* ) ;workarea/buf .File/success DEI2 ADD2
		( cap ) STA2k NIP2 ;workarea/buf <parse-diary-page>
		INC2 INC2 GTH2k ?&>l
	POP2 POP2 JMP2r

@<parse-diary-page> ( to* from* -- )
	DUP2 #0a00 str/<swap-char>
	&>l
		DUP2 DUP2 #000a ADD2 diary/set-path .File2/name DEO2
		<str>
		<lb>
		( split ) DUP2 #0900 str/<swap-char>
		DUP2 diaries/<set>
		log/is-unevent ?{ DUP2 <parse-event> }
		log/is-ignored ?{
			DUP2 log/is-unpict ?{ DUP2 <add-to-journal> } }
		( eol ) str/cap str/cap str/cap GTH2k ?&>l
	POP2 POP2 JMP2r

@<parse-event> ( event* -- )
	( | add to events )
	;dict/events-path .File2/name DEO2
	( year ) LDAk2 ;&last LDA2 EQU2 ?{
		;dict/br-tag <w>
		LDA2k ;&last STA2 }
	( | date )
	;dict/code-tag <w>
	DUP2 #0005 <len>
	;dict/code-tag </w>
	<ws>
	str/cap
	( | term )
	DUP2 <link>
	;dict/spacer <str>
	str/cap
	( | name )
	<str>
	;dict/br-tag <w>
	<lb>
	JMP2r

	&last "17 $1

@<add-to-journal> ( photo* -- )
	( | limit to 20 entries )
	[ LIT2 &len $2 ] INC2k ,&len STR2
	#0020 LTH2 ?{ POP2 JMP2r }
	;dict/journal-path .File2/name DEO2
	DUP2 #0006 ADD2 ,&pict STR2
	#000a ADD2 DUP2 ,&term STR2
	str/cap ,&title STR2
	;dict/figure-tag <w>
	( src ) [ LIT2 &pict $2 ]
	( alt ) [ LIT2 &title $2 ] <img>
	;dict/figcaption-tag <w>
	[ LIT2 &term $2 ] <link>
	;dict/spacer <str>
	,&title LDR2 <str>
	;dict/figcaption-tag </w>
	;dict/figure-tag </w>
	<lb>
	JMP2r

(
@|validate )

@diaries/get ( id* -- mask )
	( bit ) #01 OVR #07 AND #40 SFT SFT STH
	( res ) #03 SFT2 ;&buf ADD2 LDA STHr AND JMP2r

@diaries/<set> ( log* -- )
	( | validate photo id )
	#0006 ADD2 str/to-dec ORAk ?{ POP2 JMP2r }
	DUP2 /get ?{
		( bit ) #01 OVR #07 AND #40 SFT SFT STH
		( res ) #03 SFT2 ;&buf ADD2 LDAk STHr ORA ROT ROT STA
		JMP2r }
	;dict/warn-duplicate str/<print>
	dec/<print>
	#0a18 DEO
	JMP2r

@diaries/next ( -- id* )
	#0001
	&>w
		DUP2 /get ?{ JMP2r }
		INC2 !&>w

(
@|buffers )

@htm-path/set ( name* -- res* )
	;&buf ,&ptr STR2
	;&res SWP2 /<push-str>
	;dict/htm-ext
	( >> )

@htm-path/<push-str> ( str* -- )
	&>w
		LDAk DUP ?{ POP POP2 JMP2r }
		DUP #20 NEQ ?{
			POP [ LIT "_ ] }
		#00 [ LIT2 &ptr =&buf ] INC2k ,&ptr STR2
		STA2
		INC2 !&>w

	&res [ "src/htm/ &buf $30 ]

@diary/set-path ( name* -- buf* )
	;&resbuf ,&ptr STR2
	;&res SWP2
	&>w
		LDAk DUP #1f GTH ?{ POP POP2 JMP2r }
		DUP #20 NEQ ?{ POP LIT "_ }
		#00 [ LIT2 &ptr =&resbuf ] INC2k ,&ptr STR2
		STA2
		INC2 !&>w

	&res [ "tmp/log- &resbuf $30 ]

(
@|stdlib )

@str/cmp ( a* b* -- f )
	STH2
	&>wcm
		LDAk ?{ &d LDA LDAr STHr EQU JMP2r }
		LDAk LDAkr STHr NEQ ?&d
		INC2 INC2r !&>wcm

@scap ( str* -- end* )
	INC2 & LDAk ?scap
	JMP2r

@str/cap ( str* -- end* )
	&>wc
		LDAk ?{ INC2 JMP2r }
		INC2 !&>wc

@str/<swap-char> ( str* a b -- )
	,&b STR
	,&a STR
	&>wsc
		LDAk [ LIT &a $1 ] NEQ ?{
			STH2k [ LIT &b $1 ] STH2r STA }
		INC2 LDAk ?&>wsc
	POP2 JMP2r

@str/to-dec ( str* -- val* )
	[ LIT2r 0000 ]
	&>w
		LIT2r 000a MUL2r [ LITr 00 ] LDAk #30 SUB STH
		ADD2r INC2 LDAk ?&>w
	POP2 STH2r JMP2r

@str/<print> ( str* -- )
	LDAk DUP ?{ POP POP2 JMP2r }
	#18 DEO
	INC2 !/<print>

@str/<print-ln> ( str* -- )
	/<print>
	#0a18 DEO
	JMP2r

@dec/<print> ( dec* -- )
	#000a SWP2 [ LITr ff ]
	&>get
		SWP2k DIV2k MUL2 SUB2 STH
		POP OVR2 DIV2 ORAk ?&>get
	POP2 POP2
	&>put
		STHr INCk ?{ POP JMP2r }
		[ LIT "0 ] ADD #18 DEO !&>put

~src/include.tal

