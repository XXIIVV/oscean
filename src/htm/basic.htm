<h2>10 PRINT "Hello World"</h2>

<p>This guide is written specifically for the <a href='https://git.sr.ht/~rabbits/tiny-basic' target='_blank'>Sunflower BASIC implementation</a>, but it should still give a general idea of how to use the language's primitives which are also found in most BASIC implementations.</p>

<figure>
	<img src='../media/refs/vogue-basic.jpg' width='300'/>
	<figcaption>Typical BASIC Programmer</figcaption>
</figure>

<h3>Introduction</h3>

<p>A BASIC program begins with line numbers, control-flow is done by jumping to absolute line numbers which point to compiled BASIC code data. 0 is not a valid line number.</p>

<pre>
<span class='line'>15</span> <span class='cmd'>LET</span> A=0
<span class='line'>20</span> <span class='cmd'>PRINT</span> "Hello BASIC"
<span class='line'>25</span> <span class='cmd'>LET</span> A=A+1
<span class='line'>30</span> <span class='cmd'>IF</span> A=10 GOTO 50
<span class='line'>40</span> <span class='cmd'>GOTO</span> 20
<span class='line'>50</span> <span class='cmd'>END</span>
</pre>

<h3>Interpreter</h3>

<iframe height='384' width='624' src="../etc/uxn5/index.html#r=bKABYIAGN6Dg8YAIN6Dg7oAKN6DwSoAMN6ACcIAiN6ABgIAkN4AiNoBXYAdhgCQ2gEhgB1lgCzRgC3FgCO1gCWmgBwiAEDegAaGAgDeAdBAgAARgCXkAYAGQoAB0YARfAABUaW55QkFTSUMKQSCBB38gaW50ZXJwcmV0ZXIKQnkgRGV2aW5lIEx1IExpbnZlZ2EKMjUgQXVnIDIwMjUAAICDFmAGGQBgAIuvYAB7oA5AoA4UtDTvYAwVIAANISGqIP_xIiJioAAAbGIjNKAABDhsgCg2oA48oA4U4AAAz4ADHCAAA2AKAO-gAAM8gGA_oEQAIDiAKDe0NGAJSCEhQaog_9siImKAKDdgCbxgCbmgDppgCS9gCbBACdOgAAI5NGAJIWAJokAJxZSAIAogAAFsIUD_9JSACAaUgCwIIAAHghcqBSGUIP_obGAAOSRg_-CUDyRPYAHdnSAAAiJsgBEzgAgzIWAAHoAEM6AAAIICBC4kYP-4gicXtZ0g_9oibGD_qJSAJAggADqUYArvIAARggYgEKAAACegDwxACFGhJBRABfPgAADgAAp6wACUgDAZD3ghgAYUgAoLIP_pb2wh4AAAwEB_wACUYAq6gBtRYAqzASD_7G9soBkVoEAAYAryYASCQAWMgCA_oBkVOGxg_4hg__ImoFkVKyAACyIioA8DoA7ZQAflL2D_GZQgAA4ioAAA72FhNaAAAG81bGD-doAMQWD-_aAHXTRvNUAD_qAABDhsoFkVJOAAALQdIAAGYP_sQAAYYd1PIAAMIiJioA7QoA7oQAeToSE0JzQuqiD_2SIiYoAxDqAZFbSgAAAoIAAEJmAAMIBIBaog_-wiIoocDAwmJqAZFTmAAj9gCVKDJAPkIiJshBUFQAcUoAAAgI8iOWAHuKAOjWAHbkAIFThsOWw6bDxsPWyggACvOCRvOCqAAASFDAArgAwAKIARACmAFn-7OjlsnYAACCAAEWAAF686JGAAEa86eiQ7bzpsITsnoA7tQAbRJoAPP6D__zqgAAE9bA-gDkCUzwggAAchISGUIP_zITRCbA8kDygioBkVQP7tD1kPXmD91ZQgAAciYP8QQAeDYP3gL2D9w5QgAAsib2D-fGD_PEAHbWD9ymD-cFkhI29g_mpg_u5AB1sPwg_IImAHz0D-Sg_mD-oiQP6bEBIQFmD9iJQgAAQiQP6MlIAZEyFg_XiUgD0IIAAJoA8TYAYzQP50IWD9fYAAYAO2QP_REEcQSmD9bh2CMjlZQAjVEHgQfWD9XCZg_gE0HSAADCIjoPAAJKAO2UAF9iMjQP3rEKUQqSIioP_wbBDFEMtg_TEmYP3WjCpSyyMkoAAEOGACRkD9uRD5EQAiIkACVhEuETSgAQ0TYPzjYAASlCD_9iKgAAAIIAADYAaEQP3alIA7CSAACCGgAOkTQAZ4lIAiCSAABCFABbGUgCOBGRVg_MIDQAXDlGAH3SAABmD8tEAF05SAgEIRBqARLkAFU2wRjRGTYAMIYANYgKJXEcMRyGD8dWABc6AAdGAHkiAACaAAdKAO40AFKGD9EGABm2ACdaAAdICoN6AAAYCqN-AGBMCsgKP3liAADEJiAmD9yWAEzkD9P4AAYAG4QP_nEeoR72D8JIUvCWD9eED9IRISEhiChjMSYPwggAg3YPwagAo3YPwUgAw3IkD9ABJKEk4ioAAgoAvKNWAD2WAFm0D86xJiEmdg-_Gdgb8FCSaAKDcmgB8DImD73YITfwQmgCo3IiJgBW1A_L0SixKQYPvDIwOgC20VQPytEqsSsmD7s2ADRGD7rWADPmD7p2ADOGD7oWADMiJA_I0S6BLtYPt6YALKQPyADsUBYWD7bZQgAAQiQPsCYPrUnSAAByOgDxxABB8jQPs5ExYTG2D7ZYAwP6AT2TgvYPtBlCAAYAUiYkD8RGD7Tu9hYTVA_-qgChIWiSAACCKgAHRg_qcAYAACAgCgAHQGgLMJIAAKIqAPA6AO3kADzYGA6hMxbGAGf6AAdEAGuZQgAAIibJQGgB8KIAAHAiKAAEAAB2AABCGAUwZZFSag7_gphT8b2UADjaGA6DMVbKBZFYDgMic5QAZioBjLJqAZC4UlHRDFQANnoSGA5zM1bIDiMiagGMspIAANIqDwAKAO-YEef0igAAI5JoDFMzRsBoAICCAAJgaACgggAH8GgA0IIAB4gCCLAyAAD4B-igMgAAgGYAB4BmAAkwJsAqAAbxIJIAABbGAAd6AAJhdgBAKAKLagACCqDCQiBTegAC8XoAEmF0AD14DFECAAFqAAAJSAIAsgAAqUYAVjIPrRQAWPImygKAAAYPn8YPoSYADAIAAEIkAA25Qg_-wibAJgA5hg_8SgAACAAAaABBMxgCoLBoA_CSAAAiJsgYDygRE97BKAARkGgOUTEWxgAtNAA2ugAECgADRABVeAQRkGgBoLIAAIAiKgDxNAAl8GGIBAGDFsBoBSCSAABAJABDKAI4AUMTBsYPl4lGAExoAACCAABJRgAAchlCD_6iJsgLQGgMQJIAAKAqAPA6AO2UACGIGA6hMRgRgC4hILgEgxgABsgYDvExBsYP_pYP-HgMsSgOESGWygAAQ4gMUxoAlBgJA3oAlpgIA3bGAC_KABJheA1AqQN6ABoYCAN4DFMIDjN8UxQPoGYALpgACAlhYGgPgToAABKCAAAQCAkjZg_6UCgJQ2YP-eIAADYP-6AKAAghYGIAAOIoCDgAcJAgIAYP5CAGD_foEfLZoAJmADzyAABqAO40ABaCaAqDegAAiAqjdgAGSAFBOAIBOAKDaAFDOgGQ2ALDeDjwXgC21UwC-AmAQoN6AAAIAbC6w31wGKIP_0ImAB7oAISuIiYmygGQ2hIa-A-DM1b6AZFSkgABGgGQ0mgCw3gOUzoAttFIAvF2xgA6WgAAo5tGAADA-gAAM4NGAAA08EbGADdQRgA3GAQB8dbIVnCYAqN6CCLhegABiGDwCQgA-ChwAYgB8JoC4XgCI2oAAYOYYzAICEIwGAJIIZgxOBzAAghTsJQAE0oEYmF6AX24DpAgUvl4AABxdsYP9-YP_mgPluYAEzYAE2oA5kYACGYAEnoA51YAB9YPj7QAEbYAEYoA6-YABuQAEPJzQdIAADIiJsYACjYAEutKAABDk0YABTYAEiISE0YABKQADLoA7KYABBgDxgAEtgADmAPmAAQ4A6YAA-YAD-YAApYACqoBNRgoUiF4AotqAACDkFN2yUgCIIIAAJlGAAFiGUIP_wIWyUBiAAAwKAaRkEIUD_8QaACgkgAAQCQABqgAAEgDA_oBPZOIDMGwkvF2wHgIAcgAAIIAAOgC1g_9Sgf_88oIAAJDmA2SWAAIAiE6AnEGAAGaAD6GAAE6AAZGAADaAACmAABwOAMBhA_6O7hoE9GAwGgDAYYP-UgP-A7xMCOjlsoAAggCg3gCqApRw4rwU3b4AkNqAAGDkrIAADQP5CbGAAF2D_2qATSYDPAAGIz4MTAAKI44LtADiAHSwSJheAQKATSUAAImD_8aAWJheAwaATmYCWFiAABCKgE1mAkjaACjOAlDaADjOA5QcAAKAABDmAKIUJGyo3gC-XF2ygDKSAqDegAAKAqjegDJKArDegDJiBBRCegKw3gKI2HSAAAWygAACACIBEAYAKgQUgDDdsLnRoZW1lAKAAxhagAMUWgGA_PqAAxBaAwD8-gCIzgQoLBD-gAMMWJjg-oADCgSAJgMA2gKA_PoAPM4BRByaAUD8-JoADgDgYACaA7TMmgAE_Pj6A8bMCbGAALYAgYABItIC1AzRgABCADUQ6ISE0YAAFgApAAC-UBiAAAwIibGAAJCFA__Hg_wCgAAq7rzo5b0GdIP_zIgOAMBhgAAhHWM8g__NibIAXE6ANbICuN2yB7QABgO0SDWyApDeAAGAAJgFsBmAAEiAAC4IGFASAJAlsAoAAbIBBGYAaC2yAMBmACoEGQQaACQoMbIAnGQaAChmABQoMbAKA_2yUIAACIWwhQP_2pmD_8iQhOWxg8-SdIAAHI6APHED9LywvlNRPCSAABmEhlICNEhSAAAhsgAszgAwzoA3xgAI3bACDAAKAFjODFwEOCYAXAAGEGH8AAARPBFoElASfBKcE2gTsBQ0FFwU_BUgFrAYLBboGIQZCBlcGhQaVBrUGwgbjKwPaLQPcKgPeLwQMJgPgfAPiPAPkPgPxPQP-IQQDJQQIAAAAU1VORkxPV0VSIEJBU0lDIABUWVBFICJIRUxQIiBGT1IgSU5GTyB_IAAgQllURQZTIEZSRUUKhyQFIFBSSU5UgiqBCg8gREVUQUlMUwBSRUFEWS4AgEk0AEVSUk9SAElORklOSVRFAExJTkUAUEFUSABGSUxFAExPT1AARElWLUJZLVpFUk8AVU5ERVKAlgIAT1aDCFJOVU1CRVIAVkFSSUFCTEUAQ09NTUFORABSVU4Af1JVTiBCZWdpbiBldmFsdWF0aW9uIGZyb20gc21hbGxlc3QgbGluZSBudW1iZXIuAExJU1QAf4AFACCEABVQcmludCBlbnRpcmUgcHJvZ3JhbS4KgiMBMTKII4FJATEygxsFMjAsIDMwiBsScyAyMCB0byAzMC4AQ0xFQVIAf4EGBiAgRXJhc2WMYy4AUkVNAH9SRU0gVGhpcyBpcyBhIGNvbW1lbnQuLiAgTGVhdmUgcmVtYXJrLgBMRYC3HUVUIFg9MTIsIFk9QSsxICBBc3NpZ24gZXhwcmVzc4D7Q3RvIHZhcmlhYmxlLgBJRgB_SUYgQT5CIFBSSU5UIEMgIEV2YWx1YXRlIG9ubHkgd2hlbiBub3QgemVyby4AR09UTwB_gAUAIIFfCUNvbnRpbnVlIGWCNYBhAGGC7BEuAEVORAB_RU5EICBUZXJtaW6AVIYngEwCU1VCgE0CU1VCgk6FexhzdWJyb3V0aW5lIHVudGlsIFJFVFVSTi4AggcBAH-CD5KAA2Zyb22HQQEuAIHbAQB_guIJIkEgc3RyaW5nIoLCEERpc3BsYXkgdGV4dCB3aXRogb0GYnJlYWsuCo0zATsggACIMwguAElOUFVUAH-BBgogWCwgWSAgUGF1c4mTgsURdXNlciBpbnB1dC4ATE9BRAB_gAWDERtiYXMgIExvYWQgYmFzaWMgZmlsZS4AU0FWRQB_gAUDIG91dIUnA1NhdmWJJwZDT0xPUgB_gQZJICQ1MGYyLCAkYjBmOSwgJGEwZjggIFNldCBpbnRlcmZhY2UgY29sb3JzLgBDTFMAf0NMUiAgQ2xlYXIgc2NyZWVuLgBEUkFXAH-ABQUgMzIsIDSDQAtkcmF3aW5nIHBvc2mA2AcuAE1PREUAf4AFASAyiiMCbW9kgMADUFJJVIDCgQcMICQxYzFjLCAkMDg3ZoEGIjE0LCAkMjI0MSAgUGFpbnQgOHg4IHNwcml0ZS4AUElDVAB_gAUOIGltYWdlMjB4MjAuaWNuhCwEMS1iaXSCGwcuAFBPS0UAf4AFCSAkMTAsICQxMjOAXQc0NTY3LCAuLoPCBWF0YSBhdIAiAi4A_4MAAapVggEHAAAAAAgUFBeABwMACAgIgQcCAADAgwcdABAQIBAQCAcADw8fDw8HAAAgEBAQICDAAMDg4ODAhSUACII_AQAAsz_A_gcAYIAABQBgAGZmZoL_HWz-bGz-bAAYPmA8BnwYAABmbBgwZkYAOGw4cN7MdoAvgf8BHDCAAAMcADgMgAAGOAAAZjz_PIBCBBgYfhgYg_8BMDCALAB-hf8cGBgAAwYMGDBgwAA8Zm52ZmY8ABg4GBgYGH4APGaAGBV-AH4MGAwGZjwADBw8bH4MDAB-YHwGgA8DPGBgfIAvAH6APwUwMAA8ZmaAAoAHAT4GgH-AdIMDAxgYMACAZQIwGAyCfgV-AAAwGAyAeYJnAQAYgH8Pam5gPgAYPGZmfmZmAHxmZoACFwA8ZmBgYGY8AHhsZmZmbHgAfmBgfGBgfoMHCmAAPmBgbmZmPgBmgTYCZgA8gL4FGDwAPgYGgacIZmx4cHhsZgBggQAOfgDG7v7WxsbGAGZ2fn5ugC8AZoAAADyBb4BPgA8Cdmw2gX8AbIEfAWA8gP8AfoFXABiAZwBmg28MZmY8GADGxsbW_u7GAIAMAjxmZoCHgIIBAH6A3QRgfgA8MIAAAjwAwID9BAYDADwMgAAGPAAQOGzGAIUABf4AAGAwGIIPCTwGPmY-AGBgfGaA_woAADxgYGA8AAYGPoF3CgAAPGZ-YDwAHDB8gFkIAAAAPmZmPgZ8gi8EZgAYADiB_wEYAIGwBHBgYGZsgP-AFYAXBQAA7P7WxoB6gi-AT4D_gg8BfGCBTwJmPgaAHwJgYGCAXw1gPAZ8AAAYfhgYGA4AAIH5gIeC_wYAAMbG1nxsgBcCPBg8gE-BPg98AAB-DBgwfgAcMDBgMDAcgo0ZGBgYOAwMBgwMOAAAAGDyngwAABA4fP58OBCC-gQAAAADA4MKCOAAABgYPH5-foMaAAeCIgTAwAEBAYEtCPj8_v__fz8f_4EADMMAHz9____-_PiAgICDMSQPPz8PBwD-_vz8_Pz-_gAAQgAAQjwAf38_Pz8_f38A4PD8_PDggnkCAQEBhD8BAMOCUYRfgZoCgICAhJmDMQgAfn5-PBgYGRuCmAPgwMDAhcSDsYLKBx6c2Hg4EAgQ" style='border:0' allowfullscreen></iframe>

<p>Expressions can include numbers, variables and arithmetic operators. Numbers are decimal, but can be prefixed with <kbd>$</kbd> for <a href='hexadecimal.html'>hexadecimal</a>, there are no <a href='notation.html'>precedence rules</a>.</p>

<pre>
10 LET A=6+7
20 PRINT 52+$20*A
30 END
</pre>

<p>Valid expressions arithmetic operators are <kbd>+-*/%</kbd>, bitwise operators are <kbd>&|</kbd>, logic operators are <kbd>&lt;&gt;=!</kbd>. The smallest number is -32768, the largest number is 32767.</p>

<h3>Variables</h3>

<p>Variables are single character uppercased letters of the alphabet. Some variables have special properties, here is the complete list:</p>

<ul>
	<li><kbd>R</kbd>, reads a random number.</li>
	<li><kbd>W</kbd>, reads the screen width.</li>
	<li><kbd>H</kbd>, reads the screen height.</li>
</ul>

<p>For example, if you wanted to do a program to roll a 6-sided dice using the <kbd>R</kbd>(random) variable.</p>

<pre>
10 PRINT "You rolled " R%6+1 "."
30 END
</pre>
<pre style='margin-top:-29px'>
You rolled 5.
</pre>


<h3>Loops</h3>

<p>Using a variable as counter, a program can loop over a number of lines five times:</p>

<pre>
10 LET I=0
20 PRINT "Count: " I
25 LET I=I+1
30 IF I<5 GOTO 20
40 END
</pre>
<pre style='margin-top:-29px'>
Count: 0
Count: 1
Count: 2
Count: 3
Count: 4
</pre>

<h3>Interaction</h3>

<p>The <kbd>INPUT</kbd> statement, will halt the execution and wait for an input. This can be used to store a value into a variable. For example, to capture the position of the mouse cursor: </p>

<pre>
10 PRINT "Touch the screen"
20 INPUT X, Y
30 PRINT "You touched at: " X ", " Y
50 PRINT "Press a button"
60 INPUT B
70 PRINT "You pressed: " B
80 END
</pre>

<img src="../media/refs/basic.png" width='200'>

<h3 id='manual'>Manual</h3>

<table border='1'>
	<tr>
		<th rowspan='6'>Hypervisor</th>
		<th rowspan='2'><code>RUN</code></th><td>Used to begin program execution at the lowest line number.</td></tr>
	<tr><td><pre>RUN</pre></td></tr>
	<tr><th rowspan='2'><code>LIST</code></th><td>Causes part or all of the user program to be listed. If no parameters are given, the whole program is listed. A single expression parameter in evaluated to a line number which, if it exists, is listed. </td></tr>
	<tr><td><pre>LIST 200
LIST</pre></td></tr>
	<tr><th rowspan='2'><code>CLEAR</code></th><td>Formats the user program space, deleting any previous programs. If included in a program the program becomes suicidal when the statement is executed.</td></tr>
	<tr><td><pre>CLEAR</pre></td></tr>
	
	<tr>
		<th rowspan='10'>Core</th>
		<th rowspan='2'><code>REM</code></th><td>Permits to add remarks to a program source.</td></tr>
	<tr><td><pre>REM This is a comment.</pre></td></tr>
	<tr><th rowspan='2'><code>LET</code></th><td>Assigns the value of an expression to a variable.</td></tr>
	<tr><td><pre>LET A=123/2, B=$20%2</pre></td></tr>
	<tr><th rowspan='2'><code>IF</code></th><td>If the result of the expression is not zero, the statement is executed; if False, the associated statement is skipped.</td></tr>
	<tr><td><pre>IF A>B-2 PRINT "A is greater."</pre></td></tr>
	<tr><th rowspan='2'><code>GOTO</code></th><td>Changes the sequence of program execution.</td></tr>
	<tr><td><pre>GOTO 50+A>B</pre></td></tr>
	<tr><th rowspan='2'><code>END</code></th><td>Must be the last executable statement in a program.  Failure to include an END statement will result in an error stop after the last line of the program is executed.</td></tr>
	<tr><td><pre>END</pre></td></tr>
	
	<tr>
		<th rowspan='4'>Subroutines</th>
		<th rowspan='2'><code>GOSUB</code></th><td>Changes the sequence of program execution, and remembers the line number of the GOSUB statement, so that the next occurrence of a RETURN statement will result in execution proceeding from the statement following the GOSUB.</td></tr>
	<tr><td><pre>GOSUB 220</pre></td></tr>
	<tr><th rowspan='2'><code>RETURN</code></th><td>Transfers execution control to the line following the most recent unRETURNed GOSUB.  If there is no matching GOSUB an error stop occurs. </td></tr>
	<tr><td><pre>RETURN</pre></td></tr>
	
	<tr>
		<th rowspan='4'>I/O</th>
		<th rowspan='2'><code>PRINT</code></th><td>Prints the values of the expressions and/or the contents of the strings in the console. To print the result of an expression as an <a href='ascii.html'>ascii</a> character, use <kbd>#$41</kbd>, to print the character A, end with a semi-colon to print without a linebreak.</td></tr>
	<tr><td><pre>PRINT "The result is: " A+B</pre></td></tr>
	<tr><th rowspan='2'><code>INPUT</code></th><td>Halts evaluation, and assigns the result of expressions to each of the variables listed in the argument. Expressions are entered sequencially and separated by a line break, a list of two arguments, will expect two input lines.</td></tr>
	<tr><td><pre>INPUT X, Y</pre></td></tr>
	
	<tr>
		<th rowspan='4'>File</th>
		<th rowspan='2'><code>SAVE</code></th><td>Exports your program to example.bas.</td></tr>
	<tr><td><pre>SAVE example.bas</pre></td></tr>
	<tr><th rowspan='2'><code>LOAD</code></th><td>Imports the example.bas program, replaces your current program.</td></tr>
	<tr><td><pre>LOAD example.bas</pre></td></tr>
	
	<tr>
		<th rowspan='12'>Screen</th>
		<th rowspan='2'><code>COLOR</code></th><td>Sets the interface RGB colors, see <a href='theme.html'>theme</a>.</td></tr>
	<tr><td><pre>COLOR $50f2, $b0f9, $a0f8</pre></td></tr>
	<tr><th rowspan='2'><code>CLS</code></th><td>Clears the screen.</td></tr>
	<tr><td><pre>CLS</pre></td></tr>
	<tr><th rowspan='2'><code>DRAW</code></th><td>Sets position of drawing.</td></tr>
	<tr><td><pre>DRAW 100, 320</pre></td></tr>
	<tr><th rowspan='2'><code>MODE</code></th><td>Sets drawing mode, see <a href='varvara.html#screen'>varvara</a>.</td></tr>
	<tr><td><pre>MODE 04</pre></td></tr>
	<tr><th rowspan='2'><code>SPRITE</code></th><td>Draws a <a href='icn_format.html'>sprite</a>, uses MODE.</td></tr>
	<tr><td><pre>SPRITE $1c1c, $087f, $0814, $2241</pre></td></tr>
	<tr><th rowspan='2'><code>PICT</code></th><td>Draws a picture from a file, uses MODE.</td></tr>
	<tr><td><pre>PICT image10x10.icn</pre></td></tr>
	
</table>

<ul>
	<li><a href='../etc/basic.tal.txt' target='_blank'>View source</a>, Uxntal.</li>
	<li><a href='https://rabbits.srht.site/tiny-basic/basic.rom' target='_blank'>Download ROM</a>, 4kb.</li>
	<li><a href='http://www.ittybittycomputers.com/IttyBitty/TinyBasic/TBuserMan.htm' target='_blank'>TinyBASIC User Manual</a></li>
	<li><a href='https://www.msx.org/wiki/Category:MSX-BASIC_Instructions' target='_blank'>MSX BASIC Commands</a></li>
	<li><a href='https://beebwiki.mdfs.net/VDU_23' target='_blank'>BBC Micro VDU 23</a></li>
</ul>

<img src="../media/refs/beasts19.png">
<style>
span.line { background:#ffee44; color:black }
span.cmd { background:#11eeaa; color:black }
span.link { background:white; color:black }
</style>
