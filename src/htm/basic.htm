<h2>10 PRINT "Hello World"</h2>

<p>This guide is written specifically for the <a href='https://git.sr.ht/~rabbits/tiny-basic' target='_blank'>Sunflower BASIC implementation</a>, but it should still give a general idea of how to use the language's primitives which are also found in most BASIC implementations.</p>

<figure>
	<img src='../media/refs/vogue-basic.jpg' width='300'/>
	<figcaption>Typical BASIC Programmer</figcaption>
</figure>

<h3>Introduction</h3>

<p>A BASIC program begins with line numbers, control-flow is done by jumping to absolute line numbers which point to compiled BASIC code data. 0 is not a valid line number.</p>

<pre>
<span class='line'>15</span> <span class='cmd'>LET</span> A=0
<span class='line'>20</span> <span class='cmd'>PRINT</span> "Hello BASIC"
<span class='line'>25</span> <span class='cmd'>LET</span> A=A+1
<span class='line'>30</span> <span class='cmd'>IF</span> A=10 GOTO 50
<span class='line'>40</span> <span class='cmd'>GOTO</span> 20
<span class='line'>50</span> <span class='cmd'>END</span>
</pre>

<h3>Interpreter</h3>

<iframe height='384' width='624' src="../etc/uxn5/index.html#r=bKABYIAGN6Dg8YAIN6Dg3oAKN6DwSoAMN6ACcIAiN6ABgIAkN4AiNoBXYAeMgCQ2gEhgB4RgC9FgC3dgCTNgCa-gByiAEDegAaGAgDeAdBAgAARgCb8AYAGeoAB0YAR7AABUaW55QkFTSUMKQSCBB38gaW50ZXJwcmV0ZXIKQnkgRGV2aW5lIEx1IExpbnZlZ2EKMjYgQXVnIDIwMjUAAICCNiagAXYpIAAFImALmABgBjcCAGAAi69gAHugDougDl-0NO9gDG0gAA0hIaog__EiImKgAABsYiM0oAAEOGyAKDagDoegDl_gAADPgAMcIFIAA2AKOO-gAAM8gGA_oAAgOIAoN7Q0YAmAISFBqiD_2yIiYoAoN2AJ9GAJ8aAO5WAJZ2AJ6EAKC6AAAjk0YAlZYAnaQAn9lIAgCiAAAWwhQP_0lIAIBpSALAggAAeCFyoFIZQg_-hsYAA5JGD_4JQPJE9gAeidIAACImyAETOACDMhYAAegAQzoAAAggIELiRg_7iCJxfAnSD_2iJsYP-olIAkCCAAOpRgC08gABGCBiAQoAAAJ6APV0AIiaEkFEAGEOAAAOAACnrAAJSAMBkPeCGABhSACgsg_-lvbCHgAADAQH_AAJRgCxqAG1FgCxMBIP_sb2ygGWCgQABgC0pgBJ9ABamAID-gGWA4bGD_iGD_8iagWWArIAALIiKgD06gDyRACB0vYP8ZlCAADiKgAADvYWE1oAAAbzVsYP52gAxMYP79lCAAB6D__m81ImygB4g0bzVABBCgAAQ4bKBZYCTgAAC0HSAABmD_7EAAGGHdTyAADCIiYqAPG6APM0AHwKEhNCc0Lqog_9kiImKAMQ6gGWC0oAAAKCAABCZgADCASAWqIP_sIiKKHAwMJiagGWA5gAI_YAmngyQD5CIibIQVBUAHQaAAAICPIjlgB-WgDthgB5tACEI4bDlsOmw8bD1soIAArzgkbzgqgAAEhQwAK4AMACiAEQApgBZ_uzo5bJ2AAAggABFgABevOiRgABGvOnokO286bCE7J6APOEAG_iaADz-g__86oAABPWwPoA6LlM8IIAAHISEhlCD_8yE0QmwPbw9zImAEP6AZYED-6g-kD6lg_ceUIAAHImD_DUAHrWD90i9g_bWUIAALIm9g_m5g_zlAB5dg_bxcYP5iISNvYP5cYP7rQAeFEA0QEyJgCFBA_jwQMRA1IkD-mBBdEGFg_XqUIAAEIkD-iZSAGRMhYP1qlIA9CCAACaAPXmAGXUD-cSFg_W-AAGADxUD_0RCSEJVg_WAdgjI5VkAJHxDDEMhg_U4mYP3zNB0gAAwiI6DwACSgDyRABiAjI0D93RDwEPQiIqD_8GwREBEWYP0jJmD9yIsqUwX1IySgAAQ4YAJVQP2rEUQRSyIiQAJlEXkRf6ABDRNg_NVgABKUIP_2IqAAAAggAANgBq5A_deUgDsJIAAIIaAA6RNABqKUgCIJIAAEIUAF25SAI4EZFWD8tANABe2UYAgvIAAGYPymQAX9lICAQhEGoBF5QAV9bBHYEd5gAxdgA3GAolcSDhITYPxnYAF2oAB0YAfkIAAJoAB0oA8uQAVSYP0CYAGqYAKEoAB0gKg3oAABgKo34AYgwKyAo_eWIAAMQmICYP3GYAT4QP08gABgAcdA_-cSNRI6YPwWhS8JYP11QP0eEl0SY4KGMxJg_BKACDdg_AyACjdg_AaADDciQPz9EpUSmSKgACCgDBA1YAQDYAXFQPzoEq0SsmD7452BvwUJJoAoNyaAHwMiYPvPghN_BCaAKjciImAFl0D8uhLWEttg-7UjA6ALsxVA_KoS9hL9YPulYANuYPufYANoYPuZYANiYPuTYANcIkD8ihMzEzhg-2xgAvRA_H0PEAFhYPtflCAABCJA-vRg-sadIAAHI6APZ0AESSNA-ysTYRNmYPtXoAD_PIAwP6AUJDgvYPtvL5QgAAUiYkD8PWD7PO9hYTVA_-qgChIWiSAACCKgAHRg_qMAYAACAgCAdAaAswkgAAoioA9OoA8pQAP0gYDqExFsoHTkE5QGIAAFYP_bImxg_9YhQP_vlCAAAiJslAaAHwogAAcCIoAAQAAHYAAEIYBeBllgJqDv-CmFSxskQAOooYDoMxVsoFlggOAyJzlABp2gGRYmoBlWhSUdERBAA4KhIYDnMzVsgOIyJqAZFikgAA0ioPAAoA9EgR5_Y6AAAjkmgMUzNGwGgAgIIAAmBoAKCCAAfwaADQggAHiAIIsDIAAPgH6KAyAACAZgAHgGYACTAmwCoABvEgkgAAFsYAB3oAAmF2AEHYAotqAAIKoMJCIFN6AALxegASYXQAPygMUQIAAWoAAAlIAgCyAACpRgBaYg-rRABcoibKAoAABg-d9g-fVgAMogAAQiQADllCD_7CJsAmADs2D_xKAAAIAABoAEEzGAKgsGgD8JIAACImyBgPKBET3sEoABGQaA5RMRbGAC7kADhqAAQKAANEAFkoBBGQaAGgsgAAgCIqAPXkACegYYgEAYMWwGgFIJIAAEAkAEDYAjgBQiMGxg-VuUYAUJgAAIIAAElGAAESGUIP_qImyAtAaABROAGxOBCRPECSAACgKgD06gDyRAAimBgOoTEYEiAuISC4BSLoAAbIGA7xMQbGD_6WD_fYDLEoDhEhlsoAAEOIDFMaAJdoCQN6AJq4CAN2ygASYXgNsKkDegAaGAgDeAxTCA6jHFMWD_i0D56mAC-oAAgJYWBoD4E6AAASggAAEAgJI2YP-lIAAHYALRYP--AICUNmD_lYEPCcFg_64AAICCFgaA70eAgxZg_jIAgAAEgMUQIAACIgBg_20gAANg_4kAJmAD9yAABqAPLkABaCaAqDegAAiAqjdgAGSAFBOAIBOAKDaAFDOgGViALDeDowXgC7NUwC-ArAQoN6AAAIAbC6w31wGKIP_0ImAB7oAISuIiYmygGVihIa-A-DM1b6AZYCkgABGgGVgmgCw3gOUzoAuzFIAvF2xgA82gAAo5tGAADA-gAAM4NGAAA08EbGADnQRgA5mAQB8dbIVnCYAqN6CCLhegABiGDwCQgA-ChwAYgB8JoC4XgCI2oAAYOYYzAICEIwGAJIIZgxOBzAAghTsIQAE0oEYmF6AYgKIDoAUvl4AABxdsYP9-YP_mgPluYAEzYAE2oA6vYACGYAEnoA7AYAB9YPjOQAEbYAEYoA8JYABuQAEPJzQdIAADIiJsYACjYAEutKAABDk0YABTYAEiISE0YABKQADLoA8VYABBgDxgAEtgADmAPmAAQ4A6YAA-YAD-YAApYACqoBOcgoUiF4AotqAACDkFN2yUgCIIIAAJlGAAFiGUIP_wIWyUBiAAAwKAaRkEIUD_8QaACgkgAAQCQABqgAAEgDA_oBQkOIDMGwkvF2wHgIAcgAAIIAAOgC1g_9Sgf_88oIAAJDmA2SWAAIAiE6AnEGAAGaAD6GAAE6AAZGAADaAACmAABwOAMBhA_6O7hoE9GAwGgDAYYP-UgP-A7xMCOjlsoAAggCg3gCqApRw4rwU3b4AkNqAAGDkrIAADQP5CbGAAF2D_2qATlIDPAAGIz4MTAAKI44LtADiAHSwSJheAQKATlEAAImD_8aAWJheAwaAT5ICWFiAABCKgE6SAkjaACjOAlDaADjOA5QcAAKAABDmAKIUJHSo3gC-XF2ygAMYWoADFFoBgPz6gAMQWgMA_PoAiM4EKCwQ_oADDFiY4PqAAwoEgFYDANoCgPz6ADzNsoAAAJoBQPz4mgAOAOCQAJoDtMyaAAT8-PoDxswJsoA1BgKg3oAACgKo3oA0vgKw3oA01gQUKO4CsN4CiNh0gAAGARAGACICbAYAKgQUMDDdsLnRoZW1lAKANaYE_AAGBPwBigDMBoxaAMheAAGD6hUD_6y5zbmFyZgBgAC2AIGAASLSA3QM0YAAQgA1EOiEhNGAABYAKQAAvlAYgAAMCImxgACQhQP_x4P8AoAAKu686OW9BnSD_8yIDgDAYYAAIR1jPIP_zYmyAFxOgDdqArjdsh34R2oCkN4AAYAAmAWwGYAASIAALggYUBIAkCWwCgABsgEEZgBoLbIAwGYAKgQY5BoAJCgxsgCcZBoAKGYAFCgxsAoD_bJQgAAIhbCFA__Zg84ydIAAHI6APZ0D9DywvlNRPCSAABmEhlICFEhSAAAhsgAszgAwzoA5XgAI3bACDAH8EaAR2BLAEuwTDBPYFCAUpBTMFWwVkBcgGJwXWBj0GXgZzBqEGsQbRBt4G_ysD8y0D9SoD9y8EJSYD-XwD-zwD_T4ECj0EFyEEHCUEIQAAAFNVTkZMT1dFUiBCQVNJQyAAVFlQRSAiSEVMUCIgRk9SIElORk8gfyAAIEJZVEVTIARGUkVFCockBSBQUklOVIIqgQoPIERFVEFJTFMAUkVBRFkuAIBJNABFUlJPUgBJTkZJTklURQBMSU5FAFBBVEgARklMRQBMT09QAERJVi1CWS1aRVJPAFVOREVSgJYCAE9WgwhSTlVNQkVSAFZBUklBQkxFAENPTU1BTkQAUlVOAH9SVU4gQmVnaW4gZXZhbHVhdGlvbiBmcm9tIHNtYWxsZXN0IGxpbmUgbnVtYmVyLgBMSVNUAH-ABQAghAAVUHJpbnQgZW50aXJlIHByb2dyYW0uCoIjATEyiCOBSQExMoMbBTIwLCAzMIgbEnMgMjAgdG8gMzAuAENMRUFSAH-BBgYgIEVyYXNljGMuAFJFTQB_UkVNIFRoaXMgaXMgYSBjb21tZW50Li4gIExlYXZlIHJlbWFyay4ATEWAtx1FVCBYPTEyLCBZPUErMSAgQXNzaWduIGV4cHJlc3OA-0N0byB2YXJpYWJsZS4ASUYAf0lGIEE-QiBQUklOVCBDICBFdmFsdWF0ZSBvbmx5IHdoZW4gbm90IHplcm8uAEdPVE8Af4AFACCBXwlDb250aW51ZSBlgjWAYQBhguwRLgBFTkQAf0VORCAgVGVybWlugFSGJ4BMAlNVQoBNAlNVQoJOhXsYc3Vicm91dGluZSB1bnRpbCBSRVRVUk4uAIIHAQB_gg-SgANmcm9th0EBLgCB2wEAf4LiCSJBIHN0cmluZyKCwhBEaXNwbGF5IHRleHQgd2l0aIG9BmJyZWFrLgqNMwE7IIAAiDMILgBJTlBVVAB_gQYKIFgsIFkgIFBhdXOJk4LFEXVzZXIgaW5wdXQuAExPQUQAf4AFgxEbYmFzICBMb2FkIGJhc2ljIGZpbGUuAFNBVkUAf4AFAyBvdXSFJwNTYXZliScGQ09MT1IAf4EGSSAkNTBmMiwgJGIwZjksICRhMGY4ICBTZXQgaW50ZXJmYWNlIGNvbG9ycy4AQ0xTAH9DTFIgIENsZWFyIHNjcmVlbi4ARFJBVwB_gAUFIDMyLCA0g0ALZHJhd2luZyBwb3NpgNgHLgBNT0RFAH-ABQEgMoojAm1vZIDAA1BSSVSAwoEHDCAkMWMxYywgJDA4N2aBBiIxNCwgJDIyNDEgIFBhaW50IDh4OCBzcHJpdGUuAFBJQ1QAf4AFDiBpbWFnZTIweDIwLmljboQsBDEtYml0ghsHLgBQT0tFAH-ABQkgJDEwLCAkMTIzgF0HNDU2NywgLi6DwgVhdGEgYXSAIgIuAP-DAAGqVYIBBwAAAAAIFBQXgAcDAAgICIEHAgAAwIMHHQAQECAQEAgHAA8PHw8PBwAAIBAQECAgwADA4ODgwIUlAAiCPwEAALM_wP4HAGCAAAUAYABmZmaC_x1s_mxs_mwAGD5gPAZ8GAAAZmwYMGZGADhsOHDezHaAL4H_ARwwgAADHAA4DIAABjgAAGY8_zyAQgQYGH4YGIP_ATAwgCwAfoX_HBgYAAMGDBgwYMAAPGZudmZmPAAYOBgYGBh-ADxmgBgVfgB-DBgMBmY8AAwcPGx-DAwAfmB8BoAPAzxgYHyALwB-gD8FMDAAPGZmgAKABwE-BoB_gHSDAwMYGDAAgGUCMBgMgn4FfgAAMBgMgHmCZwEAGIB_D2puYD4AGDxmZn5mZgB8ZmaAAhcAPGZgYGBmPAB4bGZmZmx4AH5gYHxgYH6DBwpgAD5gYG5mZj4AZoE2AmYAPIC-BRg8AD4GBoGnCGZseHB4bGYAYIEADn4Axu7-1sbGxgBmdn5-boAvAGaAAAA8gW-AT4APAnZsNoF_AGyBHwFgPID_AH6BVwAYgGcAZoNvDGZmPBgAxsbG1v7uxgCADAI8ZmaAh4CCAQB-gN0EYH4APDCAAAI8AMCA_QQGAwA8DIAABjwAEDhsxgCFAAX-AABgMBiCDwk8Bj5mPgBgYHxmgP8KAAA8YGBgPAAGBj6BdwoAADxmfmA8ABwwfIBZCAAAAD5mZj4GfIIvBGYAGAA4gf8BGACBsARwYGBmbID_gBWAFwUAAOz-1saAeoIvgE-A_4IPAXxggU8CZj4GgB8CYGBggF8NYDwGfAAAGH4YGBgOAACB-YCHgv8GAADGxtZ8bIAXAjwYPIBPgT4PfAAAfgwYMH4AHDAwYDAwHIKNGRgYGDgMDAYMDDgAAABg8p4MAAAQOHz-fDgQgvoEAAAAAwODCgjgAAAYGDx-fn6DGgAHgiIEwMABAQGBLQj4_P7__38_H_-BAAzDAB8_f____vz4gICAgzEkDz8_DwcA_v78_Pz8_v4AAEIAAEI8AH9_Pz8_P39_AODw_Pzw4IJ5AgEBAYQ_AQDDglGEX4GaAoCAgISZgzEIAH5-fjwYGBkbgpgD4MDAwIXEg7GCygcenNh4OBAIEA" style='border:0' allowfullscreen></iframe>

<p>Expressions can include numbers, variables and arithmetic operators. Numbers are decimal, but can be prefixed with <kbd>$</kbd> for <a href='hexadecimal.html'>hexadecimal</a>, there are no <a href='notation.html'>precedence rules</a>.</p>

<pre>
10 LET A=6+7
20 PRINT 52+$20*A
30 END
</pre>

<p>Valid expressions arithmetic operators are <kbd>+-*/%</kbd>, bitwise operators are <kbd>&|</kbd>, logic operators are <kbd>&lt;&gt;=!</kbd>. The smallest number is -32768, the largest number is 32767.</p>

<h3>Variables</h3>

<img src='../media/generic/sunflower.png' style="float:right;width:160px;margin-left: 30px;"/>
<p>Variables are single character uppercased letters of the alphabet. Some variables have special properties, here is the complete list:</p>

<ul>
	<li><kbd>R</kbd>, reads a random number.</li>
	<li><kbd>W</kbd>, reads the screen width.</li>
	<li><kbd>H</kbd>, reads the screen height.</li>
</ul>

<p>For example, if you wanted to do a program to roll a 6-sided dice using the <kbd>R</kbd> variable.</p>

<pre>
10 PRINT "You rolled " R%6+1 "."
30 END
</pre>
<pre style='margin-top:-29px'>
You rolled 5.
</pre>

<h3>Loops</h3>

<p>Using a variable as counter, a program can loop over a number of lines five times:</p>

<pre>
10 LET I=0
20 PRINT "Count: " I
25 LET I=I+1
30 IF I&lt;5 GOTO 20
40 END
</pre>
<pre style='margin-top:-29px'>
Count: 0
Count: 1
Count: 2
Count: 3
Count: 4
</pre>

<h3>Functions</h3>
<p>Functions are created with GOSUB, similarly to GOTO, this operation moves evaluation to a different line, except that they keep a return address in memory to be jumped back to upon RETURN.</p>

<pre>
1 LET N=5
2 GOSUB 50
3 END

49 REM Fib(N)
50 LET A=3, B=1
51 LET C=A, A=3*A-B, B=C, I=I+1
52 IF I&lt;N GOTO 51
53 PRINT "Result: " C
54 RETURN
</pre>
<pre style='margin-top:-29px'>
Result: 144
</pre>

<h3>Interaction</h3>

<p>The <kbd>INPUT</kbd> statement, will halt the execution and wait for an input. This can be used to store a value into a variable. For example, to capture the position of the mouse cursor: </p>

<pre>
10 PRINT "Touch the screen"
20 INPUT X, Y
30 PRINT "You touched at: " X ", " Y
50 PRINT "Press a button"
60 INPUT B
70 PRINT "You pressed: " B
80 END
</pre>

<img src="../media/refs/basic.png" width='200'>

<h3 id='manual'>Manual</h3>

<table border='1'>
	<tr>
		<th rowspan='6'>Hypervisor</th>
		<th rowspan='2'><code>RUN</code></th><td>Used to begin program execution at the lowest line number.</td></tr>
	<tr><td><pre>RUN</pre></td></tr>
	<tr><th rowspan='2'><code>LIST</code></th><td>Causes part or all of the user program to be listed. If no parameters are given, the whole program is listed. A single expression parameter in evaluated to a line number which, if it exists, is listed. </td></tr>
	<tr><td><pre>LIST 200
LIST</pre></td></tr>
	<tr><th rowspan='2'><code>CLEAR</code></th><td>Formats the user program space, deleting any previous programs. If included in a program the program becomes suicidal when the statement is executed.</td></tr>
	<tr><td><pre>CLEAR</pre></td></tr>
	
	<tr>
		<th rowspan='10'>Core</th>
		<th rowspan='2'><code>REM</code></th><td>Permits to add remarks to a program source.</td></tr>
	<tr><td><pre>REM This is a comment.</pre></td></tr>
	<tr><th rowspan='2'><code>LET</code></th><td>Assigns the value of an expression to a variable.</td></tr>
	<tr><td><pre>LET A=123/2, B=$20%2</pre></td></tr>
	<tr><th rowspan='2'><code>IF</code></th><td>If the result of the expression is not zero, the statement is executed; if False, the associated statement is skipped.</td></tr>
	<tr><td><pre>IF A>B-2 PRINT "A is greater."</pre></td></tr>
	<tr><th rowspan='2'><code>GOTO</code></th><td>Changes the sequence of program execution.</td></tr>
	<tr><td><pre>GOTO 50+A>B</pre></td></tr>
	<tr><th rowspan='2'><code>END</code></th><td>Must be the last executable statement in a program.  Failure to include an END statement will result in an error stop after the last line of the program is executed.</td></tr>
	<tr><td><pre>END</pre></td></tr>
	
	<tr>
		<th rowspan='4'>Subroutines</th>
		<th rowspan='2'><code>GOSUB</code></th><td>Changes the sequence of program execution, and remembers the line number of the GOSUB statement, so that the next occurrence of a RETURN statement will result in execution proceeding from the statement following the GOSUB.</td></tr>
	<tr><td><pre>GOSUB 220</pre></td></tr>
	<tr><th rowspan='2'><code>RETURN</code></th><td>Transfers execution control to the line following the most recent unRETURNed GOSUB.  If there is no matching GOSUB an error stop occurs. </td></tr>
	<tr><td><pre>RETURN</pre></td></tr>
	
	<tr>
		<th rowspan='4'>I/O</th>
		<th rowspan='2'><code>PRINT</code></th><td>Prints the values of the expressions and/or the contents of the strings in the console. To print the result of an expression as an <a href='ascii.html'>ascii</a> character, use <kbd>#$41</kbd>, to print the character A, end with a semi-colon to print without a linebreak.</td></tr>
	<tr><td><pre>PRINT "The result is: " A+B</pre></td></tr>
	<tr><th rowspan='2'><code>INPUT</code></th><td>Halts evaluation, and assigns the result of expressions to each of the variables listed in the argument. Expressions are entered sequencially and separated by a line break, a list of two arguments, will expect two input lines.</td></tr>
	<tr><td><pre>INPUT X, Y</pre></td></tr>
	
	<tr>
		<th rowspan='4'>File</th>
		<th rowspan='2'><code>SAVE</code></th><td>Exports your program to example.bas.</td></tr>
	<tr><td><pre>SAVE example.bas</pre></td></tr>
	<tr><th rowspan='2'><code>LOAD</code></th><td>Imports the example.bas program, replaces your current program.</td></tr>
	<tr><td><pre>LOAD example.bas</pre></td></tr>
	
	<tr>
		<th rowspan='12'>Screen</th>
		<th rowspan='2'><code>COLOR</code></th><td>Sets the interface RGB colors, see <a href='theme.html'>theme</a>.</td></tr>
	<tr><td><pre>COLOR $50f2, $b0f9, $a0f8</pre></td></tr>
	<tr><th rowspan='2'><code>CLS</code></th><td>Clears the screen.</td></tr>
	<tr><td><pre>CLS</pre></td></tr>
	<tr><th rowspan='2'><code>DRAW</code></th><td>Sets position of drawing.</td></tr>
	<tr><td><pre>DRAW 100, 320</pre></td></tr>
	<tr><th rowspan='2'><code>MODE</code></th><td>Sets drawing mode, see <a href='varvara.html#screen'>varvara</a>.</td></tr>
	<tr><td><pre>MODE 04</pre></td></tr>
	<tr><th rowspan='2'><code>SPRITE</code></th><td>Draws a <a href='icn_format.html'>sprite</a>, uses MODE.</td></tr>
	<tr><td><pre>SPRITE $1c1c, $087f, $0814, $2241</pre></td></tr>
	<tr><th rowspan='2'><code>PICT</code></th><td>Draws a <a href='icn_format.html#filename'>picture</a> from a file, uses MODE.</td></tr>
	<tr><td><pre>PICT image10x10.icn</pre></td></tr>
	
</table>

<ul>
	<li><a href='../etc/basic.tal.txt' target='_blank'>View source</a>, Uxntal.</li>
	<li><a href='https://rabbits.srht.site/tiny-basic/basic.rom' target='_blank'>Download ROM</a>, 4kb.</li>
	<li><a href='http://www.ittybittycomputers.com/IttyBitty/TinyBasic/TBuserMan.htm' target='_blank'>TinyBASIC User Manual</a></li>
	<li><a href='https://www.msx.org/wiki/Category:MSX-BASIC_Instructions' target='_blank'>MSX BASIC Commands</a></li>
	<li><a href='https://beebwiki.mdfs.net/VDU_23' target='_blank'>BBC Micro VDU 23</a></li>
</ul>

<img src="../media/refs/beasts19.png">
<style>
span.line { background:#ffdd44; color:black }
span.cmd { background:#11eeaa; color:black }
span.link { background:white; color:black }
</style>
