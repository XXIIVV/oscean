<h2>10 PRINT "Hello World"</h2>

<p>This guide is written specifically for the <a href='https://git.sr.ht/~rabbits/tiny-basic' target='_blank'>Sunflower BASIC implementation</a>, but it should still give a general idea of how to use the language's primitives which are also found in most BASIC implementations.</p>

<figure>
	<img src='../media/refs/vogue-basic.jpg' width='300'/>
	<figcaption>Typical BASIC Programmer</figcaption>
</figure>

<h3>Introduction</h3>

<p>A BASIC program begins with line numbers, control-flow is done by jumping to absolute line numbers which point to compiled BASIC code data. 0 is not a valid line number.</p>

<pre>
<span class='line'>15</span> <span class='cmd'>LET</span> A=0
<span class='line'>20</span> <span class='cmd'>PRINT</span> "Hello BASIC"
<span class='line'>25</span> <span class='cmd'>LET</span> A=A+1
<span class='line'>30</span> <span class='cmd'>IF</span> A=10 GOTO 50
<span class='line'>40</span> <span class='cmd'>GOTO</span> 20
<span class='line'>50</span> <span class='cmd'>END</span>
</pre>

<h3>Interpreter</h3>

<iframe height='384' width='624' src="../etc/uxn5/index.html#r=bKABYIAGN6Dg8YAIN6Dg7oAKN6DwSoAMN6ACcIAiN6ABgIAkN4AiNoBXYAdFgCQ2gEhgBz1gCwdgC0RgCNFgCU2gBuyAEDegAaGAgDeAdBAgAARgCV0AYAGQoAB0YARBAABUaW55QkFTSUMKQSCBB38gaW50ZXJwcmV0ZXIKQnkgRGV2aW5lIEx1IExpbnZlZ2EKMjUgQXVnIDIwMjUAAICDFmAF_QBgAIuvYAB7oA4ToA3ntDTvYAvoIAANISGqIP_xIiJioAAAbGIjNKAABDhsgCg2oA4PoA3n4AAAz4ADHCAAA2AJsO-gAAM8gGA_oEQAIDiAKDe0NGAJGCEhQaog_9siImKAKDdgCZVgCZKgDm1gCP9gCYlACaagAAI5NGAI8WAJe0AJmJSAIAogAAFsIUD_9JSACAaUgCwIIAAHghcqBSGUIP_obGAAOSRg_-CUDyRPYAHdnSAAAiJsgBEzgAgzIWAAHoAEM6AAAIICBC4kYP-4gicXtZ0g_9oibGD_qJSAJAggADqUYArCIAARggYgEKAAACegDt9ACDWhJBRABdfgAADgAAp6wACUgDAZD3ghgAYUgAoLIP_pb2wh4AAAwEB_wACUYAqNgBtRYAqGASD_7G9soBi4oEAAYArFYARmQAVwgCA_oBi4OGxg_4hg__ImoFi4KyAACyIioA7WoA6sQAfJL2D_GZQgAA4ioAAA72FhNaAAAG81bGD-doAMQWD-_aAHQTRvNUAD4qAABDhsoFi4JOAAALQdIAAGYP_sQAAYYd1PIAAMIiJioA6joA67QAd3oSE0JzQuqiD_2SIiYoAxDqAYuLSgAAAoIAAEJmAAMIBIBaog_-wiIoocDAwmJqAYuDmAAj9gCSWDJAPkIiJshBUFQAb4oAAAgI8iOWAHiKAOYGAHPkAH6DhsOWw6bDxsPWyggACvOCRvOCqAAASFDAArgAwAKIARACmAFn-7OjlsnYAACCAAEWAAF686JGAAEa86eiQ7bzpsITsnoA7AQAa1JoAPP6D__zqgAAE9bA-gDhOUzwggAAchISGUIP_zITRCbA73DvsioBi4QP7tDywPMWD91ZQgAAciYP8QQAdWYP3gYP6GI2D_RUAHSQ9tD3MiYAe9QP5lD5EPlTsiQP62D70PwWD9o5QgAAQiQP6nlIAWEyFg_ZOUgD0IIAAGoA7mQAYyIWD9m4AAYAO4QP_UD_IP9WD9jB2CLzl3QAjGECMQKGD9eiZg_h80HSAADCIjoPAAJKAOrEAF-CMjQP4JEFAQVCIioP_wbBBwEHZg_U8mYP30jCpSzSMkoAAEOGACSED91xCkEKsiIkACWBDZEN-gAQ0TYP0BYAASlCD_9iKgAAAIIAADYAZSQP34lIA7CSAACCGgAOkTQAZplIAiCSAABCFABZ-UgCOBGRVg_OADQAWxlGAHziAABmD80kAFwZSAgEIRBqAQ2UAFVWwROBE-YAMKYANagKJXEW4Rc2D8k2ABdaAAdGAHgyAACaAAdKAOtkAFKmD9LmABnWACd6AAdICoN6AAAYCqN-AF5sCsgKP3liAADEJiAmD952AE0ED9XYAAYAG6QP_nEZURmmD8QoUvCWD9lkD9PxG9EcOChj8SYPw-gAg3YPw4gAo3YPwygAw3IkD9HhH1EfkioAAgoAujNWAD22AFjED9CRINEhJg_A8moAAAKCAACSaAKDcmgCADImD7-oMUfwQmgCo3IiJgBVxA_NkSNhI7YPvfIwOgCz0VQPzJElYSXWD7z2ADRGD7yWADPmD7w2ADOGD7vWADMiJA_KkSkxKYYPuWYALKQPycDpgBYWD7iZQgAAQiQPseYPrwnSAAByOgDu9ABB8jQPtVEsESxmD7gYAwP6ATfDgvYPtdlCAAYAUiYkD8YGD7au9hYTVA_-qgChIWiSAACCKgAHRg_qUAYAACAgCgAHQGgLMJIAAKIqAO1qAOsUADzYGA6hMxbGAGbqAAdEAGqJQgAAIibJQGgB8KIAAHAiKAAEAAB2AABCGAUwZYuCag7_gphT8brEADjaGA6DMVbKBYuIDgMic5QAZRoBhuJqAYroUlHRBwQANnoSGA5zM1bIDiMiagGG4pIAANIqDwAKAOzIEef0igAAI5JoDFMzRsBoAICCAAJgaACgggAH8GgA0IIAB4gCCLAyAAD4B-igMgAAgGYAB4BmAAkwJsAqAAbxIJIAABbGAAd6AAJhdgA_GAKLagACCqDCQiBTegAC8XoAEmF0ADxoDFECAAFqAAAJSAIAsgAAqUYAVSIPrtQAV-ImygKAAAYPoYYPouYADAIAAEIkAA25Qg_-wibAJgA2Rg_8SgAACAAAaABBMxgCoLBoA_CSAAAiJsgYDygRE97BKAARkGgOUTEWxgAr9AA1qgAECgADRABUaAQRkGgBoLIAAIAiKgDuZAAl8GGIBAGDFsBoBSCSAABAJABCGAI4AUMTBsYPmUlGAEtYAACCAABJRgAAchlCD_6iJsgLQGgMQJIAAKAqAO1qAOrEACGIGA6hMRgRgC4hILgEgxgABsgYDvExBsYP_pYP-HgMsSgOESGWygAAQ4gMUxoAklgJA3oAlNgIA3bGAC66ABJheA1AqQN6ABoYCAN4DFMIDjN8UxQPoiYALYgACAlhYGgPgToAABKCAAAQCAkjZg_6UCgJQ2YP-eIAADYP-6AKAAghYGIAAOIoCDgAcJAgIAYP5CAGD_foEfLZoAJmADviAABqAOtkABaCaAqDegAAiAqjdgAGSAFBOAIBOAKDaAFDOgGLCALDeDjwXgCz1UwC-AmAQoN6AAAIAbC6w31wGKIP_0ImAB44AISuIiYmygGLChIa-A-DM1b6AYuCkgABGgGLAmgCw3gOUzoAs9FIAvF2xgA5SgAAo5tGAADA-gAAM4NGAAA08EbGADZARgA2CAQB8dbIVnCYAqN6CCLhegABiGDwCQgA-ChwAYgB8JoC4XgCI2oAAYOYYzAICEIwGAJIIZgxOBzAAghTsJQAEpoEYmF6AXfoDpAgUvl4AABxdsYP9-YP_mgPl_YAD_YAEloA43YAByYADzoA5IYABpYPkXQADnYADkoA6RYABaQADbJzQdIAADIiJsYACPYAEdtKAABDk0YAA_YAERISE0YAA2QADAoA6dYAAtgDxgADdgACWAPmAAL4A6YAAqYADtYAAVQACflIAiCCAACZRgABYhlCD_8CFslAYDIAADAoBVGQQhQP_xBoAKCSAABAJAAHOAAASAMD-gE3w4gLgbCS8XbAeAgByAAAggAA6ALWD_1KB__zyggAAkOYDyJYAAgCIToCcQYAAZoAPoYAAToABkYAANoAAKYAAHA4AwGED_o7uGgT08DAaAMBhg_5SA_4DvEwI6OWxgADpgAANAACCgACCAKDeAKragAAg4rwU3b4AkNqAAGDkrIAADQP5NbKAS9ICLBAEvF4AogCMCOQU3hBMAAogTgh0AOIEdKyYXgECgEvRAACJg__GgFiYXgMGgEzyAlhYgAAQioBL8gJI2gAozgJQ2gA4zgOgHAACgAAQ5gCiFCRsqN4AvlxdsoAx3gKg3oAACgKo3oAxlgKw3oAxrgQUQcYCsN4CiNh0gAAFsoAAAgAiARAGACoEFIAw3bC50aGVtZQCgAMYWoADFFoBgPz6gAMQWgMA_PoAiM4EKCwQ_oADDFiY4PqAAwoEgCYDANoCgPz6ADzOAUQcmgFA_PiaAA4A4GAAmgO0zJoABPz4-gPGzAmxgAC2AIGAASLSAtQM0YAAQgA1EOiEhNGAABYAKQAAvlAYgAAMCImxgACQhQP_x4P8AoAAKu686OW9BnSD_8yIDgDAYYAAIR1jPIP_zYmyAFxOgDT-Arjdsge0AAYDtEg0_gKQ3gABgACYBbAZgABIgAAuCBhQEgCQJbAKAAGyAQRmAGgtsgDAZgAqBBkEGgAkKDGyAJxkGgAoZgAUKDGwCgP9slCAAAiFsIUD_9qZg__IkITlsYPQRnSAAByOgDu9A_UAsL5TUTwkgAAZhIZSAjRIUgAAIbIALM4AMM6ANxIACN2wAgwACgBYzhBcA3IAXAAGEGH8AAARPBFoEeQSEBIwEvATOBO8E-QUhBSoFjgXtBZwGAwYkBjkGaQZ5BpkGpgbHKwPaLQPcKgPeLwQMJgPgfAPiPAPkPgPxPQP-IQQDJQQIAAAAU1VORkxPV0VSIEJBU0lDIABUWVBFICJIRUxQIiBGT1IgSU5GTyB_IAAgQllURQZTIEZSRUUKhyQFIFBSSU5UgiqBCg8gREVUQUlMUwBSRUFEWS4AgEk0AEVSUk9SAElORklOSVRFAExJTkUAUEFUSABGSUxFAExPT1AARElWLUJZLVpFUk8AVU5ERVKAlgIAT1aDCFJOVU1CRVIAVkFSSUFCTEUAQ09NTUFORABSVU4Af1JVTiBCZWdpbiBldmFsdWF0aW9uIGZyb20gc21hbGxlc3QgbGluZSBudW1iZXIuAExJU1QAf4AFACCBABVQcmludCBlbnRpcmUgcHJvZ3JhbS4KgiACMTIzhCCBQwsxMjMuAENMRUFSAH-BBgYgIEVyYXNljD4uAFJFTQB_UkVNIFRoaXMgaXMgYSBjb21tZW50Li4gIExlYXZlIHJlbWFyay4ATEWAjx1FVCBYPTEyLCBZPUErMSAgQXNzaWduIGV4cHJlc3OA0yF0byB2YXJpYWJsZS4ASUYAf0lGIEE-QiBQUklOVCBDICBFgv8bZSBvbmx5IHdoZW4gbm90IHplcm8uAEdPVE8Af4AFACCBXwlDb250aW51ZSBlgjWAYQBhguYRLgBFTkQAf0VORCAgVGVybWlugFSGJ4BMAlNVQoBNAlNVQoJOhXsYc3Vicm91dGluZSB1bnRpbCBSRVRVUk4uAIIHAQB_gg-SgANmcm9th0EBLgCB2wEAf4LiCSJBIHN0cmluZyKCwhBEaXNwbGF5IHRleHQgd2l0aIG9BmJyZWFrLgqNMwE7IIAAiDMILgBJTlBVVAB_gQYKIFgsIFkgIFBhdXOJk4LFEXVzZXIgaW5wdXQuAExPQUQAf4AFgxEbYmFzICBMb2FkIGJhc2ljIGZpbGUuAFNBVkUAf4AFAyBvdXSFJwNTYXZliScGQ09MT1IAf4EGSSAkNTBmMiwgJGIwZjksICRhMGY4ICBTZXQgaW50ZXJmYWNlIGNvbG9ycy4AQ0xTAH9DTFIgIENsZWFyIHNjcmVlbi4ARFJBVwB_gAUFIDMyLCA0g0ALZHJhd2luZyBwb3NpgNgHLgBNT0RFAH-ABQEgMoojAm1vZIDAA1BSSVSAwoEHDCAkMWMxYywgJDA4N2aBBiIxNCwgJDIyNDEgIFBhaW50IDh4OCBzcHJpdGUuAFBJQ1QAf4AFDiBpbWFnZTIweDIwLmljboQsBDEtYml0ghsHLgBQT0tFAH-ABQkgJDEwLCAkMTIzgF0HNDU2NywgLi6DwgVhdGEgYXSAIgIuAP-DAAcAAAAACBQUF4AHAwAICAiBBwIAAMCDBx0AEBAgEBAIBwAPDx8PDwcAACAQEBAgIMAAwODg4MCFJQAIgj8BAACzP8D-BwBggAAFAGAAZmZmgv8dbP5sbP5sABg-YDwGfBgAAGZsGDBmRgA4bDhw3sx2gC-B_wEcMIAAAxwAOAyAAAY4AABmPP88gEIEGBh-GBiD_wEwMIAsAH6F_xwYGAADBgwYMGDAADxmbnZmZjwAGDgYGBgYfgA8ZoAYFX4AfgwYDAZmPAAMHDxsfgwMAH5gfAaADwM8YGB8gC8AfoA_BTAwADxmZoACgAcBPgaAf4B0gwMDGBgwAIBlAjAYDIJ-BX4AADAYDIB5gmcBABiAfw9qbmA-ABg8ZmZ-ZmYAfGZmgAIXADxmYGBgZjwAeGxmZmZseAB-YGB8YGB-gwcKYAA-YGBuZmY-AGaBNgJmADyAvgUYPAA-BgaBpwhmbHhweGxmAGCBAA5-AMbu_tbGxsYAZnZ-fm6ALwBmgAAAPIFvgE-ADwJ2bDaBfwBsgR8BYDyA_wB-gVcAGIBnAGaDbwxmZjwYAMbGxtb-7sYAgAwCPGZmgIeAggEAfoDdBGB-ADwwgAACPADAgP0EBgMAPAyAAAY8ABA4bMYAhQAF_gAAYDAYgg8JPAY-Zj4AYGB8ZoD_CgAAPGBgYDwABgY-gXcKAAA8Zn5gPAAcMHyAWQgAAAA-ZmY-BnyCLwRmABgAOIH_ARgAgbAEcGBgZmyA_4AVgBcFAADs_tbGgHqCL4BPgP-CDwF8YIFPAmY-BoAfAmBgYIBfDWA8BnwAABh-GBgYDgAAgfmAh4L_BgAAxsbWfGyAFwI8GDyAT4E-D3wAAH4MGDB-ABwwMGAwMByCjRkYGBg4DAwGDAw4AAAAYPKeDAAAEDh8_nw4EIL6BAAAAAMDgwoI4AAAGBg8fn5-gxoAB4IiBMDAAQEBgS0I-Pz-__9_Px__gQAMwwAfP3____78-ICAgIMxJA8_Pw8HAP7-_Pz8_P7-AABCAABCPAB_fz8_Pz9_fwDg8Pz88OCCeQIBAQGEPwEAw4JRhF-BmgKAgICEmYMxCAB-fn48GBgZG4KYA-DAwMCFxIOxgsoHHpzYeDgQCBA" style='border:0' allowfullscreen></iframe>

<p>Expressions can include numbers, variables and arithmetic operators. Numbers are decimal, but can be prefixed with <kbd>$</kbd> for <a href='hexadecimal.html'>hexadecimal</a>, there are no <a href='notation.html'>precedence rules</a>.</p>

<pre>
10 LET A=6+7
20 PRINT 52+$20*A
30 END
</pre>

<p>Valid expressions arithmetic operators are <kbd>+-*/%</kbd>, bitwise operators are <kbd>&|</kbd>, logic operators are <kbd>&lt;&gt;=!</kbd>. The smallest number is -32768, the largest number is 32767.</p>

<h3>Variables</h3>

<p>Variables are single character uppercased letters of the alphabet. Some variables have special properties, here is the complete list:</p>

<ul>
	<li><kbd>R</kbd>, reads a random number.</li>
	<li><kbd>W</kbd>, reads the screen width.</li>
	<li><kbd>H</kbd>, reads the screen height.</li>
</ul>

<p>For example, if you wanted to do a program to roll a 6-sided dice using the <kbd>R</kbd>(random) variable.</p>

<pre>
10 PRINT "You rolled " R%6+1 "."
30 END
</pre>
<pre style='margin-top:-29px'>
You rolled 5.
</pre>


<h3>Loops</h3>

<p>Using a variable as counter, a program can loop over a number of lines five times:</p>

<pre>
10 LET I=0
20 PRINT "Count: " I
25 LET I=I+1
30 IF I<5 GOTO 20
40 END
</pre>
<pre style='margin-top:-29px'>
Count: 0
Count: 1
Count: 2
Count: 3
Count: 4
</pre>

<h3>Interaction</h3>

<p>The <kbd>INPUT</kbd> statement, will halt the execution and wait for an input. This can be used to store a value into a variable. For example, to capture the position of the mouse cursor: </p>

<pre>
10 PRINT "Touch the screen"
20 INPUT X, Y
30 PRINT "You touched at: " X ", " Y
50 PRINT "Press a button"
60 INPUT B
70 PRINT "You pressed: " B
80 END
</pre>

<img src="../media/refs/basic.png" width='200'>

<h3 id='manual'>Manual</h3>

<table border='1'>
	<tr>
		<th rowspan='6'>Hypervisor</th>
		<th rowspan='2'><code>RUN</code></th><td>Used to begin program execution at the lowest line number.</td></tr>
	<tr><td><pre>RUN</pre></td></tr>
	<tr><th rowspan='2'><code>LIST</code></th><td>Causes part or all of the user program to be listed. If no parameters are given, the whole program is listed. A single expression parameter in evaluated to a line number which, if it exists, is listed. </td></tr>
	<tr><td><pre>LIST 200
LIST</pre></td></tr>
	<tr><th rowspan='2'><code>CLEAR</code></th><td>Formats the user program space, deleting any previous programs. If included in a program the program becomes suicidal when the statement is executed.</td></tr>
	<tr><td><pre>CLEAR</pre></td></tr>
	
	<tr>
		<th rowspan='10'>Core</th>
		<th rowspan='2'><code>REM</code></th><td>Permits to add remarks to a program source.</td></tr>
	<tr><td><pre>REM This is a comment.</pre></td></tr>
	<tr><th rowspan='2'><code>LET</code></th><td>Assigns the value of an expression to a variable.</td></tr>
	<tr><td><pre>LET A=123/2, B=$20%2</pre></td></tr>
	<tr><th rowspan='2'><code>IF</code></th><td>If the result of the expression is not zero, the statement is executed; if False, the associated statement is skipped.</td></tr>
	<tr><td><pre>IF A>B-2 PRINT "A is greater."</pre></td></tr>
	<tr><th rowspan='2'><code>GOTO</code></th><td>Changes the sequence of program execution.</td></tr>
	<tr><td><pre>GOTO 50+A>B</pre></td></tr>
	<tr><th rowspan='2'><code>END</code></th><td>Must be the last executable statement in a program.  Failure to include an END statement will result in an error stop after the last line of the program is executed.</td></tr>
	<tr><td><pre>END</pre></td></tr>
	
	<tr>
		<th rowspan='4'>Subroutines</th>
		<th rowspan='2'><code>GOSUB</code></th><td>Changes the sequence of program execution, and remembers the line number of the GOSUB statement, so that the next occurrence of a RETURN statement will result in execution proceeding from the statement following the GOSUB.</td></tr>
	<tr><td><pre>GOSUB 220</pre></td></tr>
	<tr><th rowspan='2'><code>RETURN</code></th><td>Transfers execution control to the line following the most recent unRETURNed GOSUB.  If there is no matching GOSUB an error stop occurs. </td></tr>
	<tr><td><pre>RETURN</pre></td></tr>
	
	<tr>
		<th rowspan='4'>I/O</th>
		<th rowspan='2'><code>PRINT</code></th><td>Prints the values of the expressions and/or the contents of the strings in the console. To print the result of an expression as an <a href='ascii.html'>ascii</a> character, use <kbd>#$41</kbd>, to print the character A, end with a semi-colon to print without a linebreak.</td></tr>
	<tr><td><pre>PRINT "The result is: " A+B</pre></td></tr>
	<tr><th rowspan='2'><code>INPUT</code></th><td>Halts evaluation, and assigns the result of expressions to each of the variables listed in the argument. Expressions are entered sequencially and separated by a line break, a list of two arguments, will expect two input lines.</td></tr>
	<tr><td><pre>INPUT X, Y</pre></td></tr>
	
	<tr>
		<th rowspan='4'>File</th>
		<th rowspan='2'><code>SAVE</code></th><td>Exports your program to example.bas.</td></tr>
	<tr><td><pre>SAVE example.bas</pre></td></tr>
	<tr><th rowspan='2'><code>LOAD</code></th><td>Imports the example.bas program, replaces your current program.</td></tr>
	<tr><td><pre>LOAD example.bas</pre></td></tr>
	
	<tr>
		<th rowspan='12'>Screen</th>
		<th rowspan='2'><code>COLOR</code></th><td>Sets the interface RGB colors, see <a href='theme.html'>theme</a>.</td></tr>
	<tr><td><pre>COLOR $50f2, $b0f9, $a0f8</pre></td></tr>
	<tr><th rowspan='2'><code>CLS</code></th><td>Clears the screen.</td></tr>
	<tr><td><pre>CLS</pre></td></tr>
	<tr><th rowspan='2'><code>DRAW</code></th><td>Sets position of drawing.</td></tr>
	<tr><td><pre>DRAW 100, 320</pre></td></tr>
	<tr><th rowspan='2'><code>MODE</code></th><td>Sets drawing mode, see <a href='varvara.html#screen'>varvara</a>.</td></tr>
	<tr><td><pre>MODE 04</pre></td></tr>
	<tr><th rowspan='2'><code>SPRITE</code></th><td>Draws a <a href='icn_format.html'>sprite</a>, uses MODE.</td></tr>
	<tr><td><pre>SPRITE $1c1c, $087f, $0814, $2241</pre></td></tr>
	<tr><th rowspan='2'><code>PICT</code></th><td>Draws a picture from a file, uses MODE.</td></tr>
	<tr><td><pre>PICT image10x10.icn</pre></td></tr>
	
</table>

<ul>
	<li><a href='../etc/basic.tal.txt' target='_blank'>View source</a>, Uxntal.</li>
	<li><a href='https://rabbits.srht.site/tiny-basic/basic.rom' target='_blank'>Download ROM</a>, 4kb.</li>
	<li><a href='http://www.ittybittycomputers.com/IttyBitty/TinyBasic/TBuserMan.htm' target='_blank'>TinyBASIC User Manual</a></li>
	<li><a href='https://www.msx.org/wiki/Category:MSX-BASIC_Instructions' target='_blank'>MSX BASIC Commands</a></li>
	<li><a href='https://beebwiki.mdfs.net/VDU_23' target='_blank'>BBC Micro VDU 23</a></li>
</ul>

<img src="../media/refs/beasts19.png">
<style>
span.line { background:#ffee44; color:black }
span.cmd { background:#11eeaa; color:black }
span.link { background:white; color:black }
</style>
