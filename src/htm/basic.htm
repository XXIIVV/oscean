<h2>10 PRINT "Hello World"</h2>

<p>This guide is written specifically for the <a href='https://git.sr.ht/~rabbits/tiny-basic' target='_blank'>Sunflower BASIC implementation</a>, but it should still give a general idea of how to use the language's primitives which are also found in most BASIC implementations.</p>

<figure>
	<img src='../media/refs/vogue-basic.jpg' width='300'/>
	<figcaption>Typical BASIC Programmer</figcaption>
</figure>

<h3>Introduction</h3>

<p>A BASIC program begins with line numbers, control-flow is done by jumping to absolute line numbers which point to compiled BASIC code data. 0 is not a valid line number.</p>

<pre>
<span class='line'>15</span> <span class='cmd'>LET</span> A=0
<span class='line'>20</span> <span class='cmd'>PRINT</span> "Hello BASIC"
<span class='line'>25</span> <span class='cmd'>LET</span> A=A+1
<span class='line'>30</span> <span class='cmd'>IF</span> A=10 GOTO 50
<span class='line'>40</span> <span class='cmd'>GOTO</span> 20
<span class='line'>50</span> <span class='cmd'>END</span>
</pre>

<h3>Interpreter</h3>

<iframe height='384' width='624' src="../etc/uxn5/index.html#r=bKABYIAGN6Dg8YAIN6Dg7oAKN6DwSoAMN6ACcIAiN6ABgIAkN4AiNoBXYAdvgCQ2gEhgB2dgC0xgC4lgCQVgCYGgBwuAEDegAaGAgDeAdBAgAARgCZEAYAGQoAB0YARiAABUaW55QkFTSUMKQSCBB38gaW50ZXJwcmV0ZXIKQnkgRGV2aW5lIEx1IExpbnZlZ2EKMjUgQXVnIDIwMjUAAICDFmAGJwBgAIuvYAB7oA41oA4JtDTvYAwlIAANISGqIP_xIiJioAAAbGIjNKAABDhsgCg2oA4xoA4J4AAAz4ADHCAAA2AKGO-gAAM8gGA_oEQAIDiAKDe0NGAJYCEhQaog_9siImKAKDdgCdRgCdGgDo9gCUdgCchACeugAAI5NGAJOWAJukAJ3ZSAIAogAAFsIUD_9JSACAaUgCwIIAAHghcqBSGUIP_obGAAOSRg_-CUDyRPYAHdnSAAAiJsgBEzgAgzIWAAHoAEM6AAAIICBC4kYP-4gicXtZ0g_9oibGD_qJSAJAggADqUYAsHIAARggYgEKAAACegDwFACGmhJBRABgHgAADgAAp6wACUgDAZD3ghgAYUgAoLIP_pb2wh4AAAwEB_wACUYArSgBtRYArLASD_7G9soBkKoEAAYAsCYASQQAWagCA_oBkKOGxg_4hg__ImoFkKKyAACyIioA74oA7OQAf9L2D_GZQgAA4ioAAA72FhNaAAAG81bGD-doAMQWD-_aAHazRvNUAEDKAABDhsoFkKJOAAALQdIAAGYP_sQAAYYd1PIAAMIiJioA7FoA7dQAeroSE0JzQuqiD_2SIiYoAxDqAZCrSgAAAoIAAEJmAAMIBIBaog_-wiIoocDAwmJqAZCjmAAj9gCWqDJAPkIiJshBUFQAcsoAAAgI8iOWAH0KAOgmAHhkAILThsOWw6bDxsPWyggACvOCRvOCqAAASFDAArgAwAKIARACmAFn-7OjlsnYAACCAAEWAAF686JGAAEa86eiQ7bzpsITsnoA7iQAbpJoAPP6D__zqgAAE9bA-gDjWUzwggAAchISGUIP_zITRCbA8ZDx0iYAQ7oBkKQP7qD04PU2D90pQgAAciYP8NQAeYYP3dL2D9wJQgAAsib2D-eWD_OUAHgmD9x1xg_m0hI29g_mdg_utAB3APtw-9ImAH5ED-Rw_bD98iQP6YEAcQC2D9hZQgAAQiQP6JlIAZEyFg_XWUgD0IIAAJoA8IYAZIQP5xIWD9eoAAYAPBQP_REDwQP2D9ax2CMjlWQAjiEG0QcmD9WSZg_f40HSAADCIjoPAAJKAOzkAGCyMjQP3oEJoQniIioP_wbBC6EMBg_S4mYP3TiypTBeAjJKAABDhgAlFA_bYQ7hD1IiJAAmERIxEpoAENE2D84GAAEpQg__YioAAACCAAA2AGmUD915SAOwkgAAghoADpE0AGjZSAIgkgAAQhQAXGlIAjgRkVYPy_A0AF2JRgB_IgAAZg_LFABeiUgIBCEQagESNABWhsEYIRiGADE2ADY4CiVxG4Eb1g_HJgAXKgAHRgB6cgAAmgAHSgDthABT1g_Q1gAaZgAoCgAHSAqDegAAGAqjfgBgfArICj95YgAAxCYgJg_cZgBONA_TyAAGABw0D_5xHfEeRg_CGFLwlg_XVA_R4SBxINgoYzEmD8HYAIN2D8F4AKN2D8EYAMNyJA_P0SPxJDIqAAIKAL4jVgA-5gBbBA_OgSVxJcYPvunYG_BQkmgCg3JoAfAyJg-9qCE38EJoAqNyIiYAWCQPy6EoAShWD7wCMDoAuFFUD8qhKgEqdg-7BgA1lg-6pgA1Ng-6RgA01g-55gA0ciQPyKEt0S4mD7d2AC30D8fQ66AWFg-2qUIAAEIkD6_2D60Z0gAAcjoA8RQAQ0I0D7NhMLExBg-2KAMD-gE844L2D7PpQgAGsFImJA_EFg-0vvYWE1QP_qoAoSFokgAAgioAB0YP6nAGAAAgIAgHQGgLMJIAAKIqAO-KAO00AD44GA6hMRbKB05BOUBiAABWD_2yJsYP_WIUD_75QgAAIibJQGgB8KIAAHAiKAAEAAB2AABCGAXgZZCiag7_gphUsbzkADl6GA6DMVbKBZCoDgMic5QAZkoBjAJqAZAIUlHRC6QANxoSGA5zM1bIDiMiagGMApIAANIqDwAKAO7oEef1KgAAI5JoDFMzRsBoAICCAAJgaACgggAH8GgA0IIAB4gCCLAyAAD4B-igMgAAgGYAB4BmAAkwJsAqAAbxIJIAABbGAAd6AAJhdgBAyAKLagACCqDCQiBTegAC8XoAEmF0AD4YDFECAAFqAAAJSAIAsgAAqUYAVtIPrDQAWRImygKAAAYPnuYPoEYADAIAAEIkAA25Qg_-wibAJgA6Jg_8SgAACAAAaABBMxgCoLBoA_CSAAAiJsgYDygRE97BKAARkGgOUTEWxgAt1AA3WgAECgADRABVmAQRkGgBoLIAAIAiKgDwhAAmkGGIBAGDFsBoBSCSAABAJABDyAI4AUMTBsYPlqlGAE0IAACCAABJRgAAchlCD_6iJsgLQGgMQJIAAKAqAO-KAOzkACIoGA6hMRgRgC4hILgEgugABsgYDvExBsYP_pYP-HgMsSgOESGWygAAQ4gMUxoAlMgJA3oAmBgIA3bKABJheA0QqQN6ABoYCAN4DFMIDgLsUxQPn7YAL2gACAlhYGgPgToAABKCAAAQCAkjZg_6ggAAdgAs1g_8EAgJQ2YP-YgQ8QvWD_sQAAoACCFgYgAA4igIOABzwCAgBg_jgAYP90IAADYP-QACZgA88gAAagDthAAWgmgKg3oAAIgKo3YABkgBQTgCATgCg2gBQzoBkCgCw3g5wF4AuFVMAvgKUEKDegAACAGwusN9cBiiD_9CJgAe6ACEriImJsoBkCoSGvgPgzNW-gGQopIAARoBkCJoAsN4DlM6ALhRSALxdsYAOloAAKObRgAAwPoAADODRgAANPBGxgA3UEYANxgEAfHWyFZwmAKjeggi4XoAAYhg8AkIAPgocAGIAfCaAuF4AiNqAAGDmGMwCAhCMBgCSCGYMTgcwAIIU7CUABNKBGJhegF9CA6QIFL5eAAAcXbGD_fmD_5oD5bmABM2ABNqAOWWAAhmABJ6AOamAAfWD440ABG2ABGKAOs2AAbkABDyc0HSAAAyIibGAAo2ABLrSgAAQ5NGAAU2ABIiEhNGAASkAAy6AOv2AAQYA8YABLYAA5gD5gAEOAOmAAPmAA_mAAKWAAqqATRoKFIheAKLagAAg5BTdslIAiCCAACZRgABYhlCD_8CFslAYgAAMCgGkZBCFA__EGgAoJIAAEAkAAaoAABIAwP6ATzjiAzBsJLxdsB4CAHIAACCAADoAtYP_UoH__PKCAACQ5gNklgACAIhOgJxBgABmgA-hgABOgAGRgAA2gAApgAAcDgDAYQP-ju4aBPRgMBoAwGGD_lID_gO8TAjo5bKAAIIAoN4AqgKUcOK8FN2-AJDagABg5KyAAA0D-QmxgABdg_9qgEz6AzwABiM-DEwACiOOC7QA4gB0sEiYXgECgEz5AACJg__GgFiYXgMGgE46AlhYgAAQioBNOgJI2gAozgJQ2gA4zgOUHAACgAAQ5gCiFCRsqN4AvlxdsoAy8gKg3oAACgKo3oAyqgKw3oAywgQUQtoCsN4CiNh0gAAFsoAAAgAiARAGACoEFIAw3bC50aGVtZQCgAMYWoADFFoBgPz6gAMQWgMA_PoAiM4EKCwQ_oADDFiY4PqAAwoEgCYDANoCgPz6ADzOAUQcmgFA_PiaAA4A4GAAmgO0zJoABPz4-gPGzAmxgAC2AIGAASLSAtQM0YAAQgA1EOiEhNGAABYAKQAAvlAYgAAMCImxgACQhQP_x4P8AoAAKu686OW9BnSD_8yIDgDAYYAAIR1jPIP_zYmyAFxOgDYSArjdsge0AAYDtEg2EgKQ3gABgACYBbAZgABIgAAuCBhQEgCQJbAKAAGyAQRmAGgtsgDAZgAqBBjkGgAkKDGyAJxkGgAoZgAUKDGwCgP9slCAAAiFsIUD_9mDz1J0gAAcjoA8RQP03LC-U1E8JIAAGYSGUgIUSFIAACGyACzOADDOgDgGAAjdsAIMAfwRPBF0ElwSiBKoE3QTvBRAFGgVCBUsFrwYOBb0GJAZFBloGiAaYBrgGxQbmKwPaLQPcKgPeLwQMJgPgfAPiPAPkPgPxPQP-IQQDJQQIAAAAU1VORkxPV0VSIEJBU0lDIABUWVBFICJIRUxQIiBGT1IgSU5GTyB_IAAgQllURVMgBEZSRUUKhyQFIFBSSU5UgiqBCg8gREVUQUlMUwBSRUFEWS4AgEk0AEVSUk9SAElORklOSVRFAExJTkUAUEFUSABGSUxFAExPT1AARElWLUJZLVpFUk8AVU5ERVKAlgIAT1aDCFJOVU1CRVIAVkFSSUFCTEUAQ09NTUFORABSVU4Af1JVTiBCZWdpbiBldmFsdWF0aW9uIGZyb20gc21hbGxlc3QgbGluZSBudW1iZXIuAExJU1QAf4AFACCEABVQcmludCBlbnRpcmUgcHJvZ3JhbS4KgiMBMTKII4FJATEygxsFMjAsIDMwiBsScyAyMCB0byAzMC4AQ0xFQVIAf4EGBiAgRXJhc2WMYy4AUkVNAH9SRU0gVGhpcyBpcyBhIGNvbW1lbnQuLiAgTGVhdmUgcmVtYXJrLgBMRYC3HUVUIFg9MTIsIFk9QSsxICBBc3NpZ24gZXhwcmVzc4D7Q3RvIHZhcmlhYmxlLgBJRgB_SUYgQT5CIFBSSU5UIEMgIEV2YWx1YXRlIG9ubHkgd2hlbiBub3QgemVyby4AR09UTwB_gAUAIIFfCUNvbnRpbnVlIGWCNYBhAGGC7BEuAEVORAB_RU5EICBUZXJtaW6AVIYngEwCU1VCgE0CU1VCgk6FexhzdWJyb3V0aW5lIHVudGlsIFJFVFVSTi4AggcBAH-CD5KAA2Zyb22HQQEuAIHbAQB_guIJIkEgc3RyaW5nIoLCEERpc3BsYXkgdGV4dCB3aXRogb0GYnJlYWsuCo0zATsggACIMwguAElOUFVUAH-BBgogWCwgWSAgUGF1c4mTgsURdXNlciBpbnB1dC4ATE9BRAB_gAWDERtiYXMgIExvYWQgYmFzaWMgZmlsZS4AU0FWRQB_gAUDIG91dIUnA1NhdmWJJwZDT0xPUgB_gQZJICQ1MGYyLCAkYjBmOSwgJGEwZjggIFNldCBpbnRlcmZhY2UgY29sb3JzLgBDTFMAf0NMUiAgQ2xlYXIgc2NyZWVuLgBEUkFXAH-ABQUgMzIsIDSDQAtkcmF3aW5nIHBvc2mA2AcuAE1PREUAf4AFASAyiiMCbW9kgMADUFJJVIDCgQcMICQxYzFjLCAkMDg3ZoEGIjE0LCAkMjI0MSAgUGFpbnQgOHg4IHNwcml0ZS4AUElDVAB_gAUOIGltYWdlMjB4MjAuaWNuhCwEMS1iaXSCGwcuAFBPS0UAf4AFCSAkMTAsICQxMjOAXQc0NTY3LCAuLoPCBWF0YSBhdIAiAi4A_4MAAapVggEHAAAAAAgUFBeABwMACAgIgQcCAADAgwcdABAQIBAQCAcADw8fDw8HAAAgEBAQICDAAMDg4ODAhSUACII_AQAAsz_A_gcAYIAABQBgAGZmZoL_HWz-bGz-bAAYPmA8BnwYAABmbBgwZkYAOGw4cN7MdoAvgf8BHDCAAAMcADgMgAAGOAAAZjz_PIBCBBgYfhgYg_8BMDCALAB-hf8cGBgAAwYMGDBgwAA8Zm52ZmY8ABg4GBgYGH4APGaAGBV-AH4MGAwGZjwADBw8bH4MDAB-YHwGgA8DPGBgfIAvAH6APwUwMAA8ZmaAAoAHAT4GgH-AdIMDAxgYMACAZQIwGAyCfgV-AAAwGAyAeYJnAQAYgH8Pam5gPgAYPGZmfmZmAHxmZoACFwA8ZmBgYGY8AHhsZmZmbHgAfmBgfGBgfoMHCmAAPmBgbmZmPgBmgTYCZgA8gL4FGDwAPgYGgacIZmx4cHhsZgBggQAOfgDG7v7WxsbGAGZ2fn5ugC8AZoAAADyBb4BPgA8Cdmw2gX8AbIEfAWA8gP8AfoFXABiAZwBmg28MZmY8GADGxsbW_u7GAIAMAjxmZoCHgIIBAH6A3QRgfgA8MIAAAjwAwID9BAYDADwMgAAGPAAQOGzGAIUABf4AAGAwGIIPCTwGPmY-AGBgfGaA_woAADxgYGA8AAYGPoF3CgAAPGZ-YDwAHDB8gFkIAAAAPmZmPgZ8gi8EZgAYADiB_wEYAIGwBHBgYGZsgP-AFYAXBQAA7P7WxoB6gi-AT4D_gg8BfGCBTwJmPgaAHwJgYGCAXw1gPAZ8AAAYfhgYGA4AAIH5gIeC_wYAAMbG1nxsgBcCPBg8gE-BPg98AAB-DBgwfgAcMDBgMDAcgo0ZGBgYOAwMBgwMOAAAAGDyngwAABA4fP58OBCC-gQAAAADA4MKCOAAABgYPH5-foMaAAeCIgTAwAEBAYEtCPj8_v__fz8f_4EADMMAHz9____-_PiAgICDMSQPPz8PBwD-_vz8_Pz-_gAAQgAAQjwAf38_Pz8_f38A4PD8_PDggnkCAQEBhD8BAMOCUYRfgZoCgICAhJmDMQgAfn5-PBgYGRuCmAPgwMDAhcSDsYLKBx6c2Hg4EAgQ" style='border:0' allowfullscreen></iframe>

<p>Expressions can include numbers, variables and arithmetic operators. Numbers are decimal, but can be prefixed with <kbd>$</kbd> for <a href='hexadecimal.html'>hexadecimal</a>, there are no <a href='notation.html'>precedence rules</a>.</p>

<pre>
10 LET A=6+7
20 PRINT 52+$20*A
30 END
</pre>

<p>Valid expressions arithmetic operators are <kbd>+-*/%</kbd>, bitwise operators are <kbd>&|</kbd>, logic operators are <kbd>&lt;&gt;=!</kbd>. The smallest number is -32768, the largest number is 32767.</p>

<h3>Variables</h3>

<p>Variables are single character uppercased letters of the alphabet. Some variables have special properties, here is the complete list:</p>

<ul>
	<li><kbd>R</kbd>, reads a random number.</li>
	<li><kbd>W</kbd>, reads the screen width.</li>
	<li><kbd>H</kbd>, reads the screen height.</li>
</ul>

<p>For example, if you wanted to do a program to roll a 6-sided dice using the <kbd>R</kbd>(random) variable.</p>

<pre>
10 PRINT "You rolled " R%6+1 "."
30 END
</pre>
<pre style='margin-top:-29px'>
You rolled 5.
</pre>


<h3>Loops</h3>

<p>Using a variable as counter, a program can loop over a number of lines five times:</p>

<pre>
10 LET I=0
20 PRINT "Count: " I
25 LET I=I+1
30 IF I<5 GOTO 20
40 END
</pre>
<pre style='margin-top:-29px'>
Count: 0
Count: 1
Count: 2
Count: 3
Count: 4
</pre>

<h3>Interaction</h3>

<p>The <kbd>INPUT</kbd> statement, will halt the execution and wait for an input. This can be used to store a value into a variable. For example, to capture the position of the mouse cursor: </p>

<pre>
10 PRINT "Touch the screen"
20 INPUT X, Y
30 PRINT "You touched at: " X ", " Y
50 PRINT "Press a button"
60 INPUT B
70 PRINT "You pressed: " B
80 END
</pre>

<img src="../media/refs/basic.png" width='200'>

<h3 id='manual'>Manual</h3>

<table border='1'>
	<tr>
		<th rowspan='6'>Hypervisor</th>
		<th rowspan='2'><code>RUN</code></th><td>Used to begin program execution at the lowest line number.</td></tr>
	<tr><td><pre>RUN</pre></td></tr>
	<tr><th rowspan='2'><code>LIST</code></th><td>Causes part or all of the user program to be listed. If no parameters are given, the whole program is listed. A single expression parameter in evaluated to a line number which, if it exists, is listed. </td></tr>
	<tr><td><pre>LIST 200
LIST</pre></td></tr>
	<tr><th rowspan='2'><code>CLEAR</code></th><td>Formats the user program space, deleting any previous programs. If included in a program the program becomes suicidal when the statement is executed.</td></tr>
	<tr><td><pre>CLEAR</pre></td></tr>
	
	<tr>
		<th rowspan='10'>Core</th>
		<th rowspan='2'><code>REM</code></th><td>Permits to add remarks to a program source.</td></tr>
	<tr><td><pre>REM This is a comment.</pre></td></tr>
	<tr><th rowspan='2'><code>LET</code></th><td>Assigns the value of an expression to a variable.</td></tr>
	<tr><td><pre>LET A=123/2, B=$20%2</pre></td></tr>
	<tr><th rowspan='2'><code>IF</code></th><td>If the result of the expression is not zero, the statement is executed; if False, the associated statement is skipped.</td></tr>
	<tr><td><pre>IF A>B-2 PRINT "A is greater."</pre></td></tr>
	<tr><th rowspan='2'><code>GOTO</code></th><td>Changes the sequence of program execution.</td></tr>
	<tr><td><pre>GOTO 50+A>B</pre></td></tr>
	<tr><th rowspan='2'><code>END</code></th><td>Must be the last executable statement in a program.  Failure to include an END statement will result in an error stop after the last line of the program is executed.</td></tr>
	<tr><td><pre>END</pre></td></tr>
	
	<tr>
		<th rowspan='4'>Subroutines</th>
		<th rowspan='2'><code>GOSUB</code></th><td>Changes the sequence of program execution, and remembers the line number of the GOSUB statement, so that the next occurrence of a RETURN statement will result in execution proceeding from the statement following the GOSUB.</td></tr>
	<tr><td><pre>GOSUB 220</pre></td></tr>
	<tr><th rowspan='2'><code>RETURN</code></th><td>Transfers execution control to the line following the most recent unRETURNed GOSUB.  If there is no matching GOSUB an error stop occurs. </td></tr>
	<tr><td><pre>RETURN</pre></td></tr>
	
	<tr>
		<th rowspan='4'>I/O</th>
		<th rowspan='2'><code>PRINT</code></th><td>Prints the values of the expressions and/or the contents of the strings in the console. To print the result of an expression as an <a href='ascii.html'>ascii</a> character, use <kbd>#$41</kbd>, to print the character A, end with a semi-colon to print without a linebreak.</td></tr>
	<tr><td><pre>PRINT "The result is: " A+B</pre></td></tr>
	<tr><th rowspan='2'><code>INPUT</code></th><td>Halts evaluation, and assigns the result of expressions to each of the variables listed in the argument. Expressions are entered sequencially and separated by a line break, a list of two arguments, will expect two input lines.</td></tr>
	<tr><td><pre>INPUT X, Y</pre></td></tr>
	
	<tr>
		<th rowspan='4'>File</th>
		<th rowspan='2'><code>SAVE</code></th><td>Exports your program to example.bas.</td></tr>
	<tr><td><pre>SAVE example.bas</pre></td></tr>
	<tr><th rowspan='2'><code>LOAD</code></th><td>Imports the example.bas program, replaces your current program.</td></tr>
	<tr><td><pre>LOAD example.bas</pre></td></tr>
	
	<tr>
		<th rowspan='12'>Screen</th>
		<th rowspan='2'><code>COLOR</code></th><td>Sets the interface RGB colors, see <a href='theme.html'>theme</a>.</td></tr>
	<tr><td><pre>COLOR $50f2, $b0f9, $a0f8</pre></td></tr>
	<tr><th rowspan='2'><code>CLS</code></th><td>Clears the screen.</td></tr>
	<tr><td><pre>CLS</pre></td></tr>
	<tr><th rowspan='2'><code>DRAW</code></th><td>Sets position of drawing.</td></tr>
	<tr><td><pre>DRAW 100, 320</pre></td></tr>
	<tr><th rowspan='2'><code>MODE</code></th><td>Sets drawing mode, see <a href='varvara.html#screen'>varvara</a>.</td></tr>
	<tr><td><pre>MODE 04</pre></td></tr>
	<tr><th rowspan='2'><code>SPRITE</code></th><td>Draws a <a href='icn_format.html'>sprite</a>, uses MODE.</td></tr>
	<tr><td><pre>SPRITE $1c1c, $087f, $0814, $2241</pre></td></tr>
	<tr><th rowspan='2'><code>PICT</code></th><td>Draws a picture from a file, uses MODE.</td></tr>
	<tr><td><pre>PICT image10x10.icn</pre></td></tr>
	
</table>

<ul>
	<li><a href='../etc/basic.tal.txt' target='_blank'>View source</a>, Uxntal.</li>
	<li><a href='https://rabbits.srht.site/tiny-basic/basic.rom' target='_blank'>Download ROM</a>, 4kb.</li>
	<li><a href='http://www.ittybittycomputers.com/IttyBitty/TinyBasic/TBuserMan.htm' target='_blank'>TinyBASIC User Manual</a></li>
	<li><a href='https://www.msx.org/wiki/Category:MSX-BASIC_Instructions' target='_blank'>MSX BASIC Commands</a></li>
	<li><a href='https://beebwiki.mdfs.net/VDU_23' target='_blank'>BBC Micro VDU 23</a></li>
</ul>

<img src="../media/refs/beasts19.png">
<style>
span.line { background:#ffee44; color:black }
span.cmd { background:#11eeaa; color:black }
span.link { background:white; color:black }
</style>
