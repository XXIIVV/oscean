<h2>10 PRINT "Hello World"</h2>

<p>This guide is written specifically for the <a href='https://git.sr.ht/~rabbits/tiny-basic' target='_blank'>Sunflower BASIC implementation</a> of the TinyBASIC compiler, but it should still give a general idea of how to use the language's primitives which are also found in most BASIC implementations.</p>

<figure>
	<img src='../media/refs/vogue-basic.jpg' width='300'/>
	<figcaption>Typical BASIC Programmer</figcaption>
</figure>

<h3>Introduction</h3>

<p>A BASIC program begins with line numbers, control-flow is done by jumping to absolute line numbers which point to compiled BASIC code data. 0 is not a valid line number.</p>

<pre>
<span class='line'>15</span> <span class='cmd'>LET</span> A=0
<span class='line'>20</span> <span class='cmd'>PRINT</span> "Hello BASIC"
<span class='line'>25</span> <span class='cmd'>LET</span> A=A+1
<span class='line'>30</span> <span class='cmd'>IF</span> A=10 GOTO 50
<span class='line'>40</span> <span class='cmd'>GOTO</span> 20
<span class='line'>50</span> <span class='cmd'>END</span>
</pre>

<h3>Interpreter</h3>

<iframe height='384' width='624' src="../etc/uxn5/index.html#r=RqABOoAGN6Dg8YAIN6Dg7oAKN6DwSoAMN6ACcIAiN6ABgIAkN2AKm2AK2GAI3qAGWIAQN6ABe4CANwAAVGlueUJBU0lDCkEggQd_IGludGVycHJldGVyCkJ5IERldmluZSBMdSBMaW52ZWdhCjI0IEF1ZyAyMDI1AACAgxZgBYkAYACLr2AAe6ANlaANa7Q072ALkiAADSEhqiD_8SIiYqAAAGxiIzSgAAQ4bIAoNqANk6ANa-AAAM-AAxwgAANgCVrvoAADPIBgP6BEACA4gCg3tDRgCL8hIUGqIP_bIiJigCg3YAk_YAk8oA3rYAimYAkzQAlQoAACOTRgCJhgCSVACUKUgCAKIAABbCFA__SUgAgGlIAsCCAAB4IXKgUhlCD_6GxgADkkYP_glA8kT2ABuJ0gAAIibIARM4AIMyFgAB6ABDOgAACCAgQuJGD_uIInF5CdIP_aImxg_6iUgCQIIAA6lGAKbCAAEYIGIBCgAAAnoA5PQAfcoSQUQAVj4AAA4AAKesAAlIAwGQ94IYAGFIAKCyD_6W9sIeAAAMBAf8AAlGAKN4AbHGAKMAEg_-xvbKAW9aBAAGAKb0AE_4AgP6AW9ThsgIw1FvU5bGD_g2D_6iagVvUrIAALIiKgDkagDiFAB2svYP8UlCAADiKgAADvYWE1oAAAbzVsYP5xgAwrYP74oAanNG81QANvtB0gAANAAAahITQnNCygAAQ4bKBW9SRg_-aqIP_5IiKADQ6gFvW0oAAAKCAABCZgADCAJAOqIP_sjBwCDCYmgJQFgAI_YAjggyQD5CIibIQVGEAGuThsOWw6bDxsPWyggACvOCRvOCqAAASFDAArgAwAKIARACmAFn-7OjlsnYAACCAAEWAAF686JGAAEa86eiQ7bzpsITsnoA4wQAaBJoAPP6D__zqgAAE9bA-gDZWUzwggAAchISGUIP_zITRCbA5nDmsioBb1QP8lDpwOoWD9-pQgAAciYP8kQAclYP4FYP6oI2D_WUAHGA7dDuMiYAeMQP6KDwEPBTsiQP7uDy0PMWD9yJQgAAQiQP7flIAWEyFg_biUgD0IIAAGoA5WQAX-IWD9wIAAYANpQP_UD2IPZWD9sR2CLzmvQAiVD5MPmGD9nyZg_kE0HSAADCIjoPAAJKAOIUAFxCMjQP4rD8APxCIioP_wbA_gD-Zg_XQmYP4WjCpSmSMkoAAEOGAB-UD9-RAUEBsiIkACCRBJEE-gAQ0TYP0mYAASlCD_9iKgAAAIIAADYAYhQP4wlIA7CSAACCGgAOkTQAY4lIAiCSAABCFABWuUgCOBGRVg_QUDQAV9lGAHnSAABmD890AFkJSAgEIRBqAQSUAFIWwQqBCuYALTYAMjgKJUEN4Q42D8uGABLKAAdGAHUiAACaAAdKAOK0AE9mD9U2ABTmACKKAAdICoN6AAAYCqN-AFmMCsgKP3liAACUJiAmAEqED9mIAAYAFuQP_qEQURCmD8aoUsCWD9rUD9ehEtETOCgzUSYPxmgAg3YPxggAo3YPxagAw3IkD9WRFlEWkiYAOuQP1OEX0RgmD8QSaAKDegCyc1YPw2gCqAI381EaYRq2D8KCMDoArBFUD9JRHGEc1g_BhgAzFg_BJgAytg_AxgAyVg_AZgAx8iQP0FEgMSCGD732ACt0D8-A4WATtg-9KUIAAEIkD7Z2D7OZ0gAAcjoA5fQAQPI0D7nqAKEhaJIAAIIqAAdGD-7gBgAAICAKAAdAaAswkgAAoioDQORqAOJkAD4oGA6hMxbGAGhqAAdEAGwJQGgB8KIAAHAiKAAEAAB2AABCFA_-qgVvUmoO_4KYU5GyFAA6ihgOgzFWygVvWA4DInOUAGb6AWqyagFuuFJR0P4EADgqEhgOczNWyA4jImoBarKSAADSKg8ACgDjyBHn9joAACOSaAxTM0bAaACAggACYGgAoIIAB_BoANCCAAeIAgiwMgAA-AfooDIAAIBmAAeAZgAJMCbAKgAG8SCSAAAWxgAHegACYXYAQPgCi2oAAgqgwkIgU3oAAvF6ABJhdAA-SAxRAgABagAACUgCALIAAKlGAFcCD7ZkAFnCJsoCgAAGD6jGD6omAA2CAABCJAAPOUIP_sImwCYAOCYP_EoAAAgAAGgAQTMYAqCwaAPwkgAAIibIGA8oERTOwSgAEZBoDlExFsYALaQAN4oABAoAA0QAVkgEEZBoAaCyAACAIioA5WQAJ6BhiAQBgxbAaASAkgAAUCgCQ2bAaAUgkgAAQCQAQzBoBXghYCIjZsgDuALDEwbGD58JRgBLuAAAggAASUYAAHIZQg_-oibIC0BoDECSAACgKgDkagDiFAAhuBgOoTEYEYAuISC4BUMYAAbIGA7xMQbGD_6WD_b4DLEoDhEhlsoAAEOIDFMaAIo4CQN6AIy4CAN2xgAvGgASYXgOwKkDegAXuAgDeAxTCA-zfFMUD6kWAC3oAAgJYWBoD4E6AAASggAAEAgJI2YP-lAoCUNmD_niAAA2D_ugCgAIIWBiAADiKAg4AHCQICAGD-KgBg_36BHy2aACZgA8QgAAagDitAAWsmgKg3oAAIgKo3YABkgBQTgCATgCg2gBQzoBbtgCw3g48F4ArBVMAvgJgEKDegAACAGwusN9cBiiD_9CJgAemACEriImJsoBbtoSGvgPgzNW-gFvUpIAARoBbtJoAsN4DlM6AKwRSALxdsYAOaoAAKObRgAAwPoAADODRgAANPBGxgA2oEYANmgEAfHWyFZwmAKjeggi4XoAAYhg8AkIAPgocAGIAfCaAuF4AiNqAAGDmGMwCAhCMBgCSCGYMTgcwAIIU7CUABL6BGJhegFbuA6QIFL5eAAAcXbGD_fmD_5oD5ZWABBWABK6ANuWAAdWAA-aANymAAbGAA8GD4p2AAqqAN32AAXWAA4WAA3qAOD2AAUUAA1WAAkmABILSgAAI5NGAAP2ABFCEhNGAANkAAw6AOG2AALYA8YAA3YAAlgD5gAC-AOmAAKoBQPQAVQACilIAiCCAACZRgABYhlCD_8CFslAYgAAMCImxgAAQhQP_xBoAKCSAABAJAAHaAIBmAAASAMD-gErk4gL4bCS8XbAeAgByAAAggAA6ALWD_0aB__zyggAAkOYD4JYAAgCIToCcQYAAZoAPoYAAToABkYAANoAAKYAAHA4AwGED_oLuGgT08DAaAMBhg_5GA_4DvEwI6OWxgADpgAANAACCgACCAKDeAKragAAg4rwU3b4AkNqAAGDkrIAADQP5HbKASMYCLBAEvF4AogCMCOQU3hBMAAogTgh0AOIEdKyYXgECgEjFAACJg__GgFiYXgMGgEnmAlhYgAAQioBI5gJI2gAozgJQ2gA4zgOgHAACgAAQ5gCiFCRsqN4AvlxdsoAv7gKg3oAACgKo3oAvpgKw3oAvvgQUQ9YCsN4CiNh0gAAFsoAAAgAiARAGACoEFIAw3bC50aGVtZQCgAMYWoADFFoBgPz6gAMQWgMA_PoAiM4EKCwQ_oADDFiY4PqAAwoEgCYDANoCgPz6ADzOAUQcmgFA_PiaAA4A4IAAmgO0zJoABPz4-gPGzAmxgAC2AIGAASLSgAAI5NGAAEIANRDohITRgAAWACkAAL5QGIAADAiJsYAAkIUD_8eD_AKAACruvOjlvQZ0g__MiA4AwGGAACEdYzyD_82JsgBcToAzDgK43bIHtAAGA7RIMw4CkN4AAYAAmAWwGYAASIAALggYUBIAkCWwCgABsgEEZgBoLbIAwGYAKgQZBBoAJCgxsgCcZBoAKGYAFCgxsAoD_bJQgAAIhbCFA__amYP_yJCE5bGD0Z50gAAcjoA5fQP09LC-U1E8JIAAGYSGUgI0SFIAACGyACzOADDOgDUiAAjdsAIMAAoAWM4QXAGCAFwABhBh_AAAEBAQPBC4EOQRBBHEEgwSkBK4E1gTfBUMFnwVRBbUF1gXhBfoGCgYqBjcrA48tA5EqA5MvA8EmA5V8A5c8A5k-A6Y9A7MhA7glA70AAABTVU5GTE9XRVIgQkFTSUMgAFRZUEUgIkhFTFAiIEZPUiBJTkZPACBCWVRFUyBGUkUARYcgBSBQUklOVIImgQoPIERFVEFJTFMAUkVBRFkuAIBFJgBFUlJPUgBMSU5FAFBBVEgARklMRQBESVYtQlktWkVSTwBVTkRFUoCEAgBPVoMIUk5VTUJFUgBWQVJJQUJMRQBDT01NQU5EAFJVTgB_UlVOIEJlZ2luIGV2YWx1YXRpb24gZnJvbSBzbWFsbGVzdCBsaW5lIG51bWJlci4ATElTVAB_gAUAIIEAFVByaW50IGVudGlyZSBwcm9ncmFtLgqCIAIxMjOEIIFDCzEyMy4AQ0xFQVIAf4EGBiAgRXJhc2WMPi4AUkVNAH9SRU0gVGhpcyBpcyBhIGNvbW1lbnQuLiAgTGVhdmUgcmVtYXJrLgBMRYCPHUVUIFg9MTIsIFk9QSsxICBBc3NpZ24gZXhwcmVzc4DTIXRvIHZhcmlhYmxlLgBJRgB_SUYgQT5CIFBSSU5UIEMgIEWC_xtlIG9ubHkgd2hlbiBub3QgemVyby4AR09UTwB_gAUAIIFfCUNvbnRpbnVlIGWCNYBhAGGC5hEuAEVORAB_RU5EICBUZXJtaW6AVIYngEwCU1VCgE0CU1VCgk6FexhzdWJyb3V0aW5lIHVudGlsIFJFVFVSTi4AggcBAH-CD5KAA2Zyb22HQQEuAIHbAQB_guIJIkEgc3RyaW5nIoLCEERpc3BsYXkgdGV4dCB3aXRogb0GYnJlYWsuCo0zATsggACIMwguAElOUFVUAH-BBgogWCwgWSAgUGF1c4mTgsURdXNlciBpbnB1dC4ATE9BRAB_gAWDERtiYXMgIExvYWQgYmFzaWMgZmlsZS4AU0FWRQB_gAUDIG91dIUnA1NhdmWJJwZDT0xPUgB_gQZJICQ1MGYyLCAkYjBmOSwgJGEwZjggIFNldCBpbnRlcmZhY2UgY29sb3JzLgBDTFMAf0NMUiAgQ2xlYXIgc2NyZWVuLgBEUkFXAH-ABQUgMzIsIDSDQAtkcmF3aW5nIHBvc2mA2AcuAE1PREUAf4AFASAyiiMCbW9kgMADUFJJVIDCgQcMICQxYzFjLCAkMDg3ZoEGIjE0LCAkMjI0MSAgUGFpbnQgOHg4IHNwcml0ZS4AUElDVAB_gAUOIGltYWdlMjB4MjAuaWNuhCwEMS1iaXSCGwIuAP-DAAcAAAAACBQUF4AHAwAICAiBBwIAAMCDBx0AEBAgEBAIBwAPDx8PDwcAACAQEBAgIMAAwODg4MCFJQAIgj8BAACzPwIAAGCAAAUAYABmZmaCgh1s_mxs_mwAGD5gPAZ8GAAAZmwYMGZGADhsOHDezHaAL4GyARwwgAADHAA4DIAABjgAAGY8_zyAQgQYGH4YGIPNATAwgCwAfoVtHBgYAAMGDBgwYMAAPGZudmZmPAAYOBgYGBh-ADxmgBgVfgB-DBgMBmY8AAwcPGx-DAwAfmB8BoAPAzxgYHyALwB-gD8FMDAAPGZmgAKABwE-BoB_gHSDAwMYGDAAgGUCMBgMgn4FfgAAMBgMgHmCZwEAGIB_D2puYD4AGDxmZn5mZgB8ZmaAAhcAPGZgYGBmPAB4bGZmZmx4AH5gYHxgYH6DBwpgAD5gYG5mZj4AZoE2AmYAPIC-BRg8AD4GBoGnCGZseHB4bGYAYIEADn4Axu7-1sbGxgBmdn5-boAvAGaAAAA8gW-AT4APAnZsNoF_AGyBHwFgPID_AH6BVwAYgGcAZoNvDGZmPBgAxsbG1v7uxgCADAI8ZmaAh4CCAQB-gN0EYH4APDCAAAI8AMCA_QQGAwA8DIAABjwAEDhsxgCFAAX-AABgMBiCDwk8Bj5mPgBgYHxmgP8KAAA8YGBgPAAGBj6BdwoAADxmfmA8ABwwfIBZCAAAAD5mZj4GfIIvBGYAGAA4gf8BGACBsARwYGBmbID_gBWAFwUAAOz-1saAeoIvgE-A_4IPAXxggU8CZj4GgB8CYGBggF8NYDwGfAAAGH4YGBgOAACB-YCHgv8GAADGxtZ8bIAXAjwYPIBPgT4PfAAAfgwYMH4AHDAwYDAwHIKNGhgYGDgMDAYMDDgAAABg8p4MAADg8Pj8_Pjw4IL7AwAAAwODCQjgAAAYGDx-fn6DGQAHgiEEwMABAQGBLAj4_P7__38_H_-BAAzDAB8_f____vz4gICAgzEiDz8_DwcA_v78_Pz8_v4AAEIAAEI8AH9_Pz8_P39_AODw_PyEeAIBAQGEPwEAw4JRhF-BmQKAgICEmYSqB35-fjwYGBkbgpgD4MDAwITDhLGCygcenNh4OBAIEA" style='border:0' allowfullscreen></iframe>

<p>Expressions can include numbers, variables and arithmetic operators. Numbers are decimal, but can be prefixed with <kbd>$</kbd> for <a href='hexadecimal.html'>hexadecimal</a>, there are no <a href='notation.html'>precedence rules</a>.</p>

<pre>
10 LET A=6+7
20 PRINT 52+$20*A
30 END
</pre>

<p>Valid expressions arithmetic operators are <kbd>+-*/%</kbd>, bitwise operators are <kbd>&|</kbd>, logic operators are <kbd>&lt;&gt;=!</kbd>. The smallest number is -32768, the largest number is 32767.</p>

<h3>Variables</h3>

<p>Variables are single character uppercased letters of the alphabet. Some variables have special properties, here is the complete list:</p>

<ul>
	<li><kbd>R</kbd>, reads a random number.</li>
	<li><kbd>W</kbd>, reads the screen width.</li>
	<li><kbd>H</kbd>, reads the screen height.</li>
</ul>

<p>For example, if you wanted to do a program to roll a 6-sided dice using the <kbd>R</kbd>(random) variable.</p>

<pre>
10 PRINT "You rolled " R%6+1 "."
30 END
</pre>
<pre style='margin-top:-29px'>
You rolled 5.
</pre>


<h3>Loops</h3>

<p>Using a variable as counter, a program can loop over a number of lines five times:</p>

<pre>
10 LET I=0
20 PRINT "Count: " I
25 LET I=I+1
30 IF I<5 GOTO 20
40 END
</pre>
<pre style='margin-top:-29px'>
Count: 0
Count: 1
Count: 2
Count: 3
Count: 4
</pre>

<h3>Interaction</h3>

<p>The <kbd>INPUT</kbd> statement, will halt the execution and wait for an input. This can be used to store a value into a variable. For example, to capture the position of the mouse cursor: </p>

<pre>
10 PRINT "Touch the screen"
20 INPUT X, Y
30 PRINT "You touched at: " X ", " Y
50 PRINT "Press a button"
60 INPUT B
70 PRINT "You pressed: " B
80 END
</pre>

<img src="../media/refs/basic.png" width='200'>

<h3 id='manual'>Manual</h3>

<table border='1'>
	<tr>
		<th rowspan='6'>Hypervisor</th>
		<th rowspan='2'><code>RUN</code></th><td>Used to begin program execution at the lowest line number.</td></tr>
	<tr><td><pre>RUN</pre></td></tr>
	<tr><th rowspan='2'><code>LIST</code></th><td>Causes part or all of the user program to be listed. If no parameters are given, the whole program is listed. A single expression parameter in evaluated to a line number which, if it exists, is listed. </td></tr>
	<tr><td><pre>LIST 200
LIST</pre></td></tr>
	<tr><th rowspan='2'><code>CLEAR</code></th><td>Formats the user program space, deleting any previous programs. If included in a program the program becomes suicidal when the statement is executed.</td></tr>
	<tr><td><pre>CLEAR</pre></td></tr>
	
	<tr>
		<th rowspan='10'>Core</th>
		<th rowspan='2'><code>REM</code></th><td>Permits to add remarks to a program source.</td></tr>
	<tr><td><pre>REM This is a comment.</pre></td></tr>
	<tr><th rowspan='2'><code>LET</code></th><td>Assigns the value of an expression to a variable.</td></tr>
	<tr><td><pre>LET A=123/2, B=$20%2</pre></td></tr>
	<tr><th rowspan='2'><code>IF</code></th><td>If the result of the expression is not zero, the statement is executed; if False, the associated statement is skipped.</td></tr>
	<tr><td><pre>IF A>B-2 PRINT "A is greater."</pre></td></tr>
	<tr><th rowspan='2'><code>GOTO</code></th><td>Changes the sequence of program execution.</td></tr>
	<tr><td><pre>GOTO 50+A>B</pre></td></tr>
	<tr><th rowspan='2'><code>END</code></th><td>Must be the last executable statement in a program.  Failure to include an END statement will result in an error stop after the last line of the program is executed.</td></tr>
	<tr><td><pre>END</pre></td></tr>
	
	<tr>
		<th rowspan='4'>Subroutines</th>
		<th rowspan='2'><code>GOSUB</code></th><td>Changes the sequence of program execution, and remembers the line number of the GOSUB statement, so that the next occurrence of a RETURN statement will result in execution proceeding from the statement following the GOSUB.</td></tr>
	<tr><td><pre>GOSUB 220</pre></td></tr>
	<tr><th rowspan='2'><code>RETURN</code></th><td>Transfers execution control to the line following the most recent unRETURNed GOSUB.  If there is no matching GOSUB an error stop occurs. </td></tr>
	<tr><td><pre>RETURN</pre></td></tr>
	
	<tr>
		<th rowspan='4'>I/O</th>
		<th rowspan='2'><code>PRINT</code></th><td>Prints the values of the expressions and/or the contents of the strings in the console. To print the result of an expression as an <a href='ascii.html'>ascii</a> character, use <kbd>#$41</kbd>, to print the character A, end with a semi-colon to print without a linebreak.</td></tr>
	<tr><td><pre>PRINT "The result is: " A+B</pre></td></tr>
	<tr><th rowspan='2'><code>INPUT</code></th><td>Halts evaluation, and assigns the result of expressions to each of the variables listed in the argument. Expressions are entered sequencially and separated by a line break, a list of two arguments, will expect two input lines.</td></tr>
	<tr><td><pre>INPUT X, Y</pre></td></tr>
	
	<tr>
		<th rowspan='4'>File</th>
		<th rowspan='2'><code>SAVE</code></th><td>Exports your program to example.bas.</td></tr>
	<tr><td><pre>SAVE example.bas</pre></td></tr>
	<tr><th rowspan='2'><code>LOAD</code></th><td>Imports the example.bas program, replaces your current program.</td></tr>
	<tr><td><pre>LOAD example.bas</pre></td></tr>
	
	<tr>
		<th rowspan='12'>Screen</th>
		<th rowspan='2'><code>COLOR</code></th><td>Sets the interface RGB colors, see <a href='theme.html'>theme</a>.</td></tr>
	<tr><td><pre>COLOR $50f2, $b0f9, $a0f8</pre></td></tr>
	<tr><th rowspan='2'><code>CLS</code></th><td>Clears the screen.</td></tr>
	<tr><td><pre>CLS</pre></td></tr>
	<tr><th rowspan='2'><code>DRAW</code></th><td>Sets position of drawing.</td></tr>
	<tr><td><pre>DRAW 100, 320</pre></td></tr>
	<tr><th rowspan='2'><code>MODE</code></th><td>Sets drawing mode, see <a href='varvara.html#screen'>varvara</a>.</td></tr>
	<tr><td><pre>MODE 04</pre></td></tr>
	<tr><th rowspan='2'><code>SPRITE</code></th><td>Draws a <a href='icn_format.html'>sprite</a>, uses MODE.</td></tr>
	<tr><td><pre>SPRITE $1c1c, $087f, $0814, $2241</pre></td></tr>
	<tr><th rowspan='2'><code>PICT</code></th><td>Draws a picture from a file, uses MODE.</td></tr>
	<tr><td><pre>PICT image10x10.icn</pre></td></tr>
	
</table>

<ul>
	<li><a href='../etc/basic.tal.txt' target='_blank'>View source</a>, Uxntal.</li>
	<li><a href='https://rabbits.srht.site/tiny-basic/basic.rom' target='_blank'>Download ROM</a>, 4kb.</li>
	<li><a href='http://www.ittybittycomputers.com/IttyBitty/TinyBasic/TBuserMan.htm' target='_blank'>TinyBASIC User Manual</a></li>
	<li><a href='https://www.msx.org/wiki/Category:MSX-BASIC_Instructions' target='_blank'>MSX BASIC Commands</a></li>
	<li><a href='https://beebwiki.mdfs.net/VDU_23' target='_blank'>BBC Micro VDU 23</a></li>
</ul>

<img src="../media/refs/beasts19.png">
<style>
span.line { background:#ffee44; color:black }
span.cmd { background:#11eeaa; color:black }
span.link { background:white; color:black }
</style>
