<h2>10 PRINT "Hello World"</h2>

<p>This guide is written specifically for the <a href='https://git.sr.ht/~rabbits/tiny-basic' target='_blank'>Sunflower BASIC implementation</a>, but it should still give a general idea of how to use the language's primitives which are also found in most BASIC implementations.</p>

<figure>
	<img src='../media/refs/vogue-basic.jpg' width='300'/>
	<figcaption>Typical BASIC Programmer</figcaption>
</figure>

<h3>Introduction</h3>

<p>A BASIC program begins with line numbers, control-flow is done by jumping to absolute line numbers which point to compiled BASIC code data. 0 is not a valid line number.</p>

<pre>
<span class='line'>15</span> <span class='cmd'>LET</span> A=0
<span class='line'>20</span> <span class='cmd'>PRINT</span> "Hello BASIC"
<span class='line'>25</span> <span class='cmd'>LET</span> A=A+1
<span class='line'>30</span> <span class='cmd'>IF</span> A=10 GOTO 50
<span class='line'>40</span> <span class='cmd'>GOTO</span> 20
<span class='line'>50</span> <span class='cmd'>END</span>
</pre>

<h3>Interpreter</h3>

<iframe height='384' width='624' src="../etc/uxn5/index.html#r=bKABYIAGN6Dg8YAIN6Dg3oAKN6DwSoAMN6ACcIAiN6ABgIAkN4AiNoBXYAfHgCQ2gEhgB79gDCxgC9JgCY5gCgqgB2OAEDegAaGAgDeAdBAgAARgChoAYAGeoAB0YASuAABUaW55QkFTSUMKQSCBB38gaW50ZXJwcmV0ZXIKQnkgRGV2aW5lIEx1IExpbnZlZ2EKMjcgQXVnIDIwMjUAAICCNiagAXYpIAAFImAL8wBgBnICAGAAi69gAHugDuWgDrm0NO9gDMcgAA0hIaog__EiImKgAABsYiM0oAAEOGyAKDagDuGgDrngAADPgAMcIFIAA2AKk--gAAM8gGA_oAAgOIAoN7Q0YAnbISFBqiD_2yIiYoAoN2AKT2AKTKAPP2AJwmAKQ0AKZqAAAjk0YAm0YAo1QApYlIAgCiAAAWwhQP_0lIAIBpSALAggAAeCFyoFIZQg_-hsYAA5JGD_4JQPJE9gAhudIAACImyAETOACDMhYAAegAQzoAAAggIELiRg_7iBJxgB850g_9oibGD_qJSAJAggADqUYAupIAARggYgEKAAACegD7FACOShJBRABkvgAADgAAp6wACUgDAZD3ghgAYUgAoLIP_pb2wh4AAAwEB_wACUYAt0gBtRYAttASD_7G9soBnCoEAAYAukYATaQAXkgCA_oBnCOGxg_4hg__ImoFnCKyAACyIioA-ooA9-QAh4L2D_GZQgAA4ioAAA72FhNaAAAG81bGD-doAMTGD-_ZQgAAeg__5vNSJsoAfDNG81QARLoAAEOGygWcIk4AAAtB0gAAZg_-xAABhh3U8gAAwiImKgD3WgD41ACBuhITQnNC6qIP_ZIiJigDEWoBnCtKAAACggAAwmJqAZwjmAAj9gCh-AUAaqIP_kIiJshBUFQAe5oAAAgHIMOWAIXaAPMmAIE0AIuoJDDaAZwqoMJCKAFTOgWcKrgAkICDOgA_eAIDdsgDQBAACDZAQNJmD_roCtBIDrMyIAg2Ui4yIiYAhxoAAAgCA3ADhsOWw6bDxsPWyggACvOCRvOCqAAASFDAArgAwAKIARACmAFn-7OjlsnYAACCAAEWAAF686JGAAEa86eiQ7bzpsITsnoA-SQAcmJoAPP6D__zqgAAE9bA-gDuWUzwggAAchISGUIP_zITRCbA_JD80iYARHoBnCQP63D_4QA2D9lJQgAAciYP8eQAfVYP2fL2D9gpQgAAsib2D-O2D-6UAHv2D9iVxg_i8hI29g_ilg_vxAB60QZxBtImAIeED-CRCLEI8iQP5lELcQu2D9R5QgAAQiQP5WlIAZEyFg_TeUgD0IIAAJoA-4YAaFQP4-IWD9PIAAYAPNQP_REOwQ72D9LR2CMjkjQAlGER0RImD9GyZg_cA0HSAADCIjoPAAJKAPfkAGSCMjQP2qEUoRTiIioP_wbBFqEXBg_PAmYP2VjCpSHSMkoAAEOGACXUD9eBGeEaUiIkACbRHTEdmgAQ0TYPyiYAASlCD_9iKgAAAIIAADYAbWQP2klIA7CSAACCGgAOkTQAbKlIAiCSAABCFABgOUgCOBGRVg_IEDQAYVlGAIViAABmD8c0AGJZSAgEIRBqAR00AFpWwSMhI4YAMfYAN5gKJXEmgSbWD8NGABfqAAdGAIDCAACaAAdKAPiEAFemD8z2ABsmACjKAAdICoN6AAAYCqN-AGU8CsgKP3liAADEJiAmD9dmAFIED9CYAAYAHPQP_nEo8SlGD744UvCWD9JUD86xK3Er2ChjMSYPvfgAg3YPvZgAo3YPvTgAw3IkD8yhLvEvMioAAgoAxrNWAEK2AF7UD8tRMHEwxg-7Cdgb8JDSagA_88gCg3JoAjAyJg-5iCFwAIghd_KjciImAFt0D8fxMwEzVg-3ojA6AMDhVA_G8TUBNXYPtqYANxYPtkYANrYPteYANlYPtYYANfIkD8TxONE5Jg-zFgAvRA_EIPagFhYPsklCAABCJA-rlg-oudIAAHI6APwUAEaSNA-vATuxPAYPscoAD_PIAwP6AUfjgvYPr0lCBsAAUiYkD8AmD7Ae9hYTVA_-qgChIWiSAACCKgAHRg_psAYAACAgCAdAaAswkgAAoioA-ooA-DQAQUgYDqExFsoHTkE5QGIAAFYP_bImxg_9YhQP_vlCAAAiJslAaAHwogAAcCIoAAQAAHYAAEIYBeBlnCJqDv-CmFSxt-QAPIoYDoMxVsoFnCgOAyJzlABrygGXAmoBmwhSUdEWpAA6KhIYDnMzVsgOIyJqAZcCkgAA0ioPAAoA-egR5_g6AAAjkmgMUzNGwGgAgIIAAmBoAKCCAAfwaADQggAHiAIIsDIAAPgH6KAyAACAZgAHgGYACTAmwCoABvEgkgAAFsYAB3oAAmF2AEPYAotqAAIKoMJCIFN6AALxegASYXQAQSgMUQIAAWoAAAlIAgCyAACpRgBcUg-nlABekibKAoAABg-aRg-bpgAMogAAQiQADllCD_7CJsAmAD02D_xKAAAIAABoAEEzGAKgsGgD8JIAACImyBgPKBET3sEoABGQaA5RMRbGADDkADpqAAQKAANEAFsYBBGQaAGgsgAAgCIqAPuEACmgYYgEAYMWwGgFIJIAAEAkAELYAjgBQiMGxg-SCUYAUogAAIIAAElGAAESGUIP_qImyAtAaABROAGxOBCRPECSAACgKgD6igD35AAkmBgOoTEYEiAuISC4BSLoAAbIGA7xMQbGD_6WD_fYDLEoDhEhlsoAAEOIDFMaAJsYCQN6AJ5oCAN2ygASYXgNsKkDegAaGAgDeAxTCA6jHFMWD_i0D5r2ADGoAAgJYWBoD4E6AAASggAAEAgJI2YP-lIAAHYALxYP--AICUNmD_lYEPCeFg_64AAICCFgaA71CAgxZg_jIAgAAEgMUQIAACIgBg_20gAANg_4kAJmAEFyAABqAPiEABiCaAqDcmYACPgKo3oAwOFIAvPS9gAF6AFBOAGhOAKDaADjOgGbKALDeDrICvASg3gAgOGbKArDfXAYog__QiYAILgAgf4iJibKAZsqEhr4D4MzVvoBnCKSAAEaAZsiaALDeA5TOCYDMXbGAD6aAACjm0YAAMD6AAAzg0YAADTwRsYAO5BGADtYBAHx1sYAPGoAAEOTSgY2goIAAHgXkICGyggACgABBshYQJgCo3oIIuF6AAGIYPAJCAD4KkABiAHwmgLheAIjagABg5hjMAgIQjAYAkghmDE4HjACCFOxBAATSgRiYXoBiAgCw3oAUvl4AABxdsYP9-YP_mgCw2YAEzYAE2oA8JYACGYAEnoA8aYAB9YPhWQAEbYAEYoA9jYABuQAEPJzQdIAADIiJsYACjYAEutIHZMmAAU2ABIiEhNGAASkAAy6APb2AAQYA8YABLYAA5gD5gAEOAOmAAPmAA_mAAKWAAqqAT9oKFIheAKLagAAg5BTdslIAiCCAACZRgABYhlCD_8CFslAYgAAMCgGkZBCFA__EGgAoJIAAEAkAAaoAABIAwP6AUfjiAzBsJLxdsB4CAHIAACCAADoAtYP_UoH__PKCAACQ5gNklgACAIhOgJxBgABmgA-hgABOgAGRgAA2gAApgAAcDgDAYQP-ju4aBPRgMBoAwGGD_lID_gO8TAjo5bKAAIIAoN4AqgKUcOK8FN2-AJDagABg5KyAAA0D-QmxgABdg_9qgE-6AzwABiM-DEwACiOOC7QA4gB0sEiYXgECgE-5AACJg__GgFiYXgMGgFD6AlhYgAAQioBP-gJI2gAozgJQ2gA4zgOUHAACgAAQ5gCiFCR0qN4AvlxdsoADGFqAAxRaAYD8-oADEFoDAPz6AIjOBCgsEP6AAwxYmOD6gAMKBIBWAwDaAoD8-gA8zbKAAACaAUD8-JoADgDgkACaA7TMmgAE_Pj6A8bMCbKANnICoN6AAAoCqN6ANioCsN6ANkIEFCpaArDeAojYdIAABgEQBgAiAmwGACoEFDAw3bC50aGVtZQCgDcSBPwABgT8AvYAzAaMWgDIXgABg-mVA_-suc25hcmYAYAAtgCBgAEi0gN0DNGAAEIANRDohITRgAAWACkAAL5QGIAADAiJsYAAkIUD_8eD_AKAACruvOjlvQZ0g__MiA4AwGGAACEdYzyD_82JsgBsToA45gK43bIZ-AQ45gn4JbIAABmAAEiAAC4IGFASAJAlsAoAAbIBBGYAaC2yAMBmACoEGOQaACQoMbIAnGQaAChmABQoMbAKA_2yUIAACIWwhQP_2YPMynSAAByOgD8FA_RAsL5TUTwkgAAZhIZSAhBIUgAAIbIALM4AMM6AOsYACN2wAgwB_BJsEqQTjBO4E9gUpBTsFXAVmBY4FlwX7BloGCQZwBpEGpgbcBuwHDAcZBzorBCYtBCgqBCovBFgmBCx8BC48BDA-BD09BEohBE8lBFQAAABTVU5GTE9XRVIgQkFTSUMgAFRZUEUgIkhFTFAiIEZPUiBJTkZPIH8gACBCWVRFUyAERlJFRQqHJAUgUFJJTlSCKoEKDyBERVRBSUxTAFJFQURZLgCASTQARVJST1IASU5GSU5JVEUATElORQBQQVRIAEZJTEUATE9PUABESVYtQlktWkVSTwBVTkRFUoCWAgBPVoMIUk5VTUJFUgBWQVJJQUJMRQBDT01NQU5EAFJVTgB_UlVOIEJlZ2luIGV2YWx1YXRpb24gZnJvbSBzbWFsbGVzdCBsaW5lIG51bWJlci4ATElTVAB_gAUAIIQAFVByaW50IGVudGlyZSBwcm9ncmFtLgqCIwExMogjgUkBMTKDGwUyMCwgMzCIGxJzIDIwIHRvIDMwLgBDTEVBUgB_gQYGICBFcmFzZYxjLgBSRU0Af1JFTSBUaGlzIGlzIGEgY29tbWVudC4uICBMZWF2ZSByZW1hcmsuAExFgLcdRVQgWD0xMiwgWT1BKzEgIEFzc2lnbiBleHByZXNzgPtDdG8gdmFyaWFibGUuAElGAH9JRiBBPkIgUFJJTlQgQyAgRXZhbHVhdGUgb25seSB3aGVuIG5vdCB6ZXJvLgBHT1RPAH-ABQAggV8JQ29udGludWUgZYI1gGEAYYLsES4ARU5EAH9FTkQgIFRlcm1pboBUhieATAJTVUKATQJTVUKCToV7GHN1YnJvdXRpbmUgdW50aWwgUkVUVVJOLgCCBwEAf4IPkoADZnJvbYdBAS4AgdsBAH-C4gkiQSBzdHJpbmcigsIQRGlzcGxheSB0ZXh0IHdpdGiBvQZicmVhay4KjTMBOyCAAIgzCC4ASU5QVVQAf4EGCiBYLCBZICBQYXVziZOCxRF1c2VyIGlucHV0LgBMT0FEAH-ABYMRG2JhcyAgTG9hZCBiYXNpYyBmaWxlLgBTQVZFAH-ABQMgb3V0hScDU2F2ZYknBkNPTE9SAH-BBkkgJDUwZjIsICRiMGY5LCAkYTBmOCAgU2V0IGludGVyZmFjZSBjb2xvcnMuAENMUwB_Q0xSICBDbGVhciBzY3JlZW4uAERSQVcAf4AFBSAzMiwgNINAC2RyYXdpbmcgcG9zaYDYBy4ATU9ERQB_gAUBIDKKIwJtb2SAwANQUklUgMKBBwwgJDFjMWMsICQwODdmgQYiMTQsICQyMjQxICBQYWludCA4eDggc3ByaXRlLgBQSUNUAH-ABQ4gaW1hZ2UyMHgyMC5pY26ELAQxLWJpdIIbBy4AUE9LRQB_gAUJICQxMCwgJDEyM4BdBzQ1NjcsIC4ug8IFYXRhIGF0gCICLgD_gwABqlWCAQcAAAAACBQUF4AHAwAICAiBBwIAAMCDBx0AEBAgEBAIBwAPDx8PDwcAACAQEBAgIMAAwODg4MCFJQAIgj8BAACzP8D-BwBggAAFAGAAZmZmgv8dbP5sbP5sABg-YDwGfBgAAGZsGDBmRgA4bDhw3sx2gC-B_wEcMIAAAxwAOAyAAAY4AABmPP88gEIEGBh-GBiD_wEwMIAsAH6F_xwYGAADBgwYMGDAADxmbnZmZjwAGDgYGBgYfgA8ZoAYFX4AfgwYDAZmPAAMHDxsfgwMAH5gfAaADwM8YGB8gC8AfoA_BTAwADxmZoACgAcBPgaAf4B0gwMDGBgwAIBlAjAYDIJ-BX4AADAYDIB5gmcBABiAfw9qbmA-ABg8ZmZ-ZmYAfGZmgAIXADxmYGBgZjwAeGxmZmZseAB-YGB8YGB-gwcKYAA-YGBuZmY-AGaBNgJmADyAvgUYPAA-BgaBpwhmbHhweGxmAGCBAA5-AMbu_tbGxsYAZnZ-fm6ALwBmgAAAPIFvgE-ADwJ2bDaBfwBsgR8BYDyA_wB-gVcAGIBnAGaDbwxmZjwYAMbGxtb-7sYAgAwCPGZmgIeAggEAfoDdBGB-ADwwgAACPADAgP0EBgMAPAyAAAY8ABA4bMYAhQAF_gAAYDAYgg8JPAY-Zj4AYGB8ZoD_CgAAPGBgYDwABgY-gXcKAAA8Zn5gPAAcMHyAWQgAAAA-ZmY-BnyCLwRmABgAOIH_ARgAgbAEcGBgZmyA_4AVgBcFAADs_tbGgHqCL4BPgP-CDwF8YIFPAmY-BoAfAmBgYIBfDWA8BnwAABh-GBgYDgAAgfmAh4L_BgAAxsbWfGyAFwI8GDyAT4E-D3wAAH4MGDB-ABwwMGAwMByCjRkYGBg4DAwGDAw4AAAAYPKeDAAAEDh8_nw4EIL6BAAAAAMDgwoI4AAAGBg8fn5-gxoAB4IiBMDAAQEBgS0I-Pz-__9_Px__gQAMwwAfP3____78-ICAgIMxJA8_Pw8HAP7-_Pz8_P7-AABCAABCPAB_fz8_Pz9_fwDg8Pz88OCCeQIBAQGEPwEAw4JRhF-BmgKAgICEmYMxCAB-fn48GBgZG4KYA-DAwMCFxIOxgsoHHpzYeDgQCBA" style='border:0' allowfullscreen></iframe>

<p>Expressions can include numbers, variables and arithmetic operators. Numbers are decimal, but can be prefixed with <kbd>$</kbd> for <a href='hexadecimal.html'>hexadecimal</a>, there are no <a href='notation.html'>precedence rules</a>.</p>

<pre>
10 LET A=6+7
20 PRINT 52+$20*A
30 END
</pre>

<p>Valid expressions arithmetic operators are <kbd>+-*/%</kbd>, bitwise operators are <kbd>&|</kbd>, logic operators are <kbd>&lt;&gt;=!</kbd>. The smallest number is -32768, the largest number is 32767.</p>

<h3>Variables</h3>

<img src='../media/generic/sunflower.png' style="float:right;width:160px;margin-left: 30px;"/>
<p>Variables are single character uppercased letters of the alphabet. Some variables have special properties, here is the complete list:</p>

<ul>
	<li><kbd>R</kbd>, reads a random number.</li>
	<li><kbd>W</kbd>, reads the screen width.</li>
	<li><kbd>H</kbd>, reads the screen height.</li>
</ul>

<p>For example, if you wanted to do a program to roll a 6-sided dice using the <kbd>R</kbd> variable.</p>

<pre>
10 PRINT "You rolled " R%6+1 "."
30 END
</pre>
<pre style='margin-top:-29px'>
You rolled 5.
</pre>

<h3>Loops</h3>

<p>Using a variable as counter, a program can loop over a number of lines five times:</p>

<pre>
10 LET I=0
20 PRINT "Count: " I
25 LET I=I+1
30 IF I&lt;5 GOTO 20
40 END
</pre>
<pre style='margin-top:-29px'>
Count: 0
Count: 1
Count: 2
Count: 3
Count: 4
</pre>

<h3>Functions</h3>
<p>Functions are created with GOSUB, similarly to GOTO, this operation moves evaluation to a different line, except that they keep a return address in memory to be jumped back to upon RETURN.</p>

<pre>
1 LET N=5
2 GOSUB 50
3 END

49 REM Fib(N)
50 LET A=3, B=1
51 LET C=A, A=3*A-B, B=C, I=I+1
52 IF I&lt;N GOTO 51
53 PRINT "Result: " C
54 RETURN
</pre>
<pre style='margin-top:-29px'>
Result: 144
</pre>

<h3>Interaction</h3>

<p>The <kbd>INPUT</kbd> statement, will halt the execution and wait for an input. This can be used to store a value into a variable. For example, to capture the position of the mouse cursor: </p>

<pre>
10 PRINT "Touch the screen"
20 INPUT X, Y
30 PRINT "You touched at: " X ", " Y
50 PRINT "Press a button"
60 INPUT B
70 PRINT "You pressed: " B
80 END
</pre>

<img src="../media/refs/basic.png" width='200'>

<h3 id='manual'>Manual</h3>

<table border='1'>
	<tr>
		<th rowspan='6'>Hypervisor</th>
		<th rowspan='2'><code>RUN</code></th><td>Used to begin program execution at the lowest line number.</td></tr>
	<tr><td><pre>RUN</pre></td></tr>
	<tr><th rowspan='2'><code>LIST</code></th><td>Causes part or all of the user program to be listed. If no parameters are given, the whole program is listed. A single expression parameter in evaluated to a line number which, if it exists, is listed. A two expressions will print a range of lines.</td></tr>
	<tr><td><pre>LIST 200
LIST 10,30
LIST</pre></td></tr>
	<tr><th rowspan='2'><code>CLEAR</code></th><td>Formats the user program space, deleting any previous programs. If included in a program the program becomes suicidal when the statement is executed.</td></tr>
	<tr><td><pre>CLEAR</pre></td></tr>
	
	<tr>
		<th rowspan='10'>Core</th>
		<th rowspan='2'><code>REM</code></th><td>Permits to add remarks to a program source.</td></tr>
	<tr><td><pre>REM This is a comment.</pre></td></tr>
	<tr><th rowspan='2'><code>LET</code></th><td>Assigns the value of an expression to a variable.</td></tr>
	<tr><td><pre>LET A=123/2, B=$20%2</pre></td></tr>
	<tr><th rowspan='2'><code>IF</code></th><td>If the result of the expression is not zero, the statement is executed; if False, the associated statement is skipped.</td></tr>
	<tr><td><pre>IF A>B-2 PRINT "A is greater."</pre></td></tr>
	<tr><th rowspan='2'><code>GOTO</code></th><td>Changes the sequence of program execution.</td></tr>
	<tr><td><pre>GOTO 50+A>B</pre></td></tr>
	<tr><th rowspan='2'><code>END</code></th><td>Must be the last executable statement in a program.  Failure to include an END statement will result in an error stop after the last line of the program is executed.</td></tr>
	<tr><td><pre>END</pre></td></tr>
	
	<tr>
		<th rowspan='4'>Subroutines</th>
		<th rowspan='2'><code>GOSUB</code></th><td>Changes the sequence of program execution, and remembers the line number of the GOSUB statement, so that the next occurrence of a RETURN statement will result in execution proceeding from the statement following the GOSUB.</td></tr>
	<tr><td><pre>GOSUB 220</pre></td></tr>
	<tr><th rowspan='2'><code>RETURN</code></th><td>Transfers execution control to the line following the most recent unRETURNed GOSUB.  If there is no matching GOSUB an error stop occurs. </td></tr>
	<tr><td><pre>RETURN</pre></td></tr>
	
	<tr>
		<th rowspan='4'>I/O</th>
		<th rowspan='2'><code>PRINT</code></th><td>Prints the values of the expressions and/or the contents of the strings in the console. To print the result of an expression as an <a href='ascii.html'>ascii</a> character, use <kbd>#$41</kbd>, to print the character A, end with a semi-colon to print without a linebreak.</td></tr>
	<tr><td><pre>PRINT "The result is: " A+B</pre></td></tr>
	<tr><th rowspan='2'><code>INPUT</code></th><td>Halts evaluation, and assigns the result of expressions to each of the variables listed in the argument. Expressions are entered sequencially and separated by a line break, a list of two arguments, will expect two input lines.</td></tr>
	<tr><td><pre>INPUT X, Y</pre></td></tr>
	
	<tr>
		<th rowspan='4'>File</th>
		<th rowspan='2'><code>SAVE</code></th><td>Exports your program to example.bas.</td></tr>
	<tr><td><pre>SAVE example.bas</pre></td></tr>
	<tr><th rowspan='2'><code>LOAD</code></th><td>Imports the example.bas program, replaces your current program.</td></tr>
	<tr><td><pre>LOAD example.bas</pre></td></tr>
	
	<tr>
		<th rowspan='12'>Screen</th>
		<th rowspan='2'><code>COLOR</code></th><td>Sets the interface RGB colors, see <a href='theme.html'>theme</a>.</td></tr>
	<tr><td><pre>COLOR $50f2, $b0f9, $a0f8</pre></td></tr>
	<tr><th rowspan='2'><code>CLS</code></th><td>Clears the screen.</td></tr>
	<tr><td><pre>CLS</pre></td></tr>
	<tr><th rowspan='2'><code>DRAW</code></th><td>Sets position of drawing.</td></tr>
	<tr><td><pre>DRAW 100, 320</pre></td></tr>
	<tr><th rowspan='2'><code>MODE</code></th><td>Sets drawing mode, see <a href='varvara.html#screen'>varvara</a>.</td></tr>
	<tr><td><pre>MODE 04</pre></td></tr>
	<tr><th rowspan='2'><code>SPRITE</code></th><td>Draws a <a href='icn_format.html'>sprite</a>, uses MODE.</td></tr>
	<tr><td><pre>SPRITE $1c1c, $087f, $0814, $2241</pre></td></tr>
	<tr><th rowspan='2'><code>PICT</code></th><td>Draws a <a href='icn_format.html#filename'>picture</a> from a file, uses MODE.</td></tr>
	<tr><td><pre>PICT image10x10.icn
PICT image12x18.chr</pre></td></tr>
	
</table>

<ul>
	<li><a href='../etc/basic.tal.txt' target='_blank'>View source</a>, Uxntal.</li>
	<li><a href='https://rabbits.srht.site/tiny-basic/basic.rom' target='_blank'>Download ROM</a>, 4kb.</li>
	<li><a href='http://www.ittybittycomputers.com/IttyBitty/TinyBasic/TBuserMan.htm' target='_blank'>TinyBASIC User Manual</a></li>
	<li><a href='https://www.msx.org/wiki/Category:MSX-BASIC_Instructions' target='_blank'>MSX BASIC Commands</a></li>
	<li><a href='https://beebwiki.mdfs.net/VDU_23' target='_blank'>BBC Micro VDU 23</a></li>
</ul>

<img src="../media/refs/beasts19.png">
<style>
span.line { background:#ffdd44; color:black }
span.cmd { background:#11eeaa; color:black }
span.link { background:white; color:black }
</style>
