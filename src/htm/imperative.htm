<h2>Imperative languages organize programs in procedures and
subroutines.</h2>

<h3>Fizzbuzz, in <a href='basic.html'>BASIC</a>.</h3>

<pre>
1 REM This is a comment.
2 LET I:I+1, F:I%3=0, B:I%5=0
3 IF F PRINT "FIZZ";
4 IF B PRINT "BUZZ";
5 IF F+B=0 PRINT I;
6 PRINT ""
7 IF I<101 GOTO 2
8 END
</pre>

<h3>Fizzbuzz, in <a href='ansi_c.html'>C</a>.</h3>

<pre>
#include &lt;stdio.h&gt;

int main(void) {
	for (int i = 1; i <= 100; i++) {
		if (i % 15 == 0)
			printf("FizzBuzz\n");
		else if (i % 3 == 0)
			printf("Fizz\n");
		else if (i % 5 == 0)
			printf("Buzz\n");
		else
			printf("%d\n", i);
	}
	return 0;
}
</pre>

<h3>Fizzbuzz, in <a href='pascal.html'>Pascal</a>.</h3>
<pre>
program FizzBuzz;
var
	i : integer;
begin
	for i := 1 to 100 do
		if i mod 15 = 0 then
			writeln('FizzBuzz')
		else if i mod 3 = 0 then
			writeln('Fizz')
		else if i mod 5 = 0 then
			writeln('Buzz')
		else
			writeln(i)
	end.
</pre>

<h3>Fizzbuzz, in <a href='smalltalk.html'>Smalltalk-80</a>.</h3>

<pre>
| i fizz buzz |
i _ 1.
100 timesRepeat: [
	fizz _ i\\3=0.
	buzz _ i\\5=0.
	(fizz) ifTrue: [Transcript show: 'Fizz'].
	(buzz) ifTrue: [Transcript show: 'Buzz'].
	(fizz | buzz) ifFalse: [Transcript show: i printString].
	Transcript cr.
	i _ i + 1.
]
</pre>


<h3>Fizzbuzz, in <a href='hypertalk.html'>Hypercard</a>.</h3>

<pre>
on mouseUp
	put 1 into n
	put 1 into fizz
	put 1 into buzz
	repeat 100
		if fizz is 3 and buzz is 5 then
			put "FizzBuzz" into line n of background field "Output"
			put 0 into fizz
			put 0 into buzz
		else if fizz is 3 then
			put "Fizz" into line n of background field "Output"
			put 0 into fizz
		else if fizz is 5 then
			put "Buzz" into line n of background field "Output"
			put 0 into buzz
		else
			put n into line n of background field "Output"
		end if
		put n+1 into n
		put fizz+1 into fizz
		put buzz+1 into buzz
	end repeat
end mouseUp
</pre>
