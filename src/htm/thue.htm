<h2>Thue is a string-rewriting system.</h2>

<p>A Thue program consists of two parts: a list of <a
href='rewriting.html'>substitution rules</a>, which is terminated with a line
having both sides of the operator empty, followed by a string representing the
initial program state:</p>

<pre>
#::=<span style='color:#777'>Unused rules are comments</span>
a::=~Hello Thue!
::=
[a] <span style='color:#777; float:right'>[]</span>
</pre>

<iframe src="../etc/thuerepl/index.html" frameborder="0" class='frame'></iframe>

<style>
.frame { overflow: hidden; height: 450px; margin-bottom: 15px; border-radius:5px }
</style>

<p>Execution consists of picking, from the list of rules, an arbitrary rule whose original string exists as a substring somewhere in the program state, and replacing that substring by the rule's replacement string. This process repeats until there are no rules that can be applied, at which point, the program ends. </p>

<pre>
#::=<span style='color:#777'>Increment binary number</span>
1_::=1++
0_::=1
01++::=10
11++::=1++0
_0::=_
_1++::=10
::=
_10010011_ <span style='color:#777; float:right'>_10010100</span>
</pre>

<img src='../media/refs/bthennota.png' width='100'/>

<h3>I/O</h3>

<p>Added to this system are two strings which are used to permit Thue to communicate with the outside world. The first of these is the <b>input</b> symbol(:::) which is actually the left-side of an implicit rule of which the user input is a component. The input symbol, therefore, is replaced by a line of text received from the "input stream."</p>

<p>As a counterpart of input, the <b>output</b> symbol(~) is supplied. Like the input symbol, the output symbol triggers an implicit rule which, in this case, encompasses the "output stream."  The specific effect is that all text to the right of the output symbol in the rhs of a production is sent to the output stream.</p>

<p>Note that either (or both) of these implicit rules may be overridden by providing explicit rules that perform some other task.</p>

<pre>
#::=<span style='color:#777'>Sierpinski's triangle, backticks are linebreaks</span>
X::=~_
Y::=~*
Z::=~`
_.::=._X
_*::=*_Y
._|::=.Z-|
*_|::=Z
..-::=.-.
**-::=*-.
*.-::=*-*
.*-::=.-*
@.-::=@_.
@*-::=@_*
::=
@_*...............................|
</pre>

<q>It is pitch black. You are likely to be eaten by a Thue.</q>

<img src='../media/refs/grue.png' style='width:300px' title='Bivotar & Juranda, Zork'/>

<ul>
	<li><a href='https://esolangs.org/wiki/Thue' target='_blank'>On Esolangs</a></li>
	<li><a href='https://git.sr.ht/~rabbits/uxn-games/tree/main/item/thue' target='_blank'>Interpreter</a>, written in Uxntal. <a href='https://www.youtube.com/watch?v=A8f7IsQ8ENQ' target='_blank'>Video</a></li>
	<li><a href='https://git.catseye.tc/Wanda/' target='_blank'>Wanda</a>, concatenative language meets string rewriting.</li>
</ul>

<!--

For want of a nail,
	the shoe was lost.
For want of a shoe,
	the horse was lost.
For want of a horse,
	the knight was lost.
For want of a knight,
	the battle was lost.
So it was a kingdom was lost,
	all for the want of a nail.

	George Herbert, Jacula Prudentum

-->
