( The Bequest Globe )

|00 @System/vector $2 &expansion $2 &wst $1 &rst $1 &metadata $2 &r $2 &g $2 &b $2 &debug $1 &state $1
|a0 @File/vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2
|b0 @File2/vector $2 &success $2 &stat $2 &delete $1 &append $1 &name $2 &length $2 &read $2 &write $2

|000

	@term/name $16 &parent $16 &diary $6 &pict $4

|100

@on-reset ( -> )
	( | initialize )
	;dict/lexicon-path .File/name DEO2
	#2000 .File/length DEO2
	;lexicon/buf
	( ) DUP2 .File/read DEO2
	( ) DUP2 #0a00 str/<swap>
	&>w
		INC2 INC2 <init-page>
		<build-page>
		str/cap LDAk ?&>w
	POP2
	( Halt. ) #800f DEO
	BRK

(
@|build )

@<init-page> ( name* -- name* )
	STH2k ;dict/html-ext ;&buf STH2r <make-path-ext>
	;&site-path .File2/name DEO2
	#0001 .File2/length DEO2
	( cleanup ) #0000 #0100 mem/<clr>
	DUP2 <load-diary>
	DUP2 <load-incoming>
	( | verify orphans )
	.File/success DEI2 ORA ?{ DUP2 ;err/orphan <print-warning> }
	( | fill name )
	DUP2 ;term/name str/<copy>
	DUP2 find-parent ;term/parent str/<copy>
	( | fill diary )
	diary/find DUP2 #ffff EQU2 ?{
		DUP2 ;term/diary str/<copy>
		;term/diary [ LIT2 09 00 ] str/<swap> }
	POP2 JMP2r

	&site-path [ "site/ &buf $30 ]

@<load-diary> ( name* -- )
	;&buf str/<copy>
	;&buf [ LIT2 20 "_ ] str/<swap>
	;&log-path .File/name DEO2
	#1000 .File/length DEO2
	;diary/buf DUP2 [ LIT2 &length $2 ] mem/<clr>
	DUP2 .File/read DEO2
	#0a00 str/<swap>
	.File/success DEI2 ,&length STR2
	JMP2r

	&log-path [ "tmp/log- &buf $30 ]

@<load-incoming> ( name* -- )
	;&buf str/<copy>
	;&buf [ LIT2 20 "_ ] str/<swap>
	;&map-path .File/name DEO2
	#1000 .File/length DEO2
	;incoming/buf DUP2 [ LIT2 &length $2 ] mem/<clr>
	DUP2 .File/read DEO2
	#0a00 str/<swap>
	.File/success DEI2 ,&length STR2
	JMP2r

	&map-path [ "tmp/map- &buf $30 ]

%log/get-rune ( log* -- log* rune ) {
	DUP2 #0005 ADD2 LDA }

%log/has-picture ( log* picture* -- flag ) {
	SWP2 #0006 ADD2 str/cmp3 }

%log/has-no-picture ( log* -- log* t ) {
	DUP2 ;dict/no-picture log/has-picture }

(
@|Html )

%html/<length> ( src* length* -- ) {
	.File2/length DEO2
	.File2/write DEO2
	#0001 .File2/length DEO2 }

%html/<quoted> ( str* -- ) {
	[ LIT2r =ascii/quote LITr -File2/write ] DEO2kr
	html/<str>
	DEO2r }

%html/<attribute> ( body* attr* -- ) {
	;ascii/space .File2/write DEO2
	html/<str>
	;ascii/equal .File2/write DEO2
	html/<quoted> }

%html/<open> ( tag* -- ) {
	;ascii/lt .File2/write DEO2
	html/<str>
	;ascii/gt .File2/write DEO2 }

%html/<open-class> ( class* tag* -- ) {
	;ascii/lt .File2/write DEO2
	html/<str>
	;dict/class-attr html/<attribute>
	;ascii/gt .File2/write DEO2 }

%html/<close> ( tag* -- ) {
	;ascii/lt .File2/write DEO2
	;ascii/slash .File2/write DEO2
	html/<str>
	;ascii/gt .File2/write DEO2 }

%html/<auto> ( str* tag* -- ) {
	DUP2 html/<open>
	SWP2 html/<str>
	html/<close> }

%html/<img> ( src* alt* -- ) {
	;ascii/lt .File2/write DEO2
	;dict/img-tag html/<str>
	;dict/alt-attr html/<attribute>
	;dict/src-attr html/<attribute>
	;ascii/gt .File2/write DEO2 }

%html/<str> ( addr* -- ) {
	DUP2 str/scap-1 OVR2 SUB2 html/<length> }

(
@|Build )

@<build-page> ( name* -- name* )
	( | render )
	;dict/doctype html/<str>
	;dict/html-tag html/<open>
	( | head )
	;dict/head-tag html/<open>
	( | head/meta )
	;dict/meta-head-path <build-page-include>
	<write-opengraph>
	( | head/title )
	;dict/title-tag html/<open>
	;dict/title-txt html/<str>
	;ascii/space .File2/write DEO2
	;dict/mdash-entity-txt html/<str>
	;ascii/space .File2/write DEO2
	DUP2 html/<str>
	;dict/title-tag html/<close>
	;dict/head-tag html/<close>
	( | body )
	;dict/body-tag html/<open>
	;dict/meta-header-path <build-page-include>
	<build-page-nav>
	<build-page-main>
	;dict/meta-footer-path <build-page-include>
	;dict/body-tag html/<close>
	;dict/html-tag html/<close>
	JMP2r

@<build-page-nav> ( name* -- name* )
	;dict/nav-tag html/<open>
	DUP2 #0002 SUB2 LDA chr/hex STHk #00 EQU ?{
		STHkr #02 LTH ?{
			DUP2 find-parent find-parent <build-children>
			POP2 }
		DUP2 find-parent <build-children>
		POP2 }
	POPr <build-children>
	;dict/nav-tag html/<close>
	;ascii/line .File2/write DEO2
	JMP2r

@<build-children> ( name* -- name* )
	;dict/ul-tag html/<open>
	( stash depth ) DUP2k #0002 SUB2 LDA chr/hex STH
	( start after ) str/cap
	&>w
		( stop at sibling ) LDAk chr/hex STHkr EQU ?&end
		( when depth+1 ) LDAk chr/hex STHkr INC NEQ ?{
			;dict/li-tag html/<open>
			INC2k INC2 <write-link>
			;dict/li-tag html/<close> }
		INC2 INC2 str/cap LDAk ?&>w
	&end ( name* . depth -- )
	POP2 POPr ;dict/ul-tag html/<close>
	JMP2r

@<build-page-main> ( name* -- name* )
	;dict/main-tag html/<open>
	( | picture )
	;term/pict LDA #00 EQU ?{ ;term/diary <build-module-photo> }
	( body ) <build-page-body>
	( module ) <build-page-module>
	( events ) <build-page-events>
	( incoming ) <build-page-incoming>
	( close ) ;dict/main-tag html/<close>
	JMP2r

@<build-page-body> ( name* -- name* )
	STH2k ;dict/htm-ext ;&buf STH2r <make-path-ext>
	;&htm-path !<build-page-include>

	&htm-path [ "src/htm/ &buf $30 ]

@<build-page-include> ( path* -- )
	DUP2 .File/name DEO2
	#8000 .File/length DEO2
	[ LITr 00 ] ;workarea
	&>s
		DUP2 .File/read DEO2
		.File/success DEI2
		( ) DUP2 .File2/length DEO2
		( ) #0000 EQU2 ?{
			DUP2 .File2/write DEO2
			INCr !&>s }
	POP2 STHr ?{ DUP2 ;err/source <print-error> }
	POP2
	( restore ) #0001 .File2/length DEO2
	JMP2r

@<build-page-module> ( term* -- term* )
	DUP2 #0001 SUB2 LDA
	( ) DUP [ LIT ", ] NEQ ?{ POP !<build-module-album> }
	diary/count #0002 LTH2 ?{ ;term/name ;err/hidden <print-warning> }
	( ) DUP [ LIT "; ] NEQ ?{ POP !<build-module-portal> }
	( ) DUP [ LIT ". ] NEQ ?{ POP !<build-module-both> }
	( ) [ LIT ": ] NEQ ?{ !<build-module-archive> }
	JMP2r

@<build-page-events> ( name* -- name* )
	;dict/ul-tag html/<open>
	;diary/buf
	&>w
		log/get-rune [ LIT "+ ] NEQ ?{
			;dict/li-tag html/<open>
			DUP2 <build-module-event>
			;dict/li-tag html/<close> }
		str/cap LDAk ?&>w
	POP2 ;dict/ul-tag html/<close>
	JMP2r

@<build-page-incoming> ( -- )
	;incoming/buf LDAk ?{ POP2 JMP2r }
	;dict/incoming-txt ;dict/p-tag html/<open-class>
	;dict/incoming-txt ;dict/b-tag html/<auto>
	[ LIT2 00 _&last ] STR
	;ascii/space .File2/write DEO2
	&>w
		DUP2 [ LIT2 &last $2 ] str/cmp ?{
			DUP2 <write-link>
			;ascii/space .File2/write DEO2
			DUP2 ,&last STR2 }
		str/cap LDAk ?&>w
	POP2 ;dict/p-tag html/<close>
	JMP2r

@<build-module-album> ( name* -- name* )
	;diary/buf
	&>w
		log/has-no-picture ?{
			DUP2 ;term/pict log/has-picture ?{ DUP2 <build-module-photo> } }
		str/cap LDAk ?&>w
	POP2 JMP2r

@<build-module-portal> ( -- )
	( stash depth ) DUP2k #0002 SUB2 LDA chr/hex STH
	( start after ) str/cap
	&>w
		( stop at sibling ) LDAk chr/hex STHkr EQU ?&end
		( when depth+1 ) LDAk chr/hex STHkr INC NEQ ?{
			INC2k INC2 <load-diary>
			diary/find DUP2 #ffff EQU2 ?{ DUP2 <build-module-photo> }
			POP2 }
		INC2 INC2 str/cap LDAk ?&>w
	&end ( name* . depth -- )
	POP2 POPr
	( restore diary ) DUP2 !<load-diary>

@<build-module-archive> ( name* -- name* )
	( stash depth ) DUP2k #0002 SUB2 LDA chr/hex STH
	( start after ) str/cap
	&>w
		( stop at sibling ) LDAk chr/hex STHkr EQU ?&end
		( when depth+1 ) LDAk chr/hex STHkr INC NEQ ?{ INC2 INC2 <build-page-body> }
		INC2 INC2 str/cap LDAk ?&>w
	&end ( name* . depth -- )
	POP2 POPr JMP2r

@<build-module-both> ( name* -- name* )
	( stash depth ) DUP2k #0002 SUB2 LDA chr/hex STH
	( start after ) str/cap
	&>w
		( stop at sibling ) LDAk chr/hex STHkr EQU ?&end
		( when depth+1 ) LDAk chr/hex STHkr INC NEQ ?{
			INC2k INC2 <load-diary>
			diary/find DUP2 #ffff EQU2 ?{ DUP2 <build-module-photo> }
			POP2 }
		( when depth+1 ) LDAk chr/hex STHkr INC NEQ ?{ INC2 INC2 <build-page-body> }
		INC2 INC2 str/cap LDAk ?&>w
	&end ( name* . depth -- )
	POP2 POPr JMP2r

@<build-module-event> ( diary* -- )
	( clip bound ) DUP2 #0005 ADD2 STH2
	( clip start ) #00 STH2kr STA
	( clip wrap ) ;dict/code-tag html/<auto>
	( clip restore ) [ LIT "+ ] STH2r STA
	( event spacer ) ;ascii/space .File2/write DEO2
	;dict/mdash-entity-txt html/<str>
	;ascii/space .File2/write DEO2
	( event name ) DUP2 #000a ADD2 walk-seg html/<str>
	JMP2r

@<build-module-photo> ( diary* -- )
	LDAk ?{ POP2 JMP2r }
	;dict/figure-tag html/<open>
	( | copy number )
	DUP2 #0006 ADD2
	( > x00 ) LDAk ;&bufa STA
	( > 0xx ) INC2 LDA2 ;&bufb STA2
	;&diary-path
	( + image ) OVR2 #000a ADD2 walk-seg STH2k html/<img>
	;dict/figcaption-tag html/<open>
	;term/name OVR2 #000a ADD2 str/seg ?{
		DUP2 extract-term <write-link>
		;ascii/space .File2/write DEO2
		;dict/mdash-entity-txt html/<str>
		;ascii/space .File2/write DEO2 }
	( + title ) STH2r html/<str>
	;dict/right-txt ;dict/span-tag html/<open-class>
	( + date ) #0005 html/<length>
	;dict/span-tag html/<close>
	;dict/figcaption-tag html/<close>
	;dict/figure-tag html/<close>
	;ascii/line .File2/write DEO2
	JMP2r

	&diary-path "../media/diary/ &bufa $1 &bufb $2 ".jpg $1

(
@|helpers )

@prev-nil ( addr* -- addr* )
	&>w
		LDAk #00 EQU ?{ #0001 SUB2 LDAk ?&>w }
	JMP2r

@next-tab ( addr* -- addr* )
	&>w
		LDAk #09 EQU ?{ INC2 LDAk ?&>w }
	JMP2r

@walk-seg ( str* -- next* )
	&>w
		INC2 LDAk #1f GTH ?&>w
	INC2 JMP2r

@extract-term ( diary* -- term* )
	[ LIT2 00 _&buf ] STR
	#000a ADD2
	( clip bound ) DUP2 next-tab STH2
	( clip start ) #00 STH2kr STA
	( clip wrap ) ;&buf str/<cat>
	( clip restore ) #09 STH2r STA
	;&buf JMP2r
	&buf $16

@<make-path-ext> ( ext* buf* str* -- )
	OVR2 str/<copy>
	DUP2 [ LIT2 20 "_ ] str/<swap> !str/<cat>

(
@|tools )

@diary/find ( -- diary* )
	;&buf
	&>wf
		log/has-no-picture ?{ JMP2r }
		str/cap LDAk ?&>wf
	POP2 #ffff JMP2r

@diary/count ( -- count* )
	[ LIT2r 0000 ] ;diary/buf
	&>wc
		log/has-no-picture ?{ INC2r }
		str/cap LDAk ?&>wc
	POP2 STH2r JMP2r

@find-parent ( term* -- parent* )
	DUP2 #0002 SUB2 LDA chr/hex ?{ JMP2r }
	prev-nil INC2 LDAk chr/hex #01 SUB ,&depth STR
	;lexicon/buf SWP2
	&>l
		#0001 SUB2 prev-nil INC2k LDA chr/hex [ LIT &depth $1 ] NEQ ?{
			NIP2 INC2 INC2 INC2 JMP2r }
		LTH2k ?&>l
	#0002 JMP2r

(
@|framework )

@<write-opengraph> ( name* -- name* )
	DUP2 ;dict/og-title <write-meta-og>
	STH2k ;dict/html-ext ;&buf STH2r <make-path-ext>
	;&url ;dict/og-url <write-meta-og>
	;term/diary LDAk ?{ POP2 ;&default-image ;dict/og-image !<write-meta-og> }
	#0006 ADD2
	( > x00 ) LDAk ,&bufa STR
	( > 0xx ) INC2 LDA2 ,&bufb STR2
	;&image ;dict/og-image !<write-meta-og>

	&image "https://wiki.xxiivv.com/media/diary/ &bufa $1 &bufb $2 ".jpg $1
	&url "https://wiki.xxiivv.com/site/ &buf $30
	&default-image "https://wiki.xxiivv.com/media/ "services/rss.jpg $1

@<write-link> ( name* -- )
	;&a html/<str>
	DUP2 [ LIT2 20 "_ ] str/<swap>
	DUP2 html/<str>
	DUP2 [ LIT2 "_ 20 ] str/<swap>
	;dict/html-ext html/<str>
	;ascii/quote .File2/write DEO2
	DUP2 ;term/name str/cmp #00 EQU ?{ ;dict/self-txt ;dict/class-attr html/<attribute> }
	DUP2 ;term/parent str/cmp #00 EQU ?{ ;dict/parent-txt ;dict/class-attr html/<attribute> }
	;ascii/gt .File2/write DEO2
	html/<str>
	;dict/a-tag html/<close>
	JMP2r

	&a "<a 20 "href=" $1

@<write-meta-og> ( content* property* -- )
	;ascii/lt .File2/write DEO2
	;dict/meta-tag html/<str>
	;dict/property-attr html/<attribute>
	;dict/content-attr html/<attribute>
	;ascii/slash .File2/write DEO2
	;ascii/gt .File2/write DEO2
	JMP2r

@<print-warning> ( name* msg* -- )
	( msg ) str/<print>
	( name ) str/<print>
	#0a18 DEO
	JMP2r

@<print-error> ( name* msg* -> )
	( msg ) str/<print>
	( name ) str/<print>
	#0a18 DEO
	#010f DEO
	BRK

(
@|stdlib )

@chr/hex ( c -- <val> )
	( dec ) LIT "0 SUB DUP #09 GTH [ JMP JMP2r ]
	( hex ) #27 SUB DUP #0f GTH [ JMP JMP2r ]
	( err ) POP #ff JMP2r

@str/<print> ( str* -- )
	&>wp
		LDAk DUP ?{ POP POP2 JMP2r }
		#18 DEO
		INC2 !&>wp

@str/<cat> ( src* dst* -- )
	str/scap-1
	( >> )

@str/<copy> ( src* dst* -- )
	STH2
	&>wo
		LDAk #00 STH2kr STA2
		INC2r INC2 LDAk ?&>wo
	POP2 POP2r JMP2r

@str/<swap> ( str* a b -- )
	,&b STR
	,&a STR
	&>w
		LDAk [ LIT &a $1 ] NEQ ?{
			STH2k [ LIT &b $1 ] STH2r STA }
		INC2 LDAk ?&>w
	POP2 JMP2r

@str/scap-1 ( str* -- end* )
	&>w2
		LDAk ?{ JMP2r }
		INC2 !&>w2

@str/cap ( str* -- end* )
	&>wc
		LDAk ?{ INC2 JMP2r }
		INC2 !&>wc

@str/cmp ( a* b* -- bool )
	DUP2k /cap SWP2 SUB2 SWP2 !mem/cmp

@str/seg ( a* b* -- f )
	STH2
	&>l
		LDAk LDAkr STHr NEQ ?{
			INC2k LDA #00 EQU ?{ INC2 INC2r !&>l } }
	LDA LDAr STHr EQU JMP2r

@str/cmp3 ( a* b* -- f )
	STH2
	LDAkr LDAk STHr NEQ ?{ INC2r INC2 }
	LDA2r LDA2 STH2r EQU2 JMP2r

@mem/cmp ( a* length* b* -- t )
	STH2
	OVR2 ADD2 SWP2
	&>l
		EQU2k ?{
			LDAk LDAkr STHr NEQ ?{ INC2 INC2r !&>l } }
	POP2r EQU2 JMP2r

@mem/<clr> ( dst* len* -- )
	,&length STR2
	,&dst STR2
	;&mmu .System/expansion DEO2
	JMP2r

	&mmu [ 00 &length $2 0000 &dst $2 00 ]

(
@|dict )

@dict
	&meta-head-path "src/htm/meta_head.htm $1
	&meta-header-path "src/htm/meta_header.htm $1
	&meta-footer-path "src/htm/meta_footer.htm $1
	&lexicon-path "src/tables/lexicon $1
	&self-txt "self $1
	&mdash-entity-txt "&mdash; $1
	&parent-txt "parent $1
	&title-txt "XXIIVV $1
	&class-attr "class $1
	&html-ext ".html $1
	&htm-ext ".htm $1
	&doctype "<!DOCTYPE 20 "html> $1
	&html-tag "html $1
	&head-tag "head $1
	&meta-tag "meta $1
	&title-tag "title $1
	&body-tag "body $1
	&nav-tag "nav $1
	&main-tag "main $1
	&p-tag "p $1
	&b-tag "b $1
	&ul-tag "ul $1
	&li-tag "li $1
	&a-tag "a $1
	&span-tag "span $1
	&img-tag "img $1
	&code-tag "code $1
	&figure-tag "figure $1
	&figcaption-tag "figcaption $1
	&og-title "og:title $1
	&og-image "og:image $1
	&og-url "og:url $1
	&src-attr "src $1
	&alt-attr "alt $1
	&property-attr "property $1
	&content-attr "content $1
	&no-picture "000 $1
	&incoming-txt "incoming $1
	&right-txt "right $1

@ascii &space 20 &line 0a
	&lt "<
	&gt ">
	&equal "=
	&quote ""
	&slash "/

@err
	&source "-- 20 "Source: 20 $1
	&orphan "-- 20 "Orphan: 20 $1
	&hidden "-- 20 "Hidden: 20 $1

(
@|memory )

@lexicon/buf $2000

@diary/buf $1000

@incoming/buf $1000

@workarea

